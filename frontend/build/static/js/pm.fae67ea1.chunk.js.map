{"version":3,"file":"static/js/pm.fae67ea1.chunk.js","mappings":"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","sources":["components/pm/PmRequestedManpowerDetail.js","components/pm/PmProgressReport.js","components/chats/PmChat.js","components/pm/PmMatRequestDetailWrapper.js","components/pm/PmViewDailyLogs.js","components/pm/PmManpowerList.js","components/pm/PmViewProjects.js","components/pm/PmRequestManpower.js","components/pm/PMDailyLogs.js","components/pm/PmDailyLogsList.js","components/pm/PM_Manpower_Request_List.js","components/pm/PmAllProjects.js","components/pm/PmMatRequestListWrapper.js","components/pm/PmDash.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport api from '../../api/axiosInstance';\r\nimport AppHeader from '../layout/AppHeader';\r\nimport {\r\n  FaArrowLeft,\r\n  FaEdit,\r\n  FaTimes,\r\n  FaCalendarPlus,\r\n  FaUserTie,\r\n  FaProjectDiagram,\r\n  FaFileAlt,\r\n  FaCheckCircle,\r\n  FaExclamationTriangle,\r\n  FaHourglassHalf,\r\n  FaUsers,\r\n  FaCheck\r\n} from 'react-icons/fa';\r\nimport '../style/pm_style/Pm_ManpowerRequestDetail.css';\r\n\r\n// Simple status meta (used for badge / icon mapping)\r\nconst STATUS_META = {\r\n  approved: { label: 'Approved', icon: <FaCheckCircle />, tone: 'approved' },\r\n  rejected: { label: 'Rejected', icon: <FaTimes />, tone: 'rejected' },\r\n  pending: { label: 'Pending', icon: <FaHourglassHalf />, tone: 'pending' },\r\n  archived: { label: 'Archived', icon: <FaFileAlt />, tone: 'archived' }\r\n};\r\n\r\nexport default function PmRequestedManpowerDetail() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  // read user first (avoid TDZ)\r\n  const token = localStorage.getItem('token');\r\n  const stored = localStorage.getItem('user');\r\n  const user = stored ? JSON.parse(stored) : null;\r\n  const userId = user?._id || user?.id || null;\r\n  const userRole = user?.role;\r\n  const [userName] = useState(() => user?.name || 'User');\r\n\r\n  // profile menu logic removed (handled by AppHeader)\r\n\r\n  // request + PM project\r\n  const [request, setRequest] = useState(null);\r\n  const [pmProject, setPmProject] = useState(null);\r\n\r\n  // UI state\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [markReceived, setMarkReceived] = useState(false);\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [busy, setBusy] = useState(false);\r\n  \r\n  // Confirmation modal states\r\n  const [showCancelConfirm, setShowCancelConfirm] = useState(false);\r\n  const [showArchiveConfirm, setShowArchiveConfirm] = useState(false);\r\n  const [archiveReason, setArchiveReason] = useState('');\r\n  // unified modal (info/success/error)\r\n  const [modal, setModal] = useState({ open:false, title:'', message:'', type:'info', actions:[] });\r\n  const openModal = (cfg) => setModal({ open:true, ...cfg, actions: (cfg.actions||[]) });\r\n  const closeModal = () => setModal(m => ({ ...m, open:false }));\r\n  // rejection dialog\r\n  const [showRejectModal, setShowRejectModal] = useState(false);\r\n  const [rejectReason, setRejectReason] = useState('');\r\n  // received confirmation modal\r\n  const [showReceiveConfirm, setShowReceiveConfirm] = useState(false);\r\n  // completion (return) confirmation modal\r\n  const [showReturnConfirm, setShowReturnConfirm] = useState(false);\r\n\r\n  // manpower selection (from THIS PM's project)\r\n  const [availableManpowers, setAvailableManpowers] = useState([]);\r\n  const [selectedManpowerIds, setSelectedManpowerIds] = useState([]);\r\n\r\n  const isPM = userRole === 'Project Manager';\r\n\r\n  // logout handled by AppHeader\r\n\r\n  // load request\r\n  useEffect(() => {\r\n    const run = async () => {\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n  const { data } = await api.get(`/manpower-requests/${id}`);\r\n  setRequest(data);\r\n  setMarkReceived(!!data.received);\r\n      } catch {\r\n        setError('Failed to load request');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    run();\r\n  }, [id]);\r\n\r\n  // am I the creator?\r\n  const isMine = useMemo(() => {\r\n    const creatorId = request?.createdBy?._id || request?.createdBy?.id || request?.createdBy;\r\n    return creatorId && userId && creatorId === userId;\r\n  }, [request, userId]);\r\n\r\n  const isApproved = (request?.status || '').toLowerCase() === 'approved';\r\n  const returnDateReached = useMemo(()=>{\r\n    if (!request?.returnDate) return false;\r\n    try { return new Date() >= new Date(request.returnDate); } catch { return false; }\r\n  }, [request?.returnDate]);\r\n  const donorIds = useMemo(()=>{\r\n    return (request?.originalAssignments||[])\r\n      .map(o=> o.donorProjectManager?._id || o.donorProjectManager)\r\n      .filter(Boolean);\r\n  }, [request]);\r\n  const isDonorPM = isPM && !isMine && donorIds.includes(userId);\r\n\r\n  // load THIS PM's assigned project (source of manpower)\r\n  useEffect(() => {\r\n    if (!token || !userId || !isPM) return;\r\n    const loadPmProject = async () => {\r\n      try {\r\n        const { data } = await api.get(`/projects/assigned/projectmanager/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setPmProject(data && data._id ? data : null);\r\n      } catch {\r\n        setPmProject(null);\r\n      }\r\n    };\r\n    loadPmProject();\r\n  }, [token, userId, isPM]);\r\n\r\n  // fetch manpower ONLY from this PM's project that matches the requested types\r\n  useEffect(() => {\r\n    if (!request || isMine || !isPM || !pmProject?._id) return;\r\n\r\n    const fetchManpowerFromPmProject = async () => {\r\n      try {\r\n        const { data } = await api.get('/manpower'); // backend does NOT filter by project yet\r\n        const arr = Array.isArray(data) ? data : [];\r\n        \r\n        // Get the requested manpower types from the request\r\n        const requestedTypes = (request.manpowers || []).map(mp => mp.type);\r\n        \r\n        const filtered = arr.filter(m => {\r\n          const ap = m.assignedProject?._id || m.assignedProject || m.project || m.homeProject;\r\n          const projectMatch = ap && String(ap) === String(pmProject._id);\r\n          \r\n          // Only include manpower whose position matches the requested types\r\n          const typeMatch = requestedTypes.includes(m.position);\r\n          \r\n          return projectMatch && typeMatch;\r\n        });\r\n        setAvailableManpowers(filtered);\r\n      } catch (e) {\r\n        console.error('Manpower fetch failed', e);\r\n        setAvailableManpowers([]);\r\n      }\r\n    };\r\n\r\n    fetchManpowerFromPmProject();\r\n  }, [request, isMine, isPM, pmProject]);\r\n\r\n  // actions\r\n  const handleApprove = async () => {\r\n    if (!isPM || isMine) return;\r\n    if (!request?.project?._id) {\r\n      openModal({ title:'Missing Data', type:'error', message:'Destination project id not found.' });\r\n      return;\r\n    }\r\n    if (selectedManpowerIds.length === 0) {\r\n      openModal({ title:'Selection Required', type:'warning', message:'Please select at least one manpower to assign before approving.' });\r\n      return;\r\n    }\r\n    setBusy(true);\r\n    try {\r\n      await api.put(`/manpower-requests/${id}/approve`, {\r\n        manpowerProvided: selectedManpowerIds,\r\n        project: request.project._id,\r\n      });\r\n      const { data } = await api.get(`/manpower-requests/${id}`);\r\n      setRequest(data);\r\n      setSelectedManpowerIds([]);\r\n      openModal({\r\n        title:'Request Approved',\r\n        type:'success',\r\n        message:'Manpower successfully transferred to the requesting project.',\r\n        actions:[{ label:'Close', primary:true, onClick:()=>closeModal() }]\r\n      });\r\n    } catch (e) {\r\n      openModal({ title:'Approval Failed', type:'error', message: e?.response?.data?.message || 'Could not approve request.' });\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  };\r\n\r\n  const handleDeny = () => {\r\n    if (!isPM || isMine) return;\r\n    setShowRejectModal(true);\r\n  };\r\n\r\n  const confirmReject = async () => {\r\n    setBusy(true);\r\n    try {\r\n  const response = await api.put(`/manpower-requests/${id}/reject`, { reason: rejectReason });\r\n      setShowRejectModal(false);\r\n      setRejectReason('');\r\n      openModal({\r\n        title:'Request Rejected',\r\n        type:'success',\r\n        message: response.data?.message || 'The request was rejected.',\r\n        actions:[{ label:'Back to List', primary:true, onClick:()=>{ closeModal(); navigate('/pm/manpower-list'); } }]\r\n      });\r\n    } catch (e) {\r\n      openModal({ title:'Rejection Failed', type:'error', message: e?.response?.data?.message || 'Could not reject request.' });\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  };\r\n\r\n  // Step 1: user clicks button -> open confirmation modal\r\n  const handleOpenReceiveConfirm = () => {\r\n    if (markReceived) return; // already confirmed\r\n    setShowReceiveConfirm(true);\r\n  };\r\n\r\n  // Step 2: user confirms reception\r\n  const confirmReceived = async () => {\r\n    setBusy(true);\r\n    try {\r\n      await api.put(`/manpower-requests/${id}/received`, { received: true });\r\n      setMarkReceived(true);\r\n      // refresh request to reflect any backend changes\r\n      const { data } = await api.get(`/manpower-requests/${id}`);\r\n      setRequest(data);\r\n      setShowReceiveConfirm(false);\r\n      openModal({ title:'Received Confirmed', type:'success', message:'Manpower arrival confirmed. You can now schedule a return date.', actions:[{ label:'Close', primary:true, onClick:()=>closeModal() }] });\r\n    } catch (e) {\r\n      openModal({ title:'Failed', type:'error', message: e?.response?.data?.message || 'Could not confirm reception.' });\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  };\r\n\r\n  const handleScheduleReturn = () => setShowCalendar(true);\r\n  const handleDateConfirm = async () => {\r\n    if (!selectedDate) return;\r\n    try {\r\n      await api.put(`/manpower-requests/${id}/return`, { returnDate: selectedDate });\r\n      setShowCalendar(false);\r\n      const { data } = await api.get(`/manpower-requests/${id}`);\r\n      setRequest(data);\r\n      openModal({ title:'Return Scheduled', type:'success', message:`Return scheduled for ${selectedDate}.`, actions:[{ label:'Close', primary:true, onClick:()=>closeModal() }] });\r\n    } catch {\r\n      openModal({ title:'Failed', type:'error', message:'Failed to set return date.' });\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => navigate(`/pm/request-manpower/edit/${id}`);\r\n  \r\n  const handleCancel = () => {\r\n    setShowCancelConfirm(true);\r\n  };\r\n\r\n  const confirmCancel = async () => {\r\n    setBusy(true);\r\n    try {\r\n      await api.delete(`/manpower-requests/${id}`);\r\n      navigate('/pm/manpower-list');\r\n    } catch {\r\n      openModal({ title:'Cancel Failed', type:'error', message:'Could not cancel request.' });\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  };\r\n\r\n  const handleArchive = () => {\r\n    setShowArchiveConfirm(true);\r\n  };\r\n\r\n  // Complete (return) flow – visible to donor PM when return date reached OR (no returnDate & window expired)\r\n  const handleOpenReturnConfirm = () => {\r\n    setShowReturnConfirm(true);\r\n  };\r\n  const confirmReturned = async () => {\r\n    setBusy(true);\r\n    try {\r\n      await api.put(`/manpower-requests/${id}/complete`);\r\n      const { data } = await api.get(`/manpower-requests/${id}`);\r\n      setRequest(data);\r\n      setShowReturnConfirm(false);\r\n      openModal({ title:'Request Completed', type:'success', message:'Manpower returned and request marked completed.', actions:[{ label:'Close', primary:true, onClick:()=>closeModal() }] });\r\n    } catch (e) {\r\n      openModal({ title:'Completion Failed', type:'error', message: e?.response?.data?.message || 'Could not complete request.' });\r\n    } finally { setBusy(false); }\r\n  };\r\n\r\n  const confirmArchive = async () => {\r\n    setBusy(true);\r\n    try {\r\n      await api.put(`/manpower-requests/${id}/archive`, { reason: archiveReason });\r\n      const { data } = await api.get(`/manpower-requests/${id}`);\r\n      setRequest(data);\r\n      setShowArchiveConfirm(false);\r\n      setArchiveReason('');\r\n      openModal({ title:'Archived', type:'success', message:'Request archived successfully.', actions:[{ label:'Close', primary:true, onClick:()=>closeModal() }] });\r\n    } catch (e) {\r\n      openModal({ title:'Archive Failed', type:'error', message: e?.response?.data?.message || 'Failed to archive request.' });\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  };\r\n\r\n  // helpers\r\n  const sourceProjectName = pmProject?.projectName || 'your project';\r\n  const destProjectName = request?.project?.projectName || 'this project';\r\n\r\n  const renderStatusBadge = () => {\r\n    const key = (request?.status || 'pending').toLowerCase();\r\n    const meta = STATUS_META[key] || STATUS_META.pending;\r\n    return (\r\n      <span className={`revamp-status revamp-status--${meta.tone}`}>{meta.icon}<span>{meta.label}</span></span>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard-container\">\r\n        <AppHeader roleSegment=\"pm\" />\r\n        <main className=\"dashboard-main\">\r\n          <div className=\"loading-container modern\">\r\n            <div className=\"loading-spinner modern\"></div>\r\n            <h3>Loading Request Details</h3>\r\n            <p>Please wait while we fetch the manpower request information...</p>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !request) {\r\n    return (\r\n      <div className=\"dashboard-container\">\r\n        <AppHeader roleSegment=\"pm\" />\r\n        <main className=\"dashboard-main\">\r\n          <div className=\"error-container modern\">\r\n            <FaExclamationTriangle className=\"error-icon modern\" />\r\n            <h3>Unable to Load Request</h3>\r\n            <p>{error || 'The requested manpower request could not be found.'}</p>\r\n            <button \r\n              className=\"revamp-btn revamp-btn--primary\" \r\n              onClick={() => navigate('/pm/manpower-list')}\r\n            >\r\n              <FaArrowLeft />\r\n              <span>Back to Manpower List</span>\r\n            </button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <AppHeader roleSegment=\"pm\" />\r\n      <main className=\"dashboard-main revamp-detail\">\r\n        <div className=\"revamp-header\">\r\n          <div className=\"revamp-header__left\">\r\n            <button className=\"revamp-btn revamp-btn--ghost\" onClick={()=>navigate('/pm/manpower-list')}><FaArrowLeft/><span>Back</span></button>\r\n            <h1>Manpower Request {renderStatusBadge()}</h1>\r\n            <ul className=\"revamp-meta\">\r\n              <li><FaProjectDiagram/> {request.project?.projectName || 'N/A'}</li>\r\n              <li><FaUserTie/> {request.createdBy?.name || 'Unknown'}</li>\r\n              <li>#{request.requestNumber || id?.slice(-4)}</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"revamp-header__actions\">\r\n            {isMine && !isApproved && (\r\n              <button className=\"revamp-btn revamp-btn--outline\" onClick={handleEdit}><FaEdit/> Edit</button>\r\n            )}\r\n            {isMine && (\r\n              <button className=\"revamp-btn revamp-btn--danger-outline\" disabled={busy} onClick={handleCancel}>{busy? 'Deleting…':'Delete'}</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Top summary cards */}\r\n        <section className=\"revamp-cards-grid\">\r\n          <div className=\"revamp-card mini\">\r\n            <span className=\"label\">Target Date</span>\r\n            <strong>{request.acquisitionDate ? new Date(request.acquisitionDate).toLocaleDateString() : '—'}</strong>\r\n          </div>\r\n          <div className=\"revamp-card mini\">\r\n            <span className=\"label\">Duration</span>\r\n            <strong>{request.duration} {request.duration>1?'days':'day'}</strong>\r\n          </div>\r\n          {request.returnDate && (\r\n            <div className=\"revamp-card mini\">\r\n              <span className=\"label\">Return Date</span>\r\n              <strong>{new Date(request.returnDate).toLocaleDateString()}</strong>\r\n            </div>) }\r\n          {!request.returnDate && request.returnWindow?.maxReturnDate && (\r\n            <div className=\"revamp-card mini\">\r\n              <span className=\"label\">Latest Return</span>\r\n              <strong>{new Date(request.returnWindow.maxReturnDate).toLocaleDateString()}</strong>\r\n            </div>\r\n          )}\r\n          <div className=\"revamp-card mini\">\r\n            <span className=\"label\">Project</span>\r\n            <strong>{request.project?.projectName || '—'}</strong>\r\n          </div>\r\n          <div className=\"revamp-card mini\">\r\n            <span className=\"label\">Status</span>\r\n            {renderStatusBadge()}\r\n            {isApproved && isMine && !markReceived && (\r\n              <button\r\n                type=\"button\"\r\n                className={`revamp-btn revamp-btn--xs revamp-btn--pending`}\r\n                onClick={handleOpenReceiveConfirm}\r\n                title=\"Confirm that the manpower has arrived\"\r\n              >\r\n                Mark Received\r\n              </button>\r\n            )}\r\n            {isApproved && isMine && markReceived && (\r\n              <span className=\"revamp-badge revamp-badge--received\" title=\"Manpower arrival confirmed\">Received</span>\r\n            )}\r\n          </div>\r\n        </section>\r\n\r\n        <div className=\"revamp-sections-grid\">\r\n        {/* Manpower requirements */}\r\n        <section className=\"revamp-section\">\r\n          <header><FaUsers/><h2>Requested Manpower</h2></header>\r\n          {request.manpowers?.length ? (\r\n            <ul className=\"revamp-manpower-list\">\r\n              {request.manpowers.map((m,i)=>(\r\n                <li key={i}><span className=\"qty\">{m.quantity}</span><span className=\"type\">{m.type}</span></li>\r\n              ))}\r\n            </ul>\r\n          ) : <div className=\"revamp-empty\">No manpower entries</div>}\r\n        </section>\r\n\r\n        {/* Description */}\r\n        <section className=\"revamp-section\">\r\n          <header><FaFileAlt/><h2>Description</h2></header>\r\n          <p className=\"revamp-description\">{request.description || 'No description provided.'}</p>\r\n        </section>\r\n\r\n        {/* Approval & Assign */}\r\n  {!isMine && isPM && !isApproved && request?.status !== 'Archived' && request?.status !== 'Completed' && (\r\n          <section className=\"revamp-section emphasize span-2\">\r\n            <header><FaCheck/><h2>Approve & Assign</h2></header>\r\n            <p className=\"hint\">Provide manpower from <strong>{sourceProjectName}</strong> to <strong>{destProjectName}</strong></p>\r\n            <div className=\"hint requested\">Requested: {request.manpowers.map(mp=>`${mp.type} (${mp.quantity})`).join(', ')}</div>\r\n            <div className=\"assign-row revamp\">\r\n              <select\r\n                defaultValue=\"\"\r\n                onChange={(e)=>{ const val=e.target.value; if(!val) return; setSelectedManpowerIds(p=>p.includes(val)?p:[...p,val]); }}\r\n              >\r\n                <option value=\"\">{!pmProject? 'No PM project found': availableManpowers.length? 'Select manpower…':'No matching manpower'}</option>\r\n                {availableManpowers.filter(m=>!selectedManpowerIds.includes(m._id)).map(m=> (<option key={m._id} value={m._id}>{m.name} ({m.position})</option>))}\r\n              </select>\r\n              <button type=\"button\" className=\"revamp-btn revamp-btn--ghost\" onClick={()=>setSelectedManpowerIds([])}>Clear</button>\r\n            </div>\r\n            {selectedManpowerIds.length>0 && (\r\n              <div className=\"revamp-selected\">\r\n                {selectedManpowerIds.map(idv=>{ const mp=availableManpowers.find(m=>m._id===idv); return (\r\n                  <span key={idv} className=\"pill\">{mp? `${mp.name} (${mp.position})`: idv}<button onClick={()=>setSelectedManpowerIds(prev=>prev.filter(x=>x!==idv))}>×</button></span>\r\n                );})}\r\n              </div>\r\n            )}\r\n            <div className=\"revamp-actions\">\r\n              <button className=\"revamp-btn revamp-btn--danger-outline\" disabled={busy} onClick={handleDeny}><FaTimes/> Reject</button>\r\n              <button className=\"revamp-btn revamp-btn--primary\" disabled={busy || selectedManpowerIds.length===0} onClick={handleApprove}>{busy? 'Processing…':'Approve & Assign'}</button>\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        {/* Rejected details */}\r\n        {request.rejectedBy && request.rejectedBy.length>0 && (\r\n          <section className=\"revamp-section danger span-2\">\r\n            <header><FaTimes/><h2>Rejection Details</h2></header>\r\n            <p className=\"hint\"><strong>Reason:</strong> {request.rejectionReason || 'No reason provided'}</p>\r\n            <ul className=\"revamp-rejections\">\r\n              {request.rejectedBy.map((r,i)=>(<li key={i}>{r.userName || r.userId?.name || 'Unknown PM'} <time>{new Date(r.rejectedAt).toLocaleDateString()}</time></li>))}\r\n            </ul>\r\n          </section>\r\n        )}\r\n\r\n        {/* Archived details */}\r\n        {request?.status === 'Archived' && (\r\n          <section className=\"revamp-section archived span-2\">\r\n            <header><FaFileAlt/><h2>Archived</h2></header>\r\n            {request.archivedReason && <p className=\"hint\"><strong>Reason:</strong> {request.archivedReason}</p>}\r\n            {request.originalRequestDetails && (\r\n              <div className=\"revamp-orig\">\r\n                <p><strong>Original Acquisition:</strong> {new Date(request.originalRequestDetails.acquisitionDate).toLocaleDateString()}</p>\r\n                <p><strong>Original Duration:</strong> {request.originalRequestDetails.duration} days</p>\r\n              </div>\r\n            )}\r\n          </section>\r\n        )}\r\n\r\n        {/* Archive action */}\r\n        {!isMine && isPM && request?.status !== 'Archived' && (\r\n          <section className=\"revamp-section subtle span-2\">\r\n            <div className=\"revamp-actions end\">\r\n              <button onClick={handleArchive} className=\"revamp-btn revamp-btn--outline purple\" disabled={busy}><FaFileAlt/> {busy? 'Processing…':'Archive Request'}</button>\r\n            </div>\r\n          </section>\r\n        )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"revamp-footer\">\r\n          {isApproved && isMine && markReceived && !request.returnDate && (\r\n            <button className=\"revamp-btn revamp-btn--primary\" disabled={!markReceived} onClick={handleScheduleReturn}><FaCalendarPlus/> Schedule Return</button>\r\n          )}\r\n          {isApproved && isDonorPM && markReceived && request.status === 'Approved' && (\r\n            <button className=\"revamp-btn revamp-btn--primary\" disabled={busy} onClick={handleOpenReturnConfirm} title=\"Return manpower and complete request\">Mark Manpower Returned</button>\r\n          )}\r\n          {isApproved && isDonorPM && !markReceived && (\r\n            <span style={{fontSize:'.7rem',color:'#64748b'}}>Waiting for requester to mark received…</span>\r\n          )}\r\n      {/* Receive Confirmation Modal */}\r\n      {showReceiveConfirm && (\r\n        <div className=\"center-modal-overlay\" role=\"dialog\" aria-modal=\"true\">\r\n          <div className=\"center-modal\">\r\n            <div className=\"center-modal-header\"><h2>Confirm Manpower Received</h2></div>\r\n            <div className=\"center-modal-body\">\r\n              <p style={{marginBottom:12}}>Please confirm that the manpower provided for this request has physically arrived and the duration is acceptable.</p>\r\n              <div className=\"modal-warning-box info\" style={{marginBottom:16}}>\r\n                <div className=\"warning-header\">\r\n                  <FaCheckCircle className=\"warning-icon\" />\r\n                  <strong>Request Summary</strong>\r\n                </div>\r\n                <p><strong>Requested:</strong> {request.manpowers.map(mp=>`${mp.quantity} ${mp.type}`).join(', ')}</p>\r\n                <p><strong>Duration:</strong> {request.duration} {request.duration>1?'days':'day'}</p>\r\n                <p><strong>Target Date:</strong> {request.acquisitionDate ? new Date(request.acquisitionDate).toLocaleDateString() : '—'}</p>\r\n                {request.returnWindow?.maxReturnDate && (\r\n                  <p><strong>Latest Return:</strong> {new Date(request.returnWindow.maxReturnDate).toLocaleDateString()}</p>\r\n                )}\r\n              </div>\r\n              <p style={{fontSize:13,color:'#334155'}}>After confirming, you'll be able to schedule the return date.</p>\r\n            </div>\r\n            <div className=\"center-modal-actions\">\r\n              <button type=\"button\" className=\"modal-btn\" onClick={()=>setShowReceiveConfirm(false)}>Cancel</button>\r\n              <button type=\"button\" className=\"modal-btn primary\" disabled={busy} onClick={confirmReceived}>{busy? 'Saving…':'Confirm Received'}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showReturnConfirm && (\r\n        <div className=\"center-modal-overlay\" role=\"dialog\" aria-modal=\"true\">\r\n          <div className=\"center-modal\">\r\n            <div className=\"center-modal-header\"><h2>Confirm Manpower Returned</h2></div>\r\n            <div className=\"center-modal-body\">\r\n              <p style={{marginBottom:12}}>This will reclaim all manpower provided back to their original project assignments and complete the request.</p>\r\n              <div className=\"modal-warning-box info\" style={{marginBottom:16}}>\r\n                <div className=\"warning-header\">\r\n                  <FaCheckCircle className=\"warning-icon\" />\r\n                  <strong>Return Summary</strong>\r\n                </div>\r\n                {request.returnDate && <p><strong>Scheduled Return:</strong> {new Date(request.returnDate).toLocaleDateString()}</p>}\r\n                <p><strong>Resources Provided:</strong> {Array.isArray(request.manpowerProvided) ? request.manpowerProvided.length : 0}</p>\r\n                <p style={{fontSize:13,color:'#334155'}}>You are identified as a donor Project Manager.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"center-modal-actions\">\r\n              <button type=\"button\" className=\"modal-btn\" onClick={()=>setShowReturnConfirm(false)}>Cancel</button>\r\n              <button type=\"button\" className=\"modal-btn primary\" disabled={busy} onClick={confirmReturned}>{busy? 'Completing…':'Confirm Returned'}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n        </div>\r\n\r\n        {/* Calendar Modal */}\r\n        {showCalendar && (\r\n          <div className=\"center-modal-overlay\" role=\"dialog\" aria-modal=\"true\">\r\n            <div className=\"center-modal\">\r\n              <div className=\"center-modal-header\">\r\n                <h2>Schedule Return Date</h2>\r\n              </div>\r\n              <div className=\"center-modal-body\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">Select Return Date:</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={selectedDate}\r\n                    min={(request.returnWindow?.earliestReturnDate ? request.returnWindow.earliestReturnDate.split('T')[0] : new Date().toISOString().split('T')[0])}\r\n                    max={(request.returnWindow?.maxReturnDate ? request.returnWindow.maxReturnDate.split('T')[0] : undefined)}\r\n                    onChange={e => setSelectedDate(e.target.value)}\r\n                    className=\"form-input date-input\"\r\n                  />\r\n                  {request.returnWindow?.maxReturnDate && (\r\n                    <p className=\"small muted\" style={{marginTop:'.4rem'}}>\r\n                      Latest allowed return: {new Date(request.returnWindow.maxReturnDate).toLocaleDateString()} ({request.returnWindow.daysRemainingInWindow ?? ''} days remaining)\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"center-modal-actions\">\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"modal-btn\" \r\n                  onClick={() => setShowCalendar(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"modal-btn primary\" \r\n                  disabled={!selectedDate} \r\n                  onClick={handleDateConfirm}\r\n                >\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <AuditTrail requestId={request._id} />\r\n      </main>\r\n      \r\n      {/* Cancel Confirmation Modal */}\r\n      {showCancelConfirm && (\r\n        <div className=\"center-modal-overlay error\" role=\"dialog\" aria-modal=\"true\">\r\n          <div className=\"center-modal\">\r\n            <div className=\"center-modal-header\">\r\n              <h2>Confirm Request Cancellation</h2>\r\n            </div>\r\n            <div className=\"center-modal-body\">\r\n              <div className=\"modal-warning-box error\">\r\n                <div className=\"warning-header\">\r\n                  <FaExclamationTriangle className=\"warning-icon\" />\r\n                  <strong>Cancellation Warning</strong>\r\n                </div>\r\n                <p>This will permanently cancel the manpower request. This action cannot be undone.</p>\r\n              </div>\r\n\r\n              <div className=\"request-details-summary\">\r\n                <h4>Request Details:</h4>\r\n                <div className=\"details-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">Project:</span>\r\n                    <span className=\"value\">{request?.project?.projectName || 'Unknown'}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">Manpower Requested:</span>\r\n                    <span className=\"value\">{request?.manpowers?.map(m => `${m.quantity} ${m.type}`).join(', ') || 'Unknown'}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">Status:</span>\r\n                    <span className=\"value\">{request?.status || 'Unknown'}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">Created:</span>\r\n                    <span className=\"value\">{request?.createdAt ? new Date(request.createdAt).toLocaleDateString() : 'Unknown'}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <p className=\"confirmation-text\">\r\n                Are you sure you want to <strong>cancel</strong> this manpower request?\r\n              </p>\r\n            </div>\r\n            <div className=\"center-modal-actions\">\r\n              <button \r\n                type=\"button\"\r\n                className=\"modal-btn\" \r\n                onClick={() => setShowCancelConfirm(false)}\r\n              >\r\n                Keep Request\r\n              </button>\r\n              <button \r\n                type=\"button\"\r\n                className=\"modal-btn primary danger\" \r\n                disabled={busy}\r\n                onClick={confirmCancel}\r\n              >\r\n                {busy ? 'Cancelling...' : 'Yes, Cancel Request'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Archive Confirmation Modal */}\r\n      {showArchiveConfirm && (\r\n        <div className=\"center-modal-overlay warning\" role=\"dialog\" aria-modal=\"true\">\r\n          <div className=\"center-modal\">\r\n            <div className=\"center-modal-header\">\r\n              <h2>Archive Manpower Request</h2>\r\n            </div>\r\n            <div className=\"center-modal-body\">\r\n              <div className=\"modal-warning-box warning\">\r\n                <div className=\"warning-header\">\r\n                  <FaFileAlt className=\"warning-icon\" />\r\n                  <strong>Archive Request</strong>\r\n                </div>\r\n                <p>This will archive the request for record-keeping purposes. The request will be marked as archived but preserved in the system.</p>\r\n              </div>\r\n\r\n              <div className=\"request-details-summary\">\r\n                <h4>Request Details:</h4>\r\n                <div className=\"details-grid\">\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">Project:</span>\r\n                    <span className=\"value\">{request?.project?.projectName || 'Unknown'}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">Manpower Requested:</span>\r\n                    <span className=\"value\">{request?.manpowers?.map(m => `${m.quantity} ${m.type}`).join(', ') || 'Unknown'}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">Status:</span>\r\n                    <span className=\"value\">{request?.status || 'Unknown'}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">Created:</span>\r\n                    <span className=\"value\">{request?.createdAt ? new Date(request.createdAt).toLocaleDateString() : 'Unknown'}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"archive-reason-section\">\r\n                <label className=\"form-label\">\r\n                  Archive Reason (Optional):\r\n                </label>\r\n                <textarea\r\n                  value={archiveReason}\r\n                  onChange={(e) => setArchiveReason(e.target.value)}\r\n                  placeholder=\"Enter reason for archiving this request...\"\r\n                  className=\"form-textarea\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"center-modal-actions\">\r\n              <button \r\n                type=\"button\"\r\n                className=\"modal-btn\" \r\n                onClick={() => {\r\n                  setShowArchiveConfirm(false);\r\n                  setArchiveReason('');\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                type=\"button\"\r\n                className=\"modal-btn primary warning\" \r\n                disabled={busy}\r\n                onClick={confirmArchive}\r\n              >\r\n                {busy ? 'Archiving...' : 'Archive Request'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Reject Modal */}\r\n      {showRejectModal && (\r\n        <div className=\"center-modal-overlay warning\" role=\"dialog\" aria-modal=\"true\">\r\n          <div className=\"center-modal\">\r\n            <div className=\"center-modal-header\"><h2>Reject Request</h2></div>\r\n            <div className=\"center-modal-body\">\r\n              <p style={{marginBottom:12}}>You can optionally provide a reason for rejecting this request.</p>\r\n              <textarea\r\n                value={rejectReason}\r\n                onChange={e=>setRejectReason(e.target.value)}\r\n                placeholder=\"Reason (optional)\"\r\n                style={{width:'100%',minHeight:90,padding:10,border:'1px solid #d1d5db',borderRadius:8,fontSize:14}}\r\n              />\r\n            </div>\r\n            <div className=\"center-modal-actions\">\r\n              <button type=\"button\" className=\"modal-btn\" onClick={()=>{ setShowRejectModal(false); setRejectReason(''); }}>Cancel</button>\r\n              <button type=\"button\" className=\"modal-btn primary\" disabled={busy} onClick={confirmReject}>{busy? 'Processing…':'Reject Request'}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Unified Feedback Modal */}\r\n      {modal.open && (\r\n        <div className={`center-modal-overlay ${modal.type}`} role=\"dialog\" aria-modal=\"true\">\r\n          <div className=\"center-modal\">\r\n            <div className=\"center-modal-header\"><h2>{modal.title}</h2></div>\r\n            <div className=\"center-modal-body\"><p>{modal.message}</p></div>\r\n            <div className=\"center-modal-actions\">\r\n              {modal.actions.length === 0 && (\r\n                <button className=\"modal-btn primary\" onClick={closeModal}>Close</button>\r\n              )}\r\n              {modal.actions.map((a,i)=>(\r\n                <button key={i} className={a.primary? 'modal-btn primary':'modal-btn'} onClick={a.onClick}>{a.label}</button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Audit trail component (inline fetch)\r\nconst AuditTrail = ({ requestId }) => {\r\n  const [logs, setLogs] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const token = localStorage.getItem('token');\r\n  \r\n  useEffect(() => {\r\n    if (!open) return;\r\n    const fetchLogs = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { data } = await api.get('/audit-logs', { headers:{ Authorization:`Bearer ${token}` } });\r\n        // Filter to those referencing this request\r\n        const filtered = data.filter(l => l.meta?.requestId === requestId);\r\n        setLogs(filtered);\r\n      } catch(e){ \r\n        console.error('Audit fetch failed', e); \r\n        setLogs([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchLogs();\r\n  }, [open, requestId, token]);\r\n\r\n  return (\r\n    <div className=\"revamp-audit\">\r\n      <button \r\n        className=\"revamp-btn revamp-btn--ghost\" \r\n        onClick={() => setOpen(!open)}\r\n        style={{ marginBottom: '1rem' }}\r\n      >\r\n        <FaFileAlt />\r\n        <span>{open ? 'Hide' : 'Show'} Audit Trail</span>\r\n      </button>\r\n      {open && (\r\n        <div className=\"revamp-audit__panel\">\r\n          {loading && <div className=\"revamp-empty small\">Loading audit entries...</div>}\r\n          {!loading && logs.length === 0 && <div className=\"revamp-empty small\">No audit entries for this request.</div>}\r\n          {!loading && logs.map(l => (\r\n            <div key={l._id || l.timestamp} className=\"revamp-audit__row\">\r\n              <div className=\"act\">{l.action}</div>\r\n              <div className=\"desc\">{l.description}</div>\r\n              <div className=\"meta\">{new Date(l.timestamp).toLocaleString()} • {l.performedBy?.name} ({l.performedByRole})</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport NotificationBell from \"../NotificationBell\";\r\nimport jsPDF from \"jspdf\";\r\nimport api from \"../../api/axiosInstance\";\r\nimport '../style/pm_style/PmProgressReport.css';\r\n// Nav icons\r\nimport { FaTachometerAlt, FaComments, FaBoxes, FaUsers, FaProjectDiagram, FaClipboardList, FaChartBar, FaCalendarAlt } from 'react-icons/fa';\r\n\r\nexport default function PmProgressReport({ userName = 'Z', handleLogout }) {\r\n  const { id: projectId } = useParams(); // Get project id from URL\r\n  const [project, setProject] = useState(null);\r\n  const [aiAnalysis, setAiAnalysis] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [logsUsed, setLogsUsed] = useState([]);\r\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\r\n\r\n  // Fetch project details\r\n  useEffect(() => {\r\n    if (!projectId) return;\r\n    api.get(`/projects/${projectId}`)\r\n      .then(res => setProject(res.data))\r\n      .catch(err => setError(\"Project not found.\"));\r\n  }, [projectId]);\r\n\r\n  // DSS Generate Report\r\n  const handleGenerateReport = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setAiAnalysis(\"\");\r\n    try {\r\n      const res = await api.get(`/daily-reports/project/${projectId}`);\r\n      const allLogs = res.data || [];\r\n      const latestLogs = [...allLogs]\r\n        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n        .slice(0, 7);\r\n\r\n      setLogsUsed(latestLogs);\r\n\r\n      const dssRes = await api.post('/dss-report/generate-dss-report', { logs: latestLogs });\r\n      setAiAnalysis(dssRes.data.result);\r\n    } catch (err) {\r\n      setError(\"Failed to generate AI analysis. Please try again.\");\r\n      setAiAnalysis(\"\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Download PDF helper\r\n  const handleDownloadPDF = async () => {\r\n    if (!aiAnalysis) return;\r\n    \r\n    const doc = new jsPDF({ unit: 'pt', format: 'a4' });\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    const pageHeight = doc.internal.pageSize.getHeight();\r\n    const marginX = 40;\r\n    let y = 40;\r\n\r\n    // Load company logo\r\n    const logoURL = `${process.env.PUBLIC_URL || ''}/images/Fadz-logo.png`;\r\n    let logoData = null;\r\n    try {\r\n      const img = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n      logoData = await new Promise((resolve) => {\r\n        img.onload = () => {\r\n          const canvas = document.createElement('canvas');\r\n          canvas.width = img.naturalWidth;\r\n          canvas.height = img.naturalHeight;\r\n          canvas.getContext('2d').drawImage(img, 0, 0);\r\n          resolve({ \r\n            dataUrl: canvas.toDataURL('image/png'), \r\n            w: img.naturalWidth, \r\n            h: img.naturalHeight \r\n          });\r\n        };\r\n        img.onerror = () => resolve(null);\r\n        img.src = logoURL;\r\n      });\r\n    } catch (error) {\r\n      console.warn('Failed to load logo:', error);\r\n    }\r\n\r\n    // Header function to be called on each page\r\n    const drawHeader = () => {\r\n      // Reset to top of page\r\n      y = 40;\r\n      \r\n      // Company logo (large size)\r\n      if (logoData?.dataUrl) {\r\n        const maxLogoWidth = 200;\r\n        const maxLogoHeight = 60;\r\n        const logoRatio = logoData.w / logoData.h;\r\n        let logoWidth = maxLogoWidth;\r\n        let logoHeight = maxLogoWidth / logoRatio;\r\n        \r\n        if (logoHeight > maxLogoHeight) {\r\n          logoHeight = maxLogoHeight;\r\n          logoWidth = maxLogoHeight * logoRatio;\r\n        }\r\n        \r\n        doc.addImage(logoData.dataUrl, 'PNG', marginX, y - 12, logoWidth, logoHeight);\r\n        y += logoHeight + 20;\r\n      }\r\n\r\n      // Company name (large font)\r\n      doc.setFontSize(20);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setTextColor(20);\r\n      doc.text('FadzTrack', marginX, y);\r\n      y += 25;\r\n\r\n      // Report title\r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setTextColor(40);\r\n      doc.text('AI Progress Report', marginX, y);\r\n      y += 20;\r\n\r\n      // Project information\r\n      if (project) {\r\n        doc.setFontSize(12);\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.setTextColor(60);\r\n        doc.text(`Project: ${project.projectName || 'Unknown Project'}`, marginX, y);\r\n        y += 15;\r\n        \r\n        if (project.location?.name) {\r\n          doc.text(`Location: ${project.location.name}`, marginX, y);\r\n          y += 15;\r\n        }\r\n      }\r\n\r\n      // Metadata section\r\n      doc.setFontSize(10);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setTextColor(80);\r\n      \r\n      const currentDate = new Date().toLocaleString();\r\n      doc.text(`Generated by: ${userName || 'Unknown User'}`, marginX, y);\r\n      y += 12;\r\n      doc.text(`Generated on: ${currentDate}`, marginX, y);\r\n      y += 12;\r\n      doc.text(`Exported by: ${userName || 'Unknown User'}`, marginX, y);\r\n      y += 12;\r\n      doc.text(`Export Date & Time: ${currentDate}`, marginX, y);\r\n      y += 20;\r\n\r\n      // AI Disclaimer\r\n      doc.setFontSize(9);\r\n      doc.setFont('helvetica', 'italic');\r\n      doc.setTextColor(120);\r\n      doc.text('⚠️ DISCLAIMER: This report is generated by AI and should be reviewed for accuracy.', marginX, y);\r\n      y += 15;\r\n      doc.text('The analysis is based on available data and may not reflect all project nuances.', marginX, y);\r\n      y += 20;\r\n\r\n      // Divider line\r\n      doc.setDrawColor(200);\r\n      doc.setLineWidth(1);\r\n      doc.line(marginX, y, pageWidth - marginX, y);\r\n      y += 20;\r\n    };\r\n\r\n    // Draw header on first page\r\n    drawHeader();\r\n\r\n    // AI Analysis content\r\n    doc.setFontSize(12);\r\n    doc.setFont('helvetica', 'normal');\r\n    doc.setTextColor(20);\r\n    \r\n    // Split AI analysis into paragraphs and add to PDF\r\n    const analysisParagraphs = aiAnalysis.split('\\n').filter(p => p.trim());\r\n    let currentY = y;\r\n    \r\n    for (const paragraph of analysisParagraphs) {\r\n      if (currentY > pageHeight - 100) {\r\n        doc.addPage();\r\n        drawHeader();\r\n        currentY = y;\r\n      }\r\n      \r\n      const lines = doc.splitTextToSize(paragraph, pageWidth - 2 * marginX);\r\n      doc.text(lines, marginX, currentY);\r\n      currentY += lines.length * 14 + 10;\r\n    }\r\n\r\n    // Add logs section\r\n    if (logsUsed.length > 0) {\r\n      if (currentY > pageHeight - 150) {\r\n        doc.addPage();\r\n        drawHeader();\r\n        currentY = y;\r\n      }\r\n      \r\n      doc.setFontSize(14);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setTextColor(40);\r\n      doc.text('Daily Logs Used for Analysis:', marginX, currentY);\r\n      currentY += 20;\r\n\r\n      doc.setFontSize(10);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setTextColor(60);\r\n      \r\n      logsUsed.forEach((log, index) => {\r\n        if (currentY > pageHeight - 100) {\r\n          doc.addPage();\r\n          drawHeader();\r\n          currentY = y;\r\n        }\r\n        \r\n        doc.text(`Log ${index + 1} - Date: ${log.date}`, marginX, currentY);\r\n        currentY += 12;\r\n        \r\n        if (log.workPerformed && Array.isArray(log.workPerformed)) {\r\n          log.workPerformed.forEach(work => {\r\n            if (currentY > pageHeight - 100) {\r\n              doc.addPage();\r\n              drawHeader();\r\n              currentY = y;\r\n            }\r\n            doc.text(`  • ${work.task || 'Unknown Task'} - Status: ${work.status || 'Unknown'}`, marginX + 20, currentY);\r\n            currentY += 10;\r\n          });\r\n        }\r\n        currentY += 10;\r\n      });\r\n    }\r\n\r\n    // Footer on each page\r\n    const addFooter = (pageNum) => {\r\n      const originalPage = doc.internal.getCurrentPageInfo().pageNumber;\r\n      doc.setPage(pageNum);\r\n      \r\n      doc.setFontSize(8);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setTextColor(120);\r\n      \r\n      const footerText = `Generated: ${new Date().toLocaleString()}`;\r\n      const pageText = `Page ${pageNum} of ${doc.internal.getNumberOfPages()}`;\r\n      \r\n      doc.text(footerText, marginX, pageHeight - 20);\r\n      doc.text(pageText, pageWidth - marginX - doc.getTextWidth(pageText), pageHeight - 20);\r\n      \r\n      doc.setPage(originalPage);\r\n    };\r\n\r\n    // Add footer to all pages\r\n    for (let i = 1; i <= doc.internal.getNumberOfPages(); i++) {\r\n      addFooter(i);\r\n    }\r\n\r\n    // Save the PDF\r\n    const fileName = `AI_Progress_Report_${project?.projectName?.replace(/[^a-zA-Z0-9]/g, '_') || 'Unknown'}_${new Date().toISOString().split('T')[0]}.pdf`;\r\n    doc.save(fileName);\r\n  };\r\n\r\n  return (\r\n   <div>\r\n     <header className=\"header\">\r\n  <div className=\"logo-container\">\r\n    <img\r\n      src={require('../../assets/images/FadzLogo1.png')}\r\n      alt=\"FadzTrack Logo\"\r\n      className=\"logo-img\"\r\n    />\r\n    <h1 className=\"brand-name\">FadzTrack</h1>\r\n  </div>\r\n\r\n  <nav className=\"nav-menu\">\r\n    <Link to=\"/pm\" className=\"nav-link\"><FaTachometerAlt /> Dashboard</Link>\r\n    <Link to=\"/pm/chat\" className=\"nav-link\"><FaComments /> Chat</Link>\r\n    <Link to=\"/pm/request/:id\" className=\"nav-link\"><FaBoxes /> Material</Link>\r\n    <Link to=\"/pm/manpower-list\" className=\"nav-link\"><FaUsers /> Manpower</Link>\r\n    {project && (\r\n      <Link to={`/pm/viewprojects/${project._id || project.id}`} className=\"nav-link\">\r\n        <FaProjectDiagram /> View Project\r\n      </Link>\r\n    )}\r\n    <Link to=\"/pm/daily-logs\" className=\"nav-link\"><FaClipboardList /> Logs</Link>\r\n    {project && (\r\n      <Link to={`/pm/progress-report/${project._id}`} className=\"nav-link\">\r\n        <FaChartBar /> Reports\r\n      </Link>\r\n    )}\r\n    <Link to=\"/pm/daily-logs-list\" className=\"nav-link\"><FaCalendarAlt /> Daily Logs</Link>\r\n  </nav>\r\n\r\n  <div className=\"profile-menu-container\" style={{ display: 'flex', alignItems: 'center', gap: 18 }}>\r\n    <NotificationBell />\r\n    <div className=\"profile-circle\" onClick={() => setProfileMenuOpen(!profileMenuOpen)}>\r\n      {userName ? userName.charAt(0).toUpperCase() : 'Z'}\r\n    </div>\r\n    {profileMenuOpen && (\r\n      <div className=\"profile-menu\">\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </div>\r\n    )}\r\n  </div>\r\n</header>\r\n\r\n      <div className=\"pm-progress-bg\">\r\n        <div className=\"pm-progress-container\">\r\n          <h1 className=\"pm-progress-title\">Progress Report</h1>\r\n          <div style={{ margin: \"24px 0\" }}>\r\n            <button\r\n              className=\"pm-btn pm-submit-btn\"\r\n              onClick={handleGenerateReport}\r\n              disabled={loading}\r\n            >\r\n              {loading ? \"Generating AI Analysis...\" : \"Generate AI Progress Report (DSS)\"}\r\n            </button>\r\n            {aiAnalysis && (\r\n              <button\r\n                className=\"pm-btn pm-download-btn\"\r\n                onClick={handleDownloadPDF}\r\n                style={{ marginLeft: 18 }}\r\n              >\r\n                Download as PDF\r\n              </button>\r\n            )}\r\n          </div>\r\n          {error && <div style={{ color: 'red', margin: '12px 0' }}>{error}</div>}\r\n          {aiAnalysis && (\r\n            <div className=\"ai-report\" style={{\r\n              background: \"#fff\",\r\n              padding: \"18px\",\r\n              borderRadius: 10,\r\n              margin: \"24px 0\",\r\n              boxShadow: \"0 2px 12px #0002\"\r\n            }}>\r\n              <h2>AI Decision Support Analysis:</h2>\r\n              <pre style={{ whiteSpace: \"pre-wrap\", fontFamily: \"inherit\", fontSize: 15 }}>{aiAnalysis}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// Unified PmChat wrapper using AreaChat implementation\r\nimport React from 'react';\r\nimport AreaChat from './AreaChat';\r\n\r\nconst PmChat = () => <AreaChat baseSegment=\"pm\" />;\r\nexport default PmChat;\r\n","import React from 'react';\r\nimport MaterialRequestDetailView from '../material/MaterialRequestDetailView';\r\nimport AppHeader from '../layout/AppHeader';\r\n\r\nconst PmMatRequestDetailWrapper = () => (\r\n  <>\r\n    <AppHeader roleSegment=\"pm\" />\r\n    <MaterialRequestDetailView\r\n      role=\"Project Manager\"\r\n      rootClass=\"pm-request-detail\"\r\n      disableHeader\r\n    />\r\n  </>\r\n);\r\n\r\nexport default PmMatRequestDetailWrapper;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport api from '../../api/axiosInstance';\r\n\r\nconst gridCardStyle = {\r\n  background: \"#fff\",\r\n  borderRadius: 12,\r\n  boxShadow: \"0 2px 16px rgba(0,0,0,0.07)\",\r\n  maxWidth: 900,\r\n  margin: \"30px auto\",\r\n  padding: \"32px 30px 24px 30px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  gap: \"24px\"\r\n};\r\n\r\nconst flexBetween = { display: \"flex\", justifyContent: \"space-between\", alignItems: \"flex-start\" };\r\n\r\nconst gridBox = {\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"1fr 1fr\",\r\n  gap: 22,\r\n  marginBottom: 12\r\n};\r\n\r\nconst sectionTitle = {\r\n  fontWeight: 600,\r\n  fontSize: 17,\r\n  color: \"#222\",\r\n  margin: \"10px 0 4px\"\r\n};\r\n\r\nfunction capitalize(str) {\r\n  if (!str) return \"\";\r\n  return str[0].toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst PmViewDailyLogs = () => {\r\n  const { id } = useParams();\r\n  const [log, setLog] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    api.get(`/daily-reports/${id}`)\r\n      .then(res => {\r\n        setLog(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ textAlign: 'center', marginTop: 60, color: '#888' }}>\r\n        Loading Daily Log...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!log) {\r\n    return (\r\n      <div style={{ textAlign: 'center', marginTop: 60, color: '#888' }}>\r\n        Daily Log not found.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Extract attendance summary\r\n  const present = (log.siteAttendance || []).filter(a => a.status === 'Present').map(a =>\r\n    a.manpower?.name || a.manpower?.fullName || a.manpower || ''\r\n  );\r\n  const absent = (log.siteAttendance || []).filter(a => a.status === 'Absent').map(a =>\r\n    a.manpower?.name || a.manpower?.fullName || a.manpower || ''\r\n  );\r\n\r\n  // Extract images (attachmentProof is assumed as an array of image URLs)\r\n  const attachments = log.attachmentProof || [];\r\n\r\n  return (\r\n    <div>\r\n      {/* Header / Nav */}\r\n      <header className=\"header\">\r\n        <div className=\"logo-container\">\r\n          <img src={require('../../assets/images/FadzLogo1.png')} alt=\"FadzTrack Logo\" className=\"logo-img\" />\r\n          <h1 className=\"brand-name\">FadzTrack</h1>\r\n        </div>\r\n        <nav className=\"nav-menu\">\r\n          <Link to=\"/pm\" className=\"nav-link\">Dashboard</Link>\r\n          <Link to=\"/pm/request/:id\" className=\"nav-link\">Material</Link>\r\n          <Link to=\"/pm/manpower-list\" className=\"nav-link\">Manpower</Link>\r\n          <Link to=\"/pm/viewprojects\" className=\"nav-link\">View Project</Link>\r\n          <Link to=\"/chat\" className=\"nav-link\">Chat</Link>\r\n          <Link to=\"/pm/daily-logs\" className=\"nav-link\">Logs</Link>\r\n          <Link to=\"/pm/progress-report/:id\" className=\"nav-link\">Reports</Link>\r\n          <Link to=\"/pm/daily-logs-list\" className=\"nav-link\">Daily Logs</Link>\r\n        </nav>\r\n      </header>\r\n\r\n      <div style={gridCardStyle}>\r\n        <h1 style={{ textAlign: 'center', margin: 0, fontSize: 36, fontWeight: 700 }}>\r\n          {log.title || log.logTitle || `Daily Log No. ${log.logNumber || ''}`}\r\n        </h1>\r\n        <div style={{ textAlign: 'center', fontWeight: 600, color: \"#191970\", fontSize: 17 }}>\r\n          {log.project?.projectName || log.projectName || \"—\"}\r\n          {log.site && ` | ${log.site}`}\r\n          {log.engineer && <> | Engr. {log.engineer}</>}\r\n        </div>\r\n        <div style={{ display: 'flex', gap: 24, justifyContent: 'center', marginBottom: 6 }}>\r\n          <div><span style={{ fontWeight: 600 }}>Date:</span> {log.date ? new Date(log.date).toLocaleDateString('en-US') : '—'}</div>\r\n          <div><span style={{ fontWeight: 600 }}>Weather:</span> {capitalize(log.weatherCondition) || '—'}</div>\r\n        </div>\r\n\r\n        {/* Attendance & Material Deliveries */}\r\n        <div style={gridBox}>\r\n          {/* Attendance */}\r\n          <div>\r\n            <div style={sectionTitle}>Attendance Summary</div>\r\n            <div style={{ display: 'flex', gap: 14, marginTop: 8 }}>\r\n              <div style={{ flex: 1, textAlign: 'center', background: \"#fafbff\", borderRadius: 9, padding: 10, border: \"1px solid #ececec\" }}>\r\n                <div style={{ fontWeight: 600, color: \"#43af43\", marginBottom: 4 }}>Present</div>\r\n                {present.length === 0 ? <span style={{ color: \"#aaa\" }}>—</span> : present.map((p, i) => <div key={i}>{p}</div>)}\r\n              </div>\r\n              <div style={{ flex: 1, textAlign: 'center', background: \"#fafbff\", borderRadius: 9, padding: 10, border: \"1px solid #ececec\" }}>\r\n                <div style={{ fontWeight: 600, color: \"#b34e2c\", marginBottom: 4 }}>Absent</div>\r\n                {absent.length === 0 ? <span style={{ color: \"#aaa\" }}>—</span> : absent.map((a, i) => <div key={i}>{a}</div>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Material Deliveries */}\r\n          <div>\r\n            <div style={sectionTitle}>Material Deliveries</div>\r\n            <div style={{\r\n              background: \"#fafbff\", borderRadius: 9, padding: 10, minHeight: 50, border: \"1px solid #ececec\",\r\n              display: \"flex\", alignItems: \"center\", minWidth: 0\r\n            }}>\r\n              {(log.materialDeliveries || []).length === 0\r\n                ? <span style={{ color: \"#aaa\" }}>—</span>\r\n                : log.materialDeliveries.map((del, i) => (\r\n                  <div key={i}>\r\n                    {del.delivery?.requestNumber\r\n                      ? <>Request number {del.delivery.requestNumber} - {del.delivery.poNumber}</>\r\n                      : typeof del.delivery === \"string\"\r\n                        ? del.delivery\r\n                        : \"—\"\r\n                    }\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Work performed and remarks */}\r\n        <div style={flexBetween}>\r\n          <div style={{ flex: 1, marginRight: 18 }}>\r\n            <div style={sectionTitle}>Work Performed Today</div>\r\n            <div style={{\r\n              background: \"#fafbff\", borderRadius: 9, padding: 10, minHeight: 60, border: \"1px solid #ececec\",\r\n              whiteSpace: \"pre-line\"\r\n            }}>\r\n              {(log.workPerformed || []).length === 0\r\n                ? <span style={{ color: \"#aaa\" }}>—</span>\r\n                : log.workPerformed.map((work, i) =>\r\n                  <div key={i}>{work.task} - {capitalize(work.status)}</div>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n          <div style={{ flex: 1, marginLeft: 18 }}>\r\n            <div style={sectionTitle}>Additional Remarks</div>\r\n            <div style={{\r\n              background: \"#fafbff\", borderRadius: 9, padding: 10, minHeight: 60, border: \"1px solid #ececec\",\r\n              maxHeight: 90, overflow: \"auto\"\r\n            }}>\r\n              {log.remarks || <span style={{ color: \"#aaa\" }}>—</span>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Attachments */}\r\n        <div>\r\n          <div style={sectionTitle}>Attachment Proof</div>\r\n          <div style={{\r\n            display: 'flex', gap: 24, justifyContent: 'flex-start',\r\n            marginTop: 8, flexWrap: 'wrap'\r\n          }}>\r\n            {attachments.length === 0\r\n              ? <span style={{ color: \"#aaa\" }}>—</span>\r\n              : attachments.map((img, idx) => (\r\n                <img\r\n                  key={idx}\r\n                  src={img}\r\n                  alt={`proof-${idx}`}\r\n                  style={{ width: 180, height: 120, objectFit: 'cover', borderRadius: 9, border: \"1px solid #e6e6e6\" }}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PmViewDailyLogs;\r\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../style/ceo_style/Ceo_Dash.css';\r\nimport '../style/ceo_style/Ceo_ManpowerRequest.css';\r\nimport '../style/pm_style/Pm_ViewRequest.css';\r\nimport api from '../../api/axiosInstance';\r\nimport { FaSearch, FaTh, FaList } from 'react-icons/fa';\r\nimport AppHeader from '../layout/AppHeader';\r\n\r\nconst ITEMS_PER_PAGE = 8;\r\n\r\nconst PmManpowerList = () => {\r\n  const navigate = useNavigate();\r\n  const userRef = useRef(null);\r\n  if (userRef.current === null) {\r\n    const stored = localStorage.getItem('user');\r\n    userRef.current = stored ? JSON.parse(stored) : null;\r\n  }\r\n  const user = userRef.current;\r\n\r\n  const [requests, setRequests] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [status, setStatus] = useState('All');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [layoutView, setLayoutView] = useState('cards');\r\n  const [sortDesc, setSortDesc] = useState(true);\r\n\r\n  // PM-specific functionality\r\n  const [viewMode, setViewMode] = useState('mine'); // 'mine' or 'others'\r\n\r\n  useEffect(() => {\r\n    if (!user || user.role !== 'Project Manager') return;\r\n    let active = true;\r\n    const fetchAll = async () => {\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n        if (viewMode === 'mine') {\r\n          const { data } = await api.get('/manpower-requests/mine');\r\n          if (!active) return;\r\n          setRequests(Array.isArray(data) ? data : []);\r\n        } else {\r\n          // Fetch ALL requests then filter out those created by this user\r\n          const { data } = await api.get('/manpower-requests');\r\n          if (!active) return;\r\n          const arr = Array.isArray(data) ? data : [];\r\n          const othersOnly = arr.filter(r => {\r\n            const creatorId = r.createdBy?._id || r.createdBy?.id || r.createdBy;\r\n            return creatorId && creatorId !== user._id; // exclude my own only\r\n          });\r\n          setRequests(othersOnly);\r\n        }\r\n      } catch (err) {\r\n        if (!active) return;\r\n        console.error('Failed to load manpower requests:', err);\r\n        if (err.response && (err.response.status === 401 || err.response.status === 403)) {\r\n          setError('Session expired or unauthorized. Please login.');\r\n        } else {\r\n          setError('Failed to load manpower requests');\r\n        }\r\n      } finally {\r\n        if (active) {\r\n          setLoading(false);\r\n          setCurrentPage(1);\r\n        }\r\n      }\r\n    };\r\n    fetchAll();\r\n    return () => { active = false; };\r\n  }, [user, viewMode]);\r\n\r\n  const filteredRequests = useMemo(() => {\r\n    let items = requests;\r\n    if (status !== 'All') {\r\n      if (status === 'Archived') {\r\n        items = items.filter(r => (r.status || 'Pending').toLowerCase().includes('archived'));\r\n      } else {\r\n        items = items.filter(r => (r.status || 'Pending').toLowerCase().includes(status.toLowerCase()));\r\n      }\r\n    } else {\r\n      // For 'All' filter, exclude archived items by default\r\n      items = items.filter(r => !(r.status || 'Pending').toLowerCase().includes('archived'));\r\n    }\r\n    if (searchTerm) {\r\n      const s = searchTerm.toLowerCase();\r\n      items = items.filter(r => {\r\n        const proj = r.project?.projectName || '';\r\n        const by = r.createdBy?.name || '';\r\n        const summary = (r.manpowers || []).map(m => `${m.quantity} ${m.type}`).join(', ');\r\n        return proj.toLowerCase().includes(s) || by.toLowerCase().includes(s) || summary.toLowerCase().includes(s) || (r.description || '').toLowerCase().includes(s);\r\n      });\r\n    }\r\n    return items;\r\n  }, [requests, status, searchTerm]);\r\n\r\n  // Sorting logic\r\n  const sortedRequests = useMemo(() => {\r\n    return [...filteredRequests].sort((a, b) => {\r\n      const aTime = new Date(a.createdAt || 0).getTime();\r\n      const bTime = new Date(b.createdAt || 0).getTime();\r\n      return sortDesc ? bTime - aTime : aTime - bTime;\r\n    });\r\n  }, [filteredRequests, sortDesc]);\r\n\r\n  const totalPages = Math.max(1, Math.ceil(sortedRequests.length / ITEMS_PER_PAGE));\r\n  const pageRows = useMemo(() => {\r\n    const start = (currentPage - 1) * ITEMS_PER_PAGE;\r\n    return sortedRequests.slice(start, start + ITEMS_PER_PAGE);\r\n  }, [sortedRequests, currentPage]);\r\n\r\n  const getRequestBackgroundColor = (request) => {\r\n    const statusLower = request.status?.toLowerCase() || '';\r\n    if (statusLower.includes('pending') && request.acquisitionDate && new Date(request.acquisitionDate) < new Date()) {\r\n      return '#fef3c7';\r\n    }\r\n    if (statusLower.includes('pending')) return '#ffffff';\r\n    if (statusLower.includes('approved')) return '#fef3c7';\r\n    if (statusLower.includes('rejected') || statusLower.includes('cancel') || statusLower.includes('denied')) return '#fef2f2';\r\n    if (statusLower.includes('completed')) return '#ecfdf5';\r\n    return '#f9fafb';\r\n  };\r\n\r\n  const getStatusBadge = (request) => {\r\n    const s = (request.status || 'Pending').toLowerCase();\r\n    const isOverdue = s === 'pending' && request.acquisitionDate && new Date(request.acquisitionDate) < new Date();\r\n    if (isOverdue) return 'Overdue';\r\n    if (s.includes('archived')) return 'Archived';\r\n    if (s.includes('completed')) return 'Completed';\r\n    if (s.includes('approved')) return 'Approved';\r\n    if (s.includes('pending')) return 'Pending';\r\n    if (s.includes('reject') || s.includes('denied') || s.includes('cancel')) return 'Rejected';\r\n    if (s.includes('overdue')) return 'Overdue';\r\n    return 'Unknown';\r\n  };\r\n\r\n  const getStatusColor = (request) => {\r\n    const s = (request.status || 'Pending').toLowerCase();\r\n    const isOverdue = s === 'pending' && request.acquisitionDate && new Date(request.acquisitionDate) < new Date();\r\n    if (isOverdue) return '#d97706';\r\n    if (s.includes('archived')) return '#8b5cf6';\r\n    if (s.includes('completed')) return '#059669';\r\n    if (s.includes('approved')) return '#10b981';\r\n    if (s.includes('pending')) return '#f59e0b';\r\n    if (s.includes('reject') || s.includes('denied') || s.includes('cancel')) return '#ef4444';\r\n    if (s.includes('overdue')) return '#d97706';\r\n    return '#6b7280';\r\n  };\r\n\r\n  const summaryCounts = useMemo(() => {\r\n    let pending = 0, approved = 0, completed = 0, rejected = 0, overdue = 0, archived = 0;\r\n    requests.forEach(r => {\r\n      const s = (r.status || 'Pending').toLowerCase();\r\n      const isOver = s === 'pending' && r.acquisitionDate && new Date(r.acquisitionDate) < new Date();\r\n      if (s.includes('archived')) archived++; else if (s.includes('completed')) completed++; else if (s.includes('approved')) approved++; else if (s.includes('reject') || s.includes('denied') || s.includes('cancel')) rejected++; else if (isOver || s.includes('overdue')) overdue++; else pending++;\r\n    });\r\n    return { total: requests.length, pending, approved, rejected, overdue, completed, archived };\r\n  }, [requests]);\r\n\r\n  const statusCounts = useMemo(() => ({\r\n    All: summaryCounts.total - summaryCounts.archived, // Exclude archived from All count\r\n    Pending: summaryCounts.pending,\r\n    Overdue: summaryCounts.overdue,\r\n    Approved: summaryCounts.approved,\r\n    Completed: summaryCounts.completed,\r\n    Rejected: summaryCounts.rejected,\r\n    Archived: summaryCounts.archived\r\n  }), [summaryCounts]);\r\n\r\n  if (!user || user.role !== 'Project Manager') {\r\n    return (\r\n      <div style={{ padding: 24 }}>\r\n        <h2>Forbidden</h2>\r\n        <p>You must be a Project Manager to view this page.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container ceo-manpower-requests-page\">\r\n      <AppHeader roleSegment=\"pm\" />\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"page-container\">\r\n          <div className=\"dashboard-card ceo-mr-header-card\">\r\n            <div className=\"card-header mr-header-row\">\r\n              <div className=\"mr-header-texts\">\r\n                <h1 className=\"card-title\">Manpower Requests</h1>\r\n                <p className=\"card-subtitle\">Manage and track manpower requests for your project</p>\r\n              </div>\r\n              <div className=\"layout-toggle-wrapper\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-primary request-manpower-btn\"\r\n                  onClick={()=> navigate('/pm/request-manpower')}\r\n                  style={{marginRight:12}}\r\n                >\r\n                  + Request Manpower\r\n                </button>\r\n                <button\r\n                  onClick={() => setSortDesc(!sortDesc)}\r\n                  className=\"btn-secondary sort-btn\"\r\n                  title=\"Toggle sort by Created date\"\r\n                >\r\n                  {sortDesc ? '↓ Newest' : '↑ Oldest'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body mr-filters-row\">\r\n              <div className=\"horizontal-controls\">\r\n                <div className=\"filter-tabs compact\">\r\n                  {['All','Pending','Overdue','Approved','Completed','Rejected','Archived'].map(tab => (\r\n                    <button key={tab} className={`filter-tab ${status === tab ? 'active' : ''}`} onClick={() => {setStatus(tab); setCurrentPage(1);}}>\r\n                      <span>{tab}</span>\r\n                      <span className=\"count\">{statusCounts[tab] ?? 0}</span>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                <div className=\"search-wrapper\">\r\n                  <FaSearch className=\"search-icon\" />\r\n                  <input type=\"text\" placeholder=\"Search requests...\" value={searchTerm} onChange={(e)=>{setSearchTerm(e.target.value); setCurrentPage(1);}} className=\"search-input\" />\r\n                </div>\r\n                <div className=\"view-mode-toggle small\">\r\n                  <button\r\n                    onClick={() => setViewMode('mine')}\r\n                    className={`view-mode-btn ${viewMode === 'mine' ? 'active' : ''}`}\r\n                    title=\"My Requests\"\r\n                  >\r\n                    Mine\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setViewMode('others')}\r\n                    className={`view-mode-btn ${viewMode === 'others' ? 'active' : ''}`}\r\n                    title=\"Others' Requests\"\r\n                  >\r\n                    Others\r\n                  </button>\r\n                </div>\r\n                <div className=\"layout-toggle small\">\r\n                  <button\r\n                    onClick={() => setLayoutView('cards')}\r\n                    className={`layout-btn ${layoutView === 'cards' ? 'active' : ''}`}\r\n                    title=\"Card View\"\r\n                  >\r\n                    <FaTh />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setLayoutView('table')}\r\n                    className={`layout-btn ${layoutView === 'table' ? 'active' : ''}`}\r\n                    title=\"Table View\"\r\n                  >\r\n                    <FaList />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dashboard-card ceo-mr-list-card\">\r\n            <div className=\"card-header list-header\"><h3 className=\"card-title-sm\">Requests <span className=\"muted\">({sortedRequests.length})</span></h3></div>\r\n            <div className={`requests-grid ceo-mr-grid ${layoutView === 'table' ? 'table-view' : ''}`}>            \r\n              {loading ? (\r\n                <div className=\"loading-state\"><div className=\"loading-spinner\"></div><p>Loading manpower requests...</p></div>\r\n              ) : error ? (\r\n                <div className=\"error-state\"><p>{error}</p></div>\r\n              ) : pageRows.length === 0 ? (\r\n                <div className=\"empty-state\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minHeight: '300px', textAlign: 'center' }}>\r\n                  <div className=\"empty-icon\" style={{ fontSize: '48px', marginBottom: '16px' }}>👥</div>\r\n                  <h3 style={{ marginBottom: '8px', color: '#374151' }}>No manpower requests found</h3>\r\n                  <p style={{ color: '#6b7280', margin: 0 }}>No requests match your current filters. Try adjusting your search criteria.</p>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  {layoutView === 'table' && (\r\n                    <div className=\"mr-table-header\" role=\"row\" aria-label=\"Table Header\">\r\n                      <div>Project</div>\r\n                      <div>Requester</div>\r\n                      <div>Description</div>\r\n                      <div>Manpower</div>\r\n                      <div>Target</div>\r\n                      <div>Dur</div>\r\n                      <div>Created</div>\r\n                      <div>Status</div>\r\n                      <div>Actions</div>\r\n                    </div>\r\n                  )}\r\n                  {pageRows.map(request => {\r\n                    const summary = (request.manpowers || []).map(m=>`${m.quantity} ${m.type}`).join(', ');\r\n                    const badgeLabel = getStatusBadge(request);\r\n                    const badgeColor = getStatusColor(request);\r\n                    if (layoutView === 'table') {\r\n                      return (\r\n                        <div\r\n                          key={request._id}\r\n                          className=\"mr-table-row\"\r\n                          role=\"row\"\r\n                          title=\"View details\"\r\n                        >\r\n                          <div className=\"rt-title\" title={request.project?.projectName || '(No Project Name)'}>{request.project?.projectName || '(No Project Name)'}</div>\r\n                          <div className=\"rt-req\" title={request.createdBy?.name || 'Unknown'}>{request.createdBy?.name || 'Unknown'}</div>\r\n                          <div className=\"rt-desc\" title={request.description || 'No description'}>{request.description || 'No description'}</div>\r\n                          <div className=\"rt-man\" title={summary || '—'}>{summary || '—'}</div>\r\n                          <div className=\"rt-date\" title=\"Target Date\">{request.acquisitionDate ? new Date(request.acquisitionDate).toLocaleDateString() : '—'}</div>\r\n                          <div className=\"rt-date\" title=\"Duration\">{request.duration || '—'}d</div>\r\n                          <div className=\"rt-date\" title=\"Created\">{request.createdAt ? new Date(request.createdAt).toLocaleDateString() : '—'}</div>\r\n                          <div className=\"rt-btn\"><span className={`status-chip ${badgeLabel.toLowerCase()}`}>{badgeLabel}</span></div>\r\n                          <div className=\"rt-actions\">\r\n                            <Link to={`/pm/manpower-request/${request._id}`} className=\"view-details-btn\">View Details</Link>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div className={`request-card ceo-mr-card`} key={request._id}>\r\n                        <div className=\"card-body\">\r\n                          <div className=\"mr-card-top-row\">\r\n                            <h3 className=\"request-title\" title={request.project?.projectName || '(No Project Name)'}>{request.project?.projectName || '(No Project Name)'}</h3>\r\n                            <span className={`status-chip ${badgeLabel.toLowerCase()}`}>{badgeLabel}</span>\r\n                          </div>\r\n                          <p className=\"request-description\" title={request.description || 'No description provided'}>{request.description || 'No description provided'}</p>\r\n                          <div className=\"request-meta\">\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Requested by:</span><span className=\"meta-value\" title={request.createdBy?.name || 'Unknown'}>{request.createdBy?.name || 'Unknown'}</span></div>\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Manpower:</span><span className=\"meta-value\" title={summary || '—'}>{summary || '—'}</span></div>\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Date:</span><span className=\"meta-value\">{request.createdAt ? new Date(request.createdAt).toLocaleDateString() : '—'}</span></div>\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Target:</span><span className=\"meta-value\">{request.acquisitionDate ? new Date(request.acquisitionDate).toLocaleDateString() : '—'}</span></div>\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Duration:</span><span className=\"meta-value\">{request.duration || '—'} d</span></div>\r\n                          </div>\r\n                          \r\n                          {/* Rejection Information */}\r\n                          {request.rejectedBy && request.rejectedBy.length > 0 && (\r\n                            <div className=\"rejection-info\">\r\n                              <div className=\"meta-item\">\r\n                                <span className=\"meta-label\">Rejected by:</span>\r\n                                <span className=\"meta-value rejection-list\">\r\n                                  {request.rejectedBy.map((rejection, index) => (\r\n                                    <span key={index} className=\"rejection-item\">\r\n                                      {rejection.userName || rejection.userId?.name || 'Unknown PM'}\r\n                                      {index < request.rejectedBy.length - 1 ? ', ' : ''}\r\n                                    </span>\r\n                                  ))}\r\n                                </span>\r\n                              </div>\r\n                              {request.rejectionReason && (\r\n                                <div className=\"meta-item\">\r\n                                  <span className=\"meta-label\">Reason:</span>\r\n                                  <span className=\"meta-value rejection-reason\">{request.rejectionReason}</span>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                          <Link to={`/pm/manpower-request/${request._id}`} className=\"view-details-btn\">View Details</Link>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </div>\r\n            {sortedRequests.length > 0 && (\r\n              <div className=\"pagination-section inside-card\">\r\n                <div className=\"pagination-info\">Showing {((currentPage - 1) * ITEMS_PER_PAGE) + 1} to {Math.min(currentPage * ITEMS_PER_PAGE, sortedRequests.length)} of {sortedRequests.length} entries</div>\r\n                <div className=\"pagination-controls\">\r\n                  <button onClick={()=>setCurrentPage(p=>Math.max(p-1,1))} disabled={currentPage===1} className=\"pagination-btn\">Previous</button>\r\n                  {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\r\n                    <button key={page} className={`pagination-btn ${page === currentPage ? 'active' : ''}`} onClick={()=>setCurrentPage(page)}>{page}</button>\r\n                  ))}\r\n                  <button onClick={()=>setCurrentPage(p=>Math.min(p+1,totalPages))} disabled={currentPage===totalPages} className=\"pagination-btn\">Next</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PmManpowerList;\r\n","import React from 'react';\r\nimport ProjectView from '../project/ProjectView';\r\nimport AppHeader from '../layout/AppHeader';\r\n\r\n// PM role wrapper pointing to the reusable ProjectView component\r\nexport default function PmViewProjects(){\r\n  return (\r\n    <>\r\n      <ProjectView role=\"pm\" useUnifiedHeader />\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport api from '../../api/axiosInstance';\r\nimport '../style/pm_style/Pm_ManpowerRequest.css';\r\nimport AppHeader from '../layout/AppHeader';\r\nimport { FaPlus, FaTrash, FaSave, FaArrowLeft } from 'react-icons/fa';\r\n\r\nconst PmRequestManpower = () => {\r\n  const navigate = useNavigate();\r\n  const stored = localStorage.getItem('user');\r\n  const user = stored ? JSON.parse(stored) : null;\r\n  const token = localStorage.getItem('token');\r\n  const userId = user?._id;\r\n  const { id } = useParams();\r\n  const [project, setProject] = useState(null);\r\n  const [projects, setProjects] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editMode, setEditMode] = useState(!!id);\r\n  const [formData, setFormData] = useState({\r\n    acquisitionDate: '',\r\n    duration: '',\r\n    project: '',\r\n    manpowers: [{ type: '', quantity: '' }],\r\n    description: '',\r\n  });\r\n\r\n  // Autocomplete state\r\n  const [allTypes, setAllTypes] = useState([]);\r\n  const [focusedRow, setFocusedRow] = useState(null);\r\n  const [highlighted, setHighlighted] = useState({}); // rowIdx -> highlighted suggestion index\r\n  // Modal state\r\n  const [modal, setModal] = useState({ open: false, title: '', message: '', type: 'info', actions: [] });\r\n\r\n  const openModal = ({ title, message, type = 'info', actions }) => {\r\n    setModal({ open: true, title, message, type, actions: actions || [] });\r\n  };\r\n  const closeModal = () => setModal(m => ({ ...m, open: false }));\r\n\r\n  const fetchTypeSuggestions = async () => {\r\n    try {\r\n      const { data } = await api.get('/manpower/types/list');\r\n      const list = data.types || [];\r\n      setAllTypes(list);\r\n      console.log('[Autocomplete] Loaded manpower types:', list.length);\r\n    } catch (e) {\r\n      console.error('Failed to load manpower types', e);\r\n    }\r\n  };\r\n\r\n  // Initial load of all types (once)\r\n  useEffect(() => { fetchTypeSuggestions(); }, []);\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (!user || !user._id) return;\r\n\r\n    api.get(`/projects/assigned/projectmanager/${user._id}`)\r\n      .then(res => {\r\n        const data = res.data;\r\n        if (data && data._id) {\r\n          setProject(data);\r\n          setFormData(prev => ({\r\n            ...prev,\r\n            project: data._id\r\n          }));\r\n        }\r\n      })\r\n      .catch(err => console.error('Error fetching project', err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      api.get(`/manpower-requests/${id}`)\r\n        .then(res => {\r\n          const data = res.data;\r\n          if (data) {\r\n            setEditMode(true);\r\n            setFormData({\r\n              acquisitionDate: data.acquisitionDate ? data.acquisitionDate.split('T')[0] : '',\r\n              duration: data.duration || '',\r\n              project: data.project?._id || data.project || '',\r\n              manpowers: data.manpowers && data.manpowers.length > 0 ? data.manpowers : [{ type: '', quantity: '' }],\r\n              description: data.description || '',\r\n            });\r\n            setProject(data.project);\r\n          }\r\n        })\r\n        .finally(() => setLoading(false));\r\n    } else {\r\n      setEditMode(false);\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  const handleManpowerChange = (idx, field, value) => {\r\n    setFormData(prev => {\r\n      const newManpowers = prev.manpowers.map((mp, i) =>\r\n        i === idx ? { ...mp, [field]: value } : mp\r\n      );\r\n      return { ...prev, manpowers: newManpowers };\r\n    });\r\n  // No per-key fetch now; we filter client-side from allTypes\r\n  };\r\n\r\n  const addManpowerRow = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      manpowers: [...prev.manpowers, { type: '', quantity: '' }]\r\n    }));\r\n  };\r\n\r\n  const removeManpowerRow = (idx) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      manpowers: prev.manpowers.filter((_, i) => i !== idx)\r\n    }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token || !user) return;\r\n    const fetchProjects = async () => {\r\n      try {\r\n        const { data } = await api.get('/projects');\r\n        const filtered = data.filter(\r\n          (p) => p.projectManager && (\r\n            (typeof p.projectManager === 'object' && (p.projectManager._id === userId || p.projectManager.id === userId)) ||\r\n            p.projectManager === userId\r\n          )\r\n        );\r\n        setProjects(filtered);\r\n      } catch (err) {\r\n        console.error('Failed to fetch projects:', err);\r\n      }\r\n    };\r\n    fetchProjects();\r\n  }, [user, userId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!formData.acquisitionDate || !formData.duration || !formData.project || !formData.description) {\r\n      openModal({\r\n        title: 'Incomplete Form',\r\n        message: 'All fields are required before submitting the manpower request.',\r\n        type: 'warning',\r\n        actions: [\r\n          { label: 'Close', onClick: () => closeModal(), primary: true }\r\n        ]\r\n      });\r\n      return;\r\n    }\r\n    const validManpowers = formData.manpowers.every(mp =>\r\n      typeof mp.type === \"string\" &&\r\n      mp.type.trim() !== \"\" &&\r\n      mp.quantity !== \"\" &&\r\n      !isNaN(Number(mp.quantity)) &&\r\n      Number(mp.quantity) > 0\r\n    );\r\n    if (!validManpowers) {\r\n      openModal({\r\n        title: 'Invalid Manpower Entries',\r\n        message: 'Each manpower row must have a type (text) and a quantity greater than 0.',\r\n        type: 'warning',\r\n        actions: [ { label: 'Fix Entries', onClick: () => closeModal(), primary: true } ]\r\n      });\r\n      return;\r\n    }\r\n\r\n    const body = {\r\n      acquisitionDate: formData.acquisitionDate,\r\n      duration: Number(formData.duration),\r\n      project: formData.project,\r\n      description: formData.description,\r\n      manpowers: formData.manpowers.map(mp => ({\r\n        type: mp.type.trim(),\r\n        quantity: Number(mp.quantity)\r\n      }))\r\n    };\r\n\r\n    try {\r\n      let url = '/manpower-requests';\r\n      let method = 'post';\r\n      if (editMode) {\r\n        url = `/manpower-requests/${id}`;\r\n        method = 'put';\r\n      }\r\n\r\n      const response = await api[method](url, body);\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        openModal({\r\n          title: editMode ? 'Request Updated' : 'Request Submitted',\r\n          type: 'success',\r\n            message: editMode\r\n              ? 'The manpower request has been successfully updated.'\r\n              : 'Your manpower request has been submitted successfully.',\r\n          actions: [\r\n            { label: 'Go to Manpower List', onClick: () => { closeModal(); navigate('/pm/manpower-list'); }, primary: true },\r\n            !editMode ? { label: 'Create Another', onClick: () => { closeModal(); setFormData({ acquisitionDate: '', duration: '', project: formData.project, manpowers: [{ type: '', quantity: '' }], description: '' }); } } : null,\r\n          ].filter(Boolean)\r\n        });\r\n      } else {\r\n        openModal({\r\n          title: 'Submission Error',\r\n          type: 'error',\r\n          message: response.data?.message || 'Failed to submit request. Please try again.',\r\n          actions: [ { label: 'Close', onClick: () => closeModal(), primary: true } ]\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Submission error:', error);\r\n      openModal({\r\n        title: 'Network Error',\r\n        type: 'error',\r\n        message: 'Failed to connect to server. Please check your connection and try again.',\r\n        actions: [ { label: 'Close', onClick: () => closeModal(), primary: true } ]\r\n      });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading manpower request form...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <AppHeader roleSegment=\"pm\" />\r\n\r\n      {/* Main Content Area */}\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"content-wrapper\">\r\n          {/* Page Header */}\r\n          <div className=\"page-header\">\r\n            <div className=\"page-header-content\">\r\n              <button \r\n                onClick={() => navigate('/pm/manpower-list')} \r\n                className=\"back-button\"\r\n              >\r\n                <FaArrowLeft />\r\n                <span>Back to Manpower List</span>\r\n              </button>\r\n              <div className=\"page-title-section\">\r\n                <h1 className=\"page-title\">\r\n                  {editMode ? \"Edit Manpower Request\" : \"Request Manpower\"}\r\n                </h1>\r\n                <p className=\"page-subtitle\">\r\n                  {editMode \r\n                    ? \"Update your manpower request details\" \r\n                    : \"Submit a new manpower request for your project\"\r\n                  }\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Form Container */}\r\n          <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit} className=\"manpower-form\">\r\n              {/* Project Information */}\r\n              {project && (\r\n                <div className=\"form-section\">\r\n                  <div className=\"section-header\">\r\n                    <h3>Project Information</h3>\r\n                  </div>\r\n                  <div className=\"form-row\">\r\n                    <div className=\"form-group full-width\">\r\n                      <label htmlFor=\"projectName\">Project Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"projectName\"\r\n                        value={project.projectName || 'Project Name Not Available'}\r\n                        readOnly\r\n                        className=\"readonly-input\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Request Details */}\r\n              <div className=\"form-section\">\r\n                <div style={{ display: 'flex', gap: '1rem', alignItems: 'end' }}>\r\n                  <div style={{ flex: '1' }}>\r\n                    <label htmlFor=\"acquisitionDate\" style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '500' }}>Target Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"acquisitionDate\"\r\n                      name=\"acquisitionDate\"\r\n                      value={formData.acquisitionDate}\r\n                      onChange={handleChange}\r\n                      required\r\n                      className=\"form-input\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ flex: '1' }}>\r\n                    <label htmlFor=\"duration\" style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '500' }}>Duration</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"duration\"\r\n                      name=\"duration\"\r\n                      min=\"1\"\r\n                      placeholder=\"Days\"\r\n                      value={formData.duration}\r\n                      onChange={handleChange}\r\n                      required\r\n                      className=\"form-input\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Manpower Requirements */}\r\n              <div className=\"form-section\">\r\n                <div className=\"section-header\">\r\n                  <h3>Manpower Requirements</h3>\r\n                  <p className=\"section-description\">\r\n                    Add the types and quantities of manpower needed\r\n                  </p>\r\n                </div>\r\n                \r\n                <div className=\"manpower-table\">\r\n                  <div className=\"table-header\">\r\n                    <div className=\"header-cell\">Type</div>\r\n                    <div className=\"header-cell\">Qty</div>\r\n                    <div className=\"header-cell actions\">Actions</div>\r\n                  </div>\r\n                  \r\n      {formData.manpowers.map((mp, idx) => {\r\n        const suggestions = (allTypes || []).filter(t => !mp.type || t.toLowerCase().includes(mp.type.toLowerCase())).slice(0, 15);\r\n        const showDropdown = focusedRow === idx; // show whenever focused\r\n        const currentHighlight = highlighted[idx] ?? -1;\r\n        const handleKeyDown = (e) => {\r\n          if (!showDropdown) return;\r\n          if (['ArrowDown','ArrowUp','Enter','Tab','Escape'].includes(e.key)) e.preventDefault();\r\n            if (e.key === 'ArrowDown') {\r\n              if (suggestions.length === 0) return;\r\n              setHighlighted(h => ({ ...h, [idx]: (currentHighlight + 1) % suggestions.length }));\r\n            } else if (e.key === 'ArrowUp') {\r\n              if (suggestions.length === 0) return;\r\n              setHighlighted(h => ({ ...h, [idx]: (currentHighlight - 1 + suggestions.length) % suggestions.length }));\r\n            } else if (e.key === 'Enter') {\r\n              if (currentHighlight >= 0 && suggestions[currentHighlight]) {\r\n                handleManpowerChange(idx, 'type', suggestions[currentHighlight]);\r\n                setFocusedRow(null);\r\n                setHighlighted(h => ({ ...h, [idx]: -1 }));\r\n              }\r\n            } else if (e.key === 'Escape') {\r\n              setFocusedRow(null);\r\n              setHighlighted(h => ({ ...h, [idx]: -1 }));\r\n            }\r\n        };\r\n                    return (\r\n                      <div className=\"table-row\" key={idx} style={{ position:'relative' }}>\r\n                        <div className=\"table-cell\" style={{ position:'relative' }}>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"e.g., Electrician, Plumber\"\r\n                            value={mp.type}\r\n          onChange={e => handleManpowerChange(idx, 'type', e.target.value)}\r\n          onFocus={() => { setFocusedRow(idx); }}\r\n          onBlur={() => { setTimeout(()=>{ setFocusedRow(r => r === idx ? null : r); }, 160); }}\r\n          onKeyDown={handleKeyDown}\r\n                            required\r\n                            autoComplete=\"off\"\r\n                            className=\"form-input\"\r\n                          />\r\n                          {showDropdown && (\r\n                            <ul id={`mp-type-dd-${idx}`} className=\"type-suggestions\" style={{\r\n                              listStyle:'none', margin:0, padding:'4px 0', position:'absolute', top:'100%', left:0, right:0, background:'#fff', border:'1px solid #e5e7eb', zIndex:1000, maxHeight:200, overflowY:'auto', borderRadius:6, boxShadow:'0 4px 12px rgba(0,0,0,0.08)'\r\n                            }}>\r\n                              {suggestions.length === 0 && (\r\n                                <li style={{ padding:'6px 10px', fontSize:12, color:'#6b7280' }}>No types found</li>\r\n                              )}\r\n                              {suggestions.map((s, i) => (\r\n                                <li key={s}\r\n                                  style={{ padding:'6px 10px', cursor:'pointer', fontSize:13, background: i===currentHighlight ? '#f3f4f6':'#fff' }}\r\n                                  onMouseDown={e => { e.preventDefault(); handleManpowerChange(idx, 'type', s); setFocusedRow(null); setHighlighted(h=>({...h,[idx]:-1})); }}\r\n                                  onMouseEnter={() => setHighlighted(h => ({ ...h, [idx]: i }))}\r\n                                >{s}</li>\r\n                              ))}\r\n                            </ul>\r\n                          )}\r\n                        </div>\r\n                      <div className=\"table-cell\">\r\n                        <input\r\n                          type=\"number\"\r\n                          placeholder=\"Qty\"\r\n                          min=\"1\"\r\n                          value={mp.quantity}\r\n                          onChange={e => handleManpowerChange(idx, 'quantity', e.target.value)}\r\n                          required\r\n                          className=\"form-input\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-cell actions\">\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeManpowerRow(idx)}\r\n                          className=\"remove-btn\"\r\n                          title=\"Remove this manpower requirement\"\r\n                          disabled={formData.manpowers.length === 1}\r\n                        >\r\n                          <FaTrash />\r\n                        </button>\r\n                      </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n                \r\n                <div className=\"add-manpower-section\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={addManpowerRow}\r\n                    className=\"add-manpower-btn\"\r\n                  >\r\n                    <FaPlus />\r\n                    <span>Add Manpower Type</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Description */}\r\n              <div className=\"form-section\">\r\n                <div className=\"section-header\">\r\n                  <h3>Description</h3>\r\n                  <p className=\"section-description\">\r\n                    Provide details about the manpower request\r\n                  </p>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group full-width\">\r\n                    <label htmlFor=\"description\">Request Details</label>\r\n                    <textarea\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      placeholder=\"Describe requirements, skills needed, work scope, and other relevant details...\"\r\n                      value={formData.description}\r\n                      onChange={handleChange}\r\n                      rows={4}\r\n                      required\r\n                      className=\"form-textarea\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Submit Section */}\r\n              <div className=\"form-section submit-section\">\r\n                <div className=\"submit-actions\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => navigate('/pm/manpower-list')}\r\n                    className=\"cancel-btn\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button type=\"submit\" className=\"submit-btn\">\r\n                    <FaSave />\r\n                    <span>\r\n                      {editMode ? \"Update Request\" : \"Submit Request\"}\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {modal.open && (\r\n        <div className={`center-modal-overlay ${modal.type}`} role=\"dialog\" aria-modal=\"true\">\r\n          <div className=\"center-modal\">\r\n            <div className=\"center-modal-header\">\r\n              <h2>{modal.title}</h2>\r\n            </div>\r\n            <div className=\"center-modal-body\">\r\n              <p>{modal.message}</p>\r\n            </div>\r\n            <div className=\"center-modal-actions\">\r\n              {modal.actions.map((a,i) => (\r\n                <button\r\n                  key={i}\r\n                  type=\"button\"\r\n                  className={a.primary ? 'modal-btn primary' : 'modal-btn'}\r\n                  onClick={a.onClick}\r\n                >\r\n                  {a.label}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PmRequestManpower;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport api from '../../api/axiosInstance'; \r\nimport NotificationBell from '../NotificationBell';\r\nimport '../style/pm_style/Pm_DailyLogs.css';\r\n\r\nconst PMDailyLogs = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [project, setProject] = useState(null);\r\n  const [projects, setProjects] = useState([]);\r\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\r\n\r\n  // Get logged-in user info from localStorage\r\n  const token = localStorage.getItem('token');\r\n  const stored = localStorage.getItem('user');\r\n  const user = stored ? JSON.parse(stored) : null;\r\n  const userId = user?._id;\r\n\r\n  // State for project data\r\n  const [userName, setUserName] = useState(user?.name || 'ALECK');\r\n  const [currentProject, setCurrentProject] = useState(null);\r\n  const [projectManpower, setProjectManpower] = useState([]);\r\n  const [materialDeliveries, setMaterialDeliveries] = useState([]);\r\n  const [projectTasks, setProjectTasks] = useState([]);\r\n\r\n  // Form states\r\n  const [formData, setFormData] = useState({\r\n    siteAttendance: [],\r\n    materialDeliveries: [],\r\n    workPerformed: [],\r\n    weatherCondition: 'Sunny',\r\n    remarks: ''\r\n  });\r\n\r\n  const chats = [\r\n    { id: 1, name: 'Rychea Miralles', initial: 'R', message: 'Hello Good Morning po! As...', color: '#4A6AA5' },\r\n    { id: 2, name: 'Third Castellar', initial: 'T', message: 'Hello Good Morning po! As...', color: '#2E7D32' },\r\n    { id: 3, name: 'Zenarose Miranda', initial: 'Z', message: 'Hello Good Morning po! As...', color: '#9C27B0' }\r\n  ];\r\n\r\n  // Fetch project assigned as Project Manager\r\n  useEffect(() => {\r\n    if (!token || !userId) return;\r\n\r\n    const fetchAssignedPMProject = async () => {\r\n      try {\r\n        const { data } = await api.get(`/projects/assigned/projectmanager/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setProject(data);\r\n      } catch (err) {\r\n        console.error('Error fetching assigned PM project:', err);\r\n        setProject(null);\r\n      }\r\n    };\r\n\r\n    fetchAssignedPMProject();\r\n  }, [token, userId]);\r\n\r\n  // Fetch project data\r\n  useEffect(() => {\r\n    const fetchProjectData = async () => {\r\n      try {\r\n        console.log('Fetching project for user:', userId);\r\n\r\n        // Get project assigned to the project manager\r\n        const projectResponse = await api.get(`/projects/assigned/projectmanager/${userId}`);\r\n        const projectData = projectResponse.data;\r\n        setCurrentProject(projectData);\r\n\r\n        if (projectData._id) {\r\n          console.log('Fetching additional project data for:', projectData._id);\r\n\r\n          // Fetch manpower\r\n          const manpowerResponse = await api.get(`/daily-reports/project/${projectData._id}/manpower`);\r\n          setProjectManpower(manpowerResponse.data);\r\n\r\n          // Fetch material deliveries (approved only)\r\n          const deliveriesResponse = await api.get(`/daily-reports/project/${projectData._id}/material-deliveries`);\r\n          setMaterialDeliveries(deliveriesResponse.data);\r\n\r\n          // Fetch project tasks\r\n          const tasksResponse = await api.get(`/daily-reports/project/${projectData._id}/tasks`);\r\n          setProjectTasks(tasksResponse.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error details:', {\r\n          message: error?.message,\r\n          userId: userId,\r\n          hasToken: !!localStorage.getItem('token')\r\n        });\r\n        alert(`Error loading project data: ${error?.response?.data?.message || error.message}`);\r\n      }\r\n    };\r\n\r\n    if (userId) {\r\n      fetchProjectData();\r\n    } else {\r\n      console.error('No user ID found');\r\n      alert('User ID not found. Please log in again.');\r\n    }\r\n  }, [userId]);\r\n\r\n  // Ensure workPerformed always matches projectTasks\r\n  useEffect(() => {\r\n    if (projectTasks.length > 0) {\r\n      setFormData(prev => {\r\n        // Map each project task to a workPerformed entry\r\n        const newWorkPerformed = projectTasks.map((task, i) => {\r\n          const taskName = typeof task === 'string' ? task : task.name;\r\n          // Try to find existing entry\r\n          const existing = prev.workPerformed.find(wp => wp.task === taskName);\r\n          return existing || { task: taskName, status: '', remarks: '' };\r\n        });\r\n        return { ...prev, workPerformed: newWorkPerformed };\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [projectTasks]);\r\n\r\n  // Handle form field changes\r\n  const handleFieldChange = (field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  // Handle site attendance change\r\n  const handleAttendanceChange = (manpowerId, status) => {\r\n    setFormData(prev => {\r\n      const attendance = [...prev.siteAttendance];\r\n      const index = attendance.findIndex(a => a.manpower === manpowerId);\r\n\r\n      if (index >= 0) {\r\n        attendance[index].status = status;\r\n      } else {\r\n        attendance.push({ manpower: manpowerId, status });\r\n      }\r\n\r\n      return { ...prev, siteAttendance: attendance };\r\n    });\r\n  };\r\n\r\n  // Handle material delivery change\r\n  const handleMaterialDeliveryChange = (deliveryId, status) => {\r\n    setFormData(prev => {\r\n      const deliveries = [...prev.materialDeliveries];\r\n      const index = deliveries.findIndex(d => d.delivery === deliveryId);\r\n\r\n      if (index >= 0) {\r\n        deliveries[index].status = status;\r\n      } else {\r\n        deliveries.push({ delivery: deliveryId, status });\r\n      }\r\n\r\n      return { ...prev, materialDeliveries: deliveries };\r\n    });\r\n  };\r\n\r\n  // Handle work performed change\r\n  const handleWorkPerformedChange = (index, field, value) => {\r\n    setFormData(prev => {\r\n      const work = [...prev.workPerformed];\r\n      if (!work[index]) {\r\n        work[index] = { task: '', status: '', remarks: '' };\r\n      }\r\n      work[index][field] = value;\r\n      return { ...prev, workPerformed: work };\r\n    });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      await api.post('/daily-reports', {\r\n        ...formData,\r\n        project: currentProject._id,\r\n        submittedBy: userId,\r\n        date: new Date()\r\n      });\r\n      alert('Daily report submitted successfully!');\r\n      setFormData({\r\n        siteAttendance: [],\r\n        materialDeliveries: [],\r\n        workPerformed: [],\r\n        weatherCondition: 'Sunny',\r\n        remarks: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error submitting daily report:', error);\r\n      alert('Error submitting daily report. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Profile menu close on outside click\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (!event.target.closest(\".profile-menu-container\")) {\r\n        setProfileMenuOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => document.removeEventListener(\"click\", handleClickOutside);\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Submitting daily report...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n return (\r\n    <div>\r\n      {/* Header - always at the top */}\r\n      <header className=\"header\">\r\n        <div className=\"logo-container\">\r\n          <img src={require('../../assets/images/FadzLogo1.png')} alt=\"FadzTrack Logo\" className=\"logo-img\" />\r\n          <h1 className=\"brand-name\">FadzTrack</h1>\r\n        </div>\r\n        <nav className=\"nav-menu\">\r\n          <Link to=\"/pm\" className=\"nav-link\">Dashboard</Link>\r\n          <Link to=\"/pm/chat\" className=\"nav-link\">Chat</Link>\r\n          <Link to=\"/pm/request/:id\" className=\"nav-link\">Material</Link>\r\n          <Link to=\"/pm/manpower-list\" className=\"nav-link\">Manpower</Link>\r\n          {project && (\r\n            <Link to={`/pm/viewprojects/${project._id || project.id}`} className=\"nav-link\">View Project</Link>\r\n          )}\r\n          <Link to=\"/pm/daily-logs\" className=\"nav-link\">Logs</Link>\r\n          <Link to=\"/reports\" className=\"nav-link\">Reports</Link>\r\n        </nav>\r\n        <div className=\"profile-menu-container\" style={{ display: 'flex', alignItems: 'center', gap: 18 }}>\r\n  <NotificationBell />\r\n  <div className=\"profile-circle\" onClick={() => setProfileMenuOpen(!profileMenuOpen)}>\r\n    {userName ? userName.charAt(0).toUpperCase() : 'Z'}\r\n  </div>\r\n  {profileMenuOpen && (\r\n    <div className=\"profile-menu\">\r\n      <button onClick={handleLogout}>Logout</button>\r\n    </div>\r\n  )}\r\n</div>\r\n      </header>\r\n\r\n      {/* Main two-column flex layout */}\r\n      <div className=\"dashboard-layout\" style={{ display: 'flex', minHeight: '100vh' }}>\r\n        {/* Sidebar */}\r\n        <div\r\n          className=\"sidebar\"\r\n          style={{\r\n            minWidth: 270,\r\n            background: \"#f7f9fa\",\r\n            borderRight: \"1px solid #ececec\",\r\n            minHeight: \"100vh\",\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            boxShadow: \"none\",\r\n            padding: 0,\r\n            margin: 0\r\n          }}\r\n        >\r\n          <div style={{ fontWeight: 600, fontSize: 20, margin: '28px 0 22px 0', marginLeft: 24 }}>Chats</div>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: 8 }}>\r\n            {chats.map(chat => (\r\n              <div key={chat.id} style={{ display: 'flex', alignItems: 'center', gap: 14, padding: '13px 22px', borderRadius: 10, background: '#fff', margin: '0 18px 8px 12px', boxShadow: '0 1px 5px 0 rgba(25,25,25,0.04)', cursor: 'pointer', transition: 'background .2s' }}>\r\n                <div style={{ width: 36, height: 36, borderRadius: '50%', background: chat.color, color: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'center', fontWeight: 600, fontSize: 20 }}>{chat.initial}</div>\r\n                <div>\r\n                  <div style={{ fontWeight: 500, fontSize: 15 }}>{chat.name}</div>\r\n                  <div style={{ fontSize: 13, color: '#767676', marginTop: 1, whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 135 }}>\r\n                    {chat.message}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div style={{ flex: 1, minHeight: \"100vh\" }}>\r\n          <main className=\"main-content-dailylogs\">\r\n            <h1 className=\"page-title-dailylogs\">Daily Logs</h1>\r\n            <form onSubmit={handleSubmit} className=\"daily-logs-grid grid-flow\">\r\n              {/* ...the rest of your form stays here unchanged... */}\r\n              <div className=\"log-section\">\r\n                <h2 className=\"section-title\">Site Attendance Log</h2>\r\n                <div\r\n                  style={{\r\n                    maxHeight: 240, // Adjust for 5 rows, ~48px each (change if your row height is different)\r\n                    overflowY: projectManpower.length > 5 ? 'auto' : 'unset',\r\n                    border: projectManpower.length > 5 ? '1px solid #eee' : 'none',\r\n                    borderRadius: 8,\r\n                    paddingRight: 8,\r\n                    marginBottom: 8\r\n                  }}\r\n                >\r\n                  {projectManpower.length > 0 ? (\r\n                    projectManpower.map(manpower => (\r\n                      <div key={manpower._id} className=\"attendance-entry\">\r\n                        <span>{manpower.name}</span>\r\n                        <select\r\n                          className=\"form-input\"\r\n                          value={formData.siteAttendance.find(a => a.manpower === manpower._id)?.status || ''}\r\n                          onChange={(e) => handleAttendanceChange(manpower._id, e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select Status</option>\r\n                          <option value=\"Present\">Present</option>\r\n                          <option value=\"Absent\">Absent</option>\r\n                          <option value=\"Late\">Late</option>\r\n                        </select>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <p>No manpower assigned to this project</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              {/* ...the rest of your form (material deliveries, work performed, weather, remarks, button)... */}\r\n              <div className=\"log-section\">\r\n                <h2 className=\"section-title\">Material Deliveries</h2>\r\n                {materialDeliveries.length > 0 ? (\r\n                  materialDeliveries.map(delivery => (\r\n                    <div key={delivery._id || delivery.requestId} className=\"delivery-entry\">\r\n                      <span>{delivery.materialName || delivery.name}</span>\r\n                      <select\r\n                        className=\"form-input\"\r\n                        value={formData.materialDeliveries.find(d => d.delivery === (delivery._id || delivery.requestId))?.status || ''}\r\n                        onChange={(e) => handleMaterialDeliveryChange(delivery._id || delivery.requestId, e.target.value)}\r\n                      >\r\n                        <option value=\"\">Select Status</option>\r\n                        <option value=\"Received\">Received</option>\r\n                        <option value=\"Pending\">Pending</option>\r\n                        <option value=\"Rejected\">Rejected</option>\r\n                      </select>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>No approved material deliveries for this project</p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"log-section\">\r\n                <h2 className=\"section-title\">Work Performed Today</h2>\r\n                <div style={{ overflowX: 'auto' }}>\r\n                  <table className=\"work-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Task</th>\r\n                        <th>Status</th>\r\n                        <th>Remarks</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {formData.workPerformed.map((work, index) => (\r\n                        <tr key={work.task}>\r\n                          <td>{work.task}</td>\r\n                          <td>\r\n                            <label style={{ marginRight: 10 }}>\r\n                              <input\r\n                                type=\"radio\"\r\n                                name={`status-${index}`}\r\n                                value=\"In Progress\"\r\n                                checked={work.status === 'In Progress'}\r\n                                onChange={() => handleWorkPerformedChange(index, 'status', 'In Progress')}\r\n                              /> In Progress\r\n                            </label>\r\n                            <label style={{ marginRight: 10 }}>\r\n                              <input\r\n                                type=\"radio\"\r\n                                name={`status-${index}`}\r\n                                value=\"Completed\"\r\n                                checked={work.status === 'Completed'}\r\n                                onChange={() => handleWorkPerformedChange(index, 'status', 'Completed')}\r\n                              /> Completed\r\n                            </label>\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                name={`status-${index}`}\r\n                                value=\"Not Started\"\r\n                                checked={work.status === 'Not Started'}\r\n                                onChange={() => handleWorkPerformedChange(index, 'status', 'Not Started')}\r\n                              /> Not Started\r\n                            </label>\r\n                          </td>\r\n                          <td>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-input\"\r\n                              placeholder=\"Remarks\"\r\n                              value={work.remarks || ''}\r\n                              onChange={e => handleWorkPerformedChange(index, 'remarks', e.target.value)}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"log-section\">\r\n                <h2 className=\"section-title\">Weather Conditions</h2>\r\n                <select\r\n                  className=\"form-input\"\r\n                  value={formData.weatherCondition}\r\n                  onChange={(e) => handleFieldChange('weatherCondition', e.target.value)}\r\n                >\r\n                  <option value=\"Sunny\">Sunny</option>\r\n                  <option value=\"Cloudy\">Cloudy</option>\r\n                  <option value=\"Rainy\">Rainy</option>\r\n                  <option value=\"Stormy\">Stormy</option>\r\n                  <option value=\"Overcast\">Overcast</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"log-section\">\r\n                <h2 className=\"section-title\">Additional Remarks</h2>\r\n                <textarea\r\n                  className=\"form-textarea\"\r\n                  value={formData.remarks}\r\n                  onChange={(e) => handleFieldChange('remarks', e.target.value)}\r\n                  placeholder=\"Enter any additional remarks...\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-actions\">\r\n                <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n                  {loading ? 'Submitting...' : 'Submit Daily Report'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PMDailyLogs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport NotificationBell from '../NotificationBell';\r\nimport api from '../../api/axiosInstance';\r\n\r\nconst ITEMS_PER_PAGE = 7;\r\n\r\nconst iconByType = (title) => {\r\n  if (title?.toLowerCase().includes('no. 1') || title?.toLowerCase().includes('no. 2') || title?.toLowerCase().includes('no. 3'))\r\n    return \"📦\";\r\n  if (title?.toLowerCase().includes('no. 32') || title?.toLowerCase().includes('no. 15') || title?.toLowerCase().includes('no. 84'))\r\n    return \"✏️\";\r\n  if (title?.toLowerCase().includes('no. 31'))\r\n    return \"🧱\";\r\n  return \"📦\";\r\n};\r\n\r\nconst statusFilterMap = {\r\n  All: () => true,\r\n};\r\n\r\nconst PmDailyLogsList = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Get user for initials\r\n  const [userName, setUserName] = useState('Z');\r\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState('All');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // For fetching the assigned project (optional for nav link)\r\n  const [project, setProject] = useState(null);\r\n  const [user, setUser] = useState(() => {\r\n    const stored = localStorage.getItem('user');\r\n    return stored ? JSON.parse(stored) : null;\r\n  });\r\n  const [token, setToken] = useState(() => localStorage.getItem('token') || \"\");\r\n  const [userId, setUserId] = useState(() => user?._id);\r\n\r\n  useEffect(() => {\r\n    // Set username for header circle\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    setUserName(user?.name || 'Z');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api.get('/daily-reports/mine')\r\n      .then(res => {\r\n        setLogs(Array.isArray(res.data) ? res.data : []);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch assigned project for PM for \"View Project\" nav\r\n    if (!token || !userId) return;\r\n    api.get(`/projects/assigned/projectmanager/${userId}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n      .then(({ data }) => setProject(data))\r\n      .catch(() => setProject(null));\r\n  }, [token, userId]);\r\n\r\n  // Filtering/pagination\r\n  const filteredLogs = logs.filter(statusFilterMap[filter] || (() => true));\r\n  const totalPages = Math.ceil(filteredLogs.length / ITEMS_PER_PAGE);\r\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n  const pageLogs = filteredLogs.slice(startIndex, startIndex + ITEMS_PER_PAGE);\r\n\r\n  // Date formatting helper\r\n  const formatDate = (d) => {\r\n    const date = new Date(d);\r\n    return date.toLocaleDateString('en-US');\r\n  };\r\n\r\n  // Logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"header\">\r\n        <div className=\"logo-container\">\r\n          <img src={require('../../assets/images/FadzLogo1.png')} alt=\"FadzTrack Logo\" className=\"logo-img\" />\r\n          <h1 className=\"brand-name\">FadzTrack</h1>\r\n        </div>\r\n        <nav className=\"nav-menu\">\r\n          <Link to=\"/pm\" className=\"nav-link\">Dashboard</Link>\r\n          <Link to=\"/pm/request/:id\" className=\"nav-link\">Material</Link>\r\n          <Link to=\"/pm/manpower-list\" className=\"nav-link\">Manpower</Link>\r\n          {project && (\r\n            <Link to={`/pm/viewprojects/${project._id || project.id}`} className=\"nav-link\">View Project</Link>\r\n          )}\r\n          <Link to=\"/chat\" className=\"nav-link\">Chat</Link>\r\n          <Link to=\"/pm/daily-logs\" className=\"nav-link\">Logs</Link>\r\n          <Link to=\"/pm/progress-report/:id\" className=\"nav-link\">Reports</Link>\r\n          <Link to=\"/pm/daily-logs-list\" className=\"nav-link\">Daily Logs</Link>\r\n        </nav>\r\n        <div className=\"profile-menu-container\" style={{ display: 'flex', alignItems: 'center', gap: 18 }}>\r\n          <NotificationBell />\r\n          <div className=\"profile-circle\" onClick={() => setProfileMenuOpen(!profileMenuOpen)}>\r\n            {userName ? userName.charAt(0).toUpperCase() : 'Z'}\r\n          </div>\r\n          {profileMenuOpen && (\r\n            <div className=\"profile-menu\">\r\n              <button onClick={handleLogout}>Logout</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </header>\r\n\r\n      {/* Filter Row */}\r\n      <div style={{\r\n        maxWidth: 1000, margin: \"36px auto 0\", background: \"#fff\", borderRadius: 12,\r\n        boxShadow: \"0 2px 16px rgba(0,0,0,0.07)\", padding: \"20px 0 0 0\"\r\n      }}>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", padding: \"0 24px\", marginBottom: 6 }}>\r\n          <button className=\"date-filter-btn\" style={{\r\n            border: \"1px solid #bbb\", borderRadius: 6, background: \"#fff\", color: \"#1e2852\", fontWeight: 500,\r\n            padding: \"5px 20px\", marginRight: 22, cursor: \"pointer\"\r\n          }}>🗓 Date Filter</button>\r\n          {[\"All\"].map(tab => (\r\n            <button\r\n              key={tab}\r\n              onClick={() => setFilter(tab)}\r\n              className={filter === tab ? \"tab-btn active\" : \"tab-btn\"}\r\n              style={{\r\n                border: \"none\", background: \"none\", color: filter === tab ? \"#191970\" : \"#64688a\", fontWeight: filter === tab ? 700 : 500,\r\n                fontSize: 16, marginRight: 12, padding: \"6px 10px\", borderBottom: filter === tab ? \"2.5px solid #191970\" : \"none\", cursor: \"pointer\"\r\n              }}\r\n            >{tab}</button>\r\n          ))}\r\n          <div style={{ marginLeft: \"auto\", display: \"flex\", gap: 8 }}>\r\n            {/* List/Grid icons, just UI */}\r\n            <span style={{\r\n              width: 30, height: 30, display: \"inline-flex\", alignItems: \"center\", justifyContent: \"center\",\r\n              border: \"1.5px solid #d4d8e2\", borderRadius: 6, marginRight: 3, color: \"#191970\", background: \"#f2f4fa\"\r\n            }}>\r\n              <svg width=\"16\" height=\"16\"><rect width=\"16\" height=\"3\" fill=\"#191970\" /><rect y=\"6\" width=\"16\" height=\"3\" fill=\"#d4d8e2\" /><rect y=\"12\" width=\"16\" height=\"3\" fill=\"#d4d8e2\" /></svg>\r\n            </span>\r\n            <span style={{\r\n              width: 30, height: 30, display: \"inline-flex\", alignItems: \"center\", justifyContent: \"center\",\r\n              border: \"1.5px solid #d4d8e2\", borderRadius: 6, color: \"#bbb\", background: \"#f2f4fa\"\r\n            }}>\r\n              <svg width=\"16\" height=\"16\"><rect width=\"6\" height=\"6\" fill=\"#d4d8e2\" /><rect x=\"10\" width=\"6\" height=\"6\" fill=\"#d4d8e2\" /><rect y=\"10\" width=\"6\" height=\"6\" fill=\"#d4d8e2\" /><rect x=\"10\" y=\"10\" width=\"6\" height=\"6\" fill=\"#d4d8e2\" /></svg>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottom: \"1px solid #eaeaea\", marginTop: 8 }}></div>\r\n\r\n        {/* List */}\r\n        <div style={{ padding: \"12px 0\" }}>\r\n          {loading ? (\r\n            <div style={{ textAlign: \"center\", color: \"#888\", margin: 50 }}>Loading...</div>\r\n          ) : pageLogs.length === 0 ? (\r\n            <div style={{ textAlign: \"center\", color: \"#888\", margin: 50 }}>No logs found.</div>\r\n          ) : (\r\n            pageLogs.map((log, idx) => (\r\n              <div key={log._id || idx}\r\n                className=\"log-list-row\"\r\n                style={{\r\n                  display: \"flex\", alignItems: \"center\", padding: \"14px 24px\",\r\n                  borderBottom: \"1px solid #eee\", cursor: \"pointer\", background: \"#fff\"\r\n                }}\r\n                onClick={() => navigate(`/pm/daily-logs/${log._id}`)}\r\n              >\r\n                {/* Icon */}\r\n                <div style={{ flex: \"0 0 46px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                  <span style={{\r\n                    width: 42, height: 42, display: \"flex\", alignItems: \"center\", justifyContent: \"center\",\r\n                    fontSize: 30, background: \"#ece7df\", borderRadius: \"50%\"\r\n                  }}>{iconByType(log.title || log.logTitle)}</span>\r\n                </div>\r\n                {/* Details */}\r\n                <div style={{ flex: 1, minWidth: 0, marginLeft: 16 }}>\r\n                  <div style={{ fontWeight: 700, color: \"#23232e\", fontSize: 16, lineHeight: \"20px\" }}>\r\n                    {log.title || log.logTitle || `Daily Log no. ${log.logNumber || (idx + 1)}`}\r\n                  </div>\r\n                  <div style={{ color: \"#6c757d\", fontWeight: 500, fontSize: 14, marginTop: 1 }}>\r\n                    {log.submittedBy?.name || \"—\"}\r\n                  </div>\r\n                </div>\r\n                {/* Project + Date */}\r\n                <div style={{ minWidth: 170, textAlign: \"right\", marginLeft: 12 }}>\r\n                  <div style={{ fontWeight: 600, color: \"#343357\", fontSize: 15 }}>\r\n                    {log.project?.projectName || \"—\"}\r\n                  </div>\r\n                  <div style={{ color: \"#7b7b8b\", fontWeight: 500, fontSize: 14, marginTop: 2 }}>\r\n                    {formatDate(log.date || log.createdAt)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        {totalPages > 1 && (\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", margin: \"18px 0\" }}>\r\n            <div className=\"pagination\" style={{ display: \"flex\", gap: 3 }}>\r\n              <button disabled={currentPage === 1} onClick={() => setCurrentPage(p => Math.max(1, p - 1))} style={{\r\n                border: \"none\", background: \"none\", fontSize: 16, color: \"#191970\", padding: \"4px 8px\", minWidth: 26, fontWeight: 700, opacity: currentPage === 1 ? 0.35 : 1\r\n              }}>&lt;</button>\r\n              {Array.from({ length: totalPages }).map((_, i) => (\r\n                <button key={i}\r\n                  className={currentPage === i + 1 ? \"active\" : \"\"}\r\n                  onClick={() => setCurrentPage(i + 1)}\r\n                  style={{\r\n                    border: \"none\", background: currentPage === i + 1 ? \"#3a48a6\" : \"none\", color: currentPage === i + 1 ? \"#fff\" : \"#191970\",\r\n                    fontWeight: 700, fontSize: 15, borderRadius: 5, padding: \"4px 10px\", margin: \"0 2px\"\r\n                  }}\r\n                >{i + 1}</button>\r\n              ))}\r\n              <button disabled={currentPage === totalPages} onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))} style={{\r\n                border: \"none\", background: \"none\", fontSize: 16, color: \"#191970\", padding: \"4px 8px\", minWidth: 26, fontWeight: 700, opacity: currentPage === totalPages ? 0.35 : 1\r\n              }}>&gt;</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PmDailyLogsList;\r\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../style/ceo_style/Ceo_Dash.css';\r\nimport '../style/ceo_style/Ceo_ManpowerRequest.css';\r\nimport api from '../../api/axiosInstance';\r\nimport { FaSearch, FaCheck, FaTimes } from 'react-icons/fa';\r\nimport AppHeader from '../layout/AppHeader';\r\n\r\nconst ITEMS_PER_PAGE = 8;\r\n\r\nconst PmManpowerRequestList = () => {\r\n  const navigate = useNavigate();\r\n  const userRef = useRef(null);\r\n  if (userRef.current === null) {\r\n  const stored = localStorage.getItem('user');\r\n    userRef.current = stored ? JSON.parse(stored) : null;\r\n  }\r\n  const user = userRef.current;\r\n\r\n  const [requests, setRequests] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [status, setStatus] = useState('All');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [layoutView, setLayoutView] = useState('cards');\r\n  const [sortDesc, setSortDesc] = useState(true);\r\n\r\n  // PM-specific approval functionality\r\n  const [manpowerInput, setManpowerInput] = useState({});\r\n  const [busyId, setBusyId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!user || user.role !== 'Project Manager') return;\r\n    let active = true;\r\n    const fetchAll = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const { data } = await api.get('/manpower-requests/pm');\r\n        if (!active) return;\r\n      setRequests(Array.isArray(data) ? data : []);\r\n    } catch (err) {\r\n        if (!active) return;\r\n        console.error('Failed to load manpower requests:', err);\r\n        if (err.response && (err.response.status === 401 || err.response.status === 403)) {\r\n        setError('Session expired or unauthorized. Please login.');\r\n      } else {\r\n          setError('Failed to load manpower requests');\r\n      }\r\n    } finally {\r\n        if (active) {\r\n      setLoading(false);\r\n          setCurrentPage(1);\r\n        }\r\n      }\r\n    };\r\n    fetchAll();\r\n    return () => { active = false; };\r\n  }, [user]);\r\n\r\n  const filteredRequests = useMemo(() => {\r\n    let items = requests;\r\n    if (status !== 'All') {\r\n      if (status === 'Archived') {\r\n        items = items.filter(r => (r.status || 'Pending').toLowerCase().includes('archived'));\r\n      } else {\r\n        items = items.filter(r => (r.status || 'Pending').toLowerCase().includes(status.toLowerCase()));\r\n      }\r\n    } else {\r\n      // For 'All' filter, exclude archived items by default\r\n      items = items.filter(r => !(r.status || 'Pending').toLowerCase().includes('archived'));\r\n    }\r\n    if (searchTerm) {\r\n      const s = searchTerm.toLowerCase();\r\n      items = items.filter(r => {\r\n        const proj = r.project?.projectName || '';\r\n        const by = r.createdBy?.name || '';\r\n        const summary = (r.manpowers || []).map(m => `${m.quantity} ${m.type}`).join(', ');\r\n        return proj.toLowerCase().includes(s) || by.toLowerCase().includes(s) || summary.toLowerCase().includes(s) || (r.description || '').toLowerCase().includes(s);\r\n      });\r\n    }\r\n    return items;\r\n  }, [requests, status, searchTerm]);\r\n\r\n  // Sorting logic\r\n  const sortedRequests = useMemo(() => {\r\n    return [...filteredRequests].sort((a, b) => {\r\n      const aTime = new Date(a.createdAt || 0).getTime();\r\n      const bTime = new Date(b.createdAt || 0).getTime();\r\n      return sortDesc ? bTime - aTime : aTime - bTime;\r\n    });\r\n  }, [filteredRequests, sortDesc]);\r\n\r\n  const totalPages = Math.max(1, Math.ceil(sortedRequests.length / ITEMS_PER_PAGE));\r\n  const pageRows = useMemo(() => {\r\n    const start = (currentPage - 1) * ITEMS_PER_PAGE;\r\n    return sortedRequests.slice(start, start + ITEMS_PER_PAGE);\r\n  }, [sortedRequests, currentPage]);\r\n\r\n  const getRequestBackgroundColor = (request) => {\r\n    const statusLower = request.status?.toLowerCase() || '';\r\n    if (statusLower.includes('pending') && request.acquisitionDate && new Date(request.acquisitionDate) < new Date()) {\r\n      return '#fef3c7';\r\n    }\r\n    if (statusLower.includes('pending')) return '#ffffff';\r\n    if (statusLower.includes('approved')) return '#fef3c7';\r\n    if (statusLower.includes('rejected') || statusLower.includes('cancel') || statusLower.includes('denied')) return '#fef2f2';\r\n    if (statusLower.includes('completed')) return '#ecfdf5';\r\n    return '#f9fafb';\r\n  };\r\n\r\n  const getStatusBadge = (request) => {\r\n    const s = (request.status || 'Pending').toLowerCase();\r\n    const isOverdue = s === 'pending' && request.acquisitionDate && new Date(request.acquisitionDate) < new Date();\r\n    if (isOverdue) return 'Overdue';\r\n    if (s.includes('archived')) return 'Archived';\r\n    if (s.includes('completed')) return 'Completed';\r\n    if (s.includes('approved')) return 'Approved';\r\n    if (s.includes('pending')) return 'Pending';\r\n    if (s.includes('reject') || s.includes('denied') || s.includes('cancel')) return 'Rejected';\r\n    if (s.includes('overdue')) return 'Overdue';\r\n    return 'Unknown';\r\n  };\r\n\r\n  const getStatusColor = (request) => {\r\n    const s = (request.status || 'Pending').toLowerCase();\r\n    const isOverdue = s === 'pending' && request.acquisitionDate && new Date(request.acquisitionDate) < new Date();\r\n    if (isOverdue) return '#d97706';\r\n    if (s.includes('archived')) return '#8b5cf6';\r\n    if (s.includes('completed')) return '#059669';\r\n    if (s.includes('approved')) return '#10b981';\r\n    if (s.includes('pending')) return '#f59e0b';\r\n    if (s.includes('reject') || s.includes('denied') || s.includes('cancel')) return '#ef4444';\r\n    if (s.includes('overdue')) return '#d97706';\r\n    return '#6b7280';\r\n  };\r\n\r\n  const summaryCounts = useMemo(() => {\r\n    let pending = 0, approved = 0, completed = 0, rejected = 0, overdue = 0, archived = 0;\r\n    requests.forEach(r => {\r\n      const s = (r.status || 'Pending').toLowerCase();\r\n      const isOver = s === 'pending' && r.acquisitionDate && new Date(r.acquisitionDate) < new Date();\r\n      if (s.includes('archived')) archived++; else if (s.includes('completed')) completed++; else if (s.includes('approved')) approved++; else if (s.includes('reject') || s.includes('denied') || s.includes('cancel')) rejected++; else if (isOver || s.includes('overdue')) overdue++; else pending++;\r\n    });\r\n    return { total: requests.length, pending, approved, rejected, overdue, completed, archived };\r\n  }, [requests]);\r\n\r\n  const statusCounts = useMemo(() => ({\r\n    All: summaryCounts.total - summaryCounts.archived, // Exclude archived from All count\r\n    Pending: summaryCounts.pending,\r\n    Overdue: summaryCounts.overdue,\r\n    Approved: summaryCounts.approved,\r\n    Completed: summaryCounts.completed,\r\n    Rejected: summaryCounts.rejected,\r\n    Archived: summaryCounts.archived\r\n  }), [summaryCounts]);\r\n\r\n  // PM-specific approval functions\r\n  const onApprove = async (item) => {\r\n    const raw = manpowerInput[item._id] || '';\r\n    const ids = raw\r\n      .split(',')\r\n      .map((s) => s.trim())\r\n      .filter(Boolean);\r\n\r\n    if (ids.length === 0) {\r\n      alert('Please enter at least one manpower ID to assign.');\r\n      return;\r\n    }\r\n    setBusyId(item._id);\r\n    try {\r\n      await api.put(`/manpower-requests/${item._id}/approve`, {\r\n        manpowerProvided: ids,\r\n        project: item.project?._id,\r\n        area: item.project?.location,\r\n      });\r\n      alert('✅ Approved');\r\n      // Refresh the requests\r\n      const { data } = await api.get('/manpower-requests/pm');\r\n      setRequests(Array.isArray(data) ? data : []);\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(e?.response?.data?.message || 'Approval failed.');\r\n    } finally {\r\n      setBusyId(null);\r\n    }\r\n  };\r\n\r\n  const onDeny = async (item) => {\r\n    const reason = prompt('Please provide a reason for rejection (optional):');\r\n    if (reason === null) return; // User cancelled\r\n    \r\n    const confirmed = window.confirm(\r\n      'Confirm Rejection?\\n\\nRejecting this request will remove this from your list of Other\\'s Request.'\r\n    );\r\n    \r\n    if (!confirmed) return;\r\n    \r\n    setBusyId(item._id);\r\n    try {\r\n      const response = await api.put(`/manpower-requests/${item._id}/reject`, { reason });\r\n      alert(response.data.message);\r\n      // Refresh the requests\r\n      const { data } = await api.get('/manpower-requests/pm');\r\n      setRequests(Array.isArray(data) ? data : []);\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert(e?.response?.data?.message || 'Failed to reject request.');\r\n    } finally {\r\n      setBusyId(null);\r\n    }\r\n  };\r\n\r\n  if (!user || user.role !== 'Project Manager') {\r\n    return (\r\n      <div style={{ padding: 24 }}>\r\n        <h2>Forbidden</h2>\r\n        <p>You must be a Project Manager to view this page.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container ceo-manpower-requests-page\">\r\n      <AppHeader roleSegment=\"pm\" />\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"page-container\">\r\n          <div className=\"dashboard-card ceo-mr-header-card\">\r\n            <div className=\"card-header mr-header-row\">\r\n              <div className=\"mr-header-texts\">\r\n                <h1 className=\"card-title\">Manpower Requests</h1>\r\n                <p className=\"card-subtitle\">Manage and track manpower requests for your project</p>\r\n              </div>\r\n              <div className=\"layout-toggle-wrapper\">\r\n                <button onClick={()=>setLayoutView(v=> v==='cards' ? 'table' : 'cards')} className=\"btn-secondary toggle-layout-btn\">\r\n                  {layoutView === 'cards' ? 'Table View' : 'Card View'}\r\n                </button>\r\n                <button\r\n                  onClick={() => setSortDesc(!sortDesc)}\r\n                  className=\"btn-secondary sort-btn\"\r\n                  title=\"Toggle sort by Created date\"\r\n                >\r\n                  {sortDesc ? '↓ Newest' : '↑ Oldest'}\r\n                </button>\r\n            </div>\r\n          </div>\r\n            <div className=\"card-body mr-filters-row\">\r\n              <div className=\"filter-tabs compact\">\r\n                {['All','Pending','Overdue','Approved','Completed','Rejected','Archived'].map(tab => (\r\n                  <button key={tab} className={`filter-tab ${status === tab ? 'active' : ''}`} onClick={() => {setStatus(tab); setCurrentPage(1);}}>\r\n                    <span>{tab}</span>\r\n                    <span className=\"count\">{statusCounts[tab] ?? 0}</span>\r\n                 </button>\r\n               ))}\r\n             </div>\r\n              <div className=\"search-wrapper stretch\">\r\n                <FaSearch className=\"search-icon\" />\r\n                <input type=\"text\" placeholder=\"Search requests...\" value={searchTerm} onChange={(e)=>{setSearchTerm(e.target.value); setCurrentPage(1);}} className=\"search-input\" />\r\n              </div>\r\n            </div>\r\n              </div>\r\n              \r\n          <div className=\"dashboard-card ceo-mr-summary-card\">\r\n            <div className=\"card-header\"><h3 className=\"card-title-sm\">Summary</h3></div>\r\n            <div className=\"mr-summary-grid\">\r\n              {[{ label:'Total', value: summaryCounts.total, color:'#334155' },\r\n                { label:'Pending', value: summaryCounts.pending, color:'#f59e0b' },\r\n                { label:'Overdue', value: summaryCounts.overdue, color:'#d97706' },\r\n                { label:'Approved', value: summaryCounts.approved, color:'#10b981' },\r\n                { label:'Completed', value: summaryCounts.completed, color:'#059669' },\r\n                { label:'Rejected', value: summaryCounts.rejected, color:'#ef4444' },\r\n                { label:'Archived', value: summaryCounts.archived, color:'#8b5cf6' }\r\n              ].map(c => (\r\n                <div key={c.label} className=\"mr-summary-item\">\r\n                  <span className=\"mr-summary-label\">{c.label}</span>\r\n                  <span className=\"mr-summary-value\" style={{ color:c.color }}>{c.value}</span>\r\n                  <div className=\"mr-summary-bar\" style={{ background:c.color }} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dashboard-card ceo-mr-list-card\">\r\n            <div className=\"card-header list-header\"><h3 className=\"card-title-sm\">Requests <span className=\"muted\">({sortedRequests.length})</span></h3></div>\r\n            <div className={`requests-grid ceo-mr-grid ${layoutView === 'table' ? 'table-view' : ''}`}>            \r\n            {loading ? (\r\n                <div className=\"loading-state\"><div className=\"loading-spinner\"></div><p>Loading manpower requests...</p></div>\r\n            ) : error ? (\r\n                <div className=\"error-state\"><p>{error}</p></div>\r\n              ) : pageRows.length === 0 ? (\r\n              <div className=\"empty-state\">\r\n                <div className=\"empty-icon\">👥</div>\r\n                <h3>No manpower requests found</h3>\r\n                <p>No requests match your current filters. Try adjusting your search criteria.</p>\r\n              </div>\r\n            ) : (\r\n                <>\r\n                  {layoutView === 'table' && (\r\n                    <div className=\"mr-table-header\" role=\"row\" aria-label=\"Table Header\">\r\n                      <div>Project</div>\r\n                      <div>Requester</div>\r\n                      <div>Description</div>\r\n                      <div>Manpower</div>\r\n                      <div>Target</div>\r\n                      <div>Dur</div>\r\n                      <div>Created</div>\r\n                      <div>Status</div>\r\n                      <div>Actions</div>\r\n                    </div>\r\n                  )}\r\n                  {pageRows.map(request => {\r\n                    const summary = (request.manpowers || []).map(m=>`${m.quantity} ${m.type}`).join(', ');\r\n                    const badgeLabel = getStatusBadge(request);\r\n                    const badgeColor = getStatusColor(request);\r\n                    if (layoutView === 'table') {\r\n                return (\r\n                        <div\r\n                          key={request._id}\r\n                          className=\"mr-table-row\"\r\n                          role=\"row\"\r\n                          title=\"View details\"\r\n                        >\r\n                          <div className=\"rt-title\" title={request.project?.projectName || '(No Project Name)'}>{request.project?.projectName || '(No Project Name)'}</div>\r\n                          <div className=\"rt-req\" title={request.createdBy?.name || 'Unknown'}>{request.createdBy?.name || 'Unknown'}</div>\r\n                          <div className=\"rt-desc\" title={request.description || 'No description'}>{request.description || 'No description'}</div>\r\n                          <div className=\"rt-man\" title={summary || '—'}>{summary || '—'}</div>\r\n                          <div className=\"rt-date\" title=\"Target Date\">{request.acquisitionDate ? new Date(request.acquisitionDate).toLocaleDateString() : '—'}</div>\r\n                          <div className=\"rt-date\" title=\"Duration\">{request.duration || '—'}d</div>\r\n                          <div className=\"rt-date\" title=\"Created\">{request.createdAt ? new Date(request.createdAt).toLocaleDateString() : '—'}</div>\r\n                          <div className=\"rt-btn\"><span className={`status-chip ${badgeLabel.toLowerCase()}`}>{badgeLabel}</span></div>\r\n                          <div className=\"rt-actions\">\r\n                            {request.status === 'Pending' && (\r\n                              <div className=\"table-approval-section\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  value={manpowerInput[request._id] || ''}\r\n                                  onChange={(e) => setManpowerInput((p) => ({ ...p, [request._id]: e.target.value }))}\r\n                                  placeholder=\"Manpower IDs...\"\r\n                                  className=\"table-manpower-input\"\r\n                                />\r\n                                <button\r\n                                  onClick={() => onApprove(request)}\r\n                                  disabled={busyId === request._id}\r\n                                  className=\"table-approve-btn\"\r\n                                  title=\"Approve\"\r\n                                >\r\n                                  <FaCheck />\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => onDeny(request)}\r\n                                  disabled={busyId === request._id}\r\n                                  className=\"table-deny-btn\"\r\n                                  title=\"Reject\"\r\n                                >\r\n                                  <FaTimes />\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                      </div>\r\n                    </div>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div className={`request-card ceo-mr-card`} key={request._id}>\r\n                    <div className=\"card-body\">\r\n                          <div className=\"mr-card-top-row\">\r\n                            <h3 className=\"request-title\" title={request.project?.projectName || '(No Project Name)'}>{request.project?.projectName || '(No Project Name)'}</h3>\r\n                            <span className={`status-chip ${badgeLabel.toLowerCase()}`}>{badgeLabel}</span>\r\n                          </div>\r\n                          <p className=\"request-description\" title={request.description || 'No description provided'}>{request.description || 'No description provided'}</p>\r\n                      <div className=\"request-meta\">\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Requested by:</span><span className=\"meta-value\" title={request.createdBy?.name || 'Unknown'}>{request.createdBy?.name || 'Unknown'}</span></div>\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Manpower:</span><span className=\"meta-value\" title={summary || '—'}>{summary || '—'}</span></div>\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Date:</span><span className=\"meta-value\">{request.createdAt ? new Date(request.createdAt).toLocaleDateString() : '—'}</span></div>\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Target:</span><span className=\"meta-value\">{request.acquisitionDate ? new Date(request.acquisitionDate).toLocaleDateString() : '—'}</span></div>\r\n                            <div className=\"meta-item\"><span className=\"meta-label\">Duration:</span><span className=\"meta-value\">{request.duration || '—'} d</span></div>\r\n                      </div>\r\n                      \r\n                      {/* Rejection Information */}\r\n                      {request.rejectedBy && request.rejectedBy.length > 0 && (\r\n                        <div className=\"rejection-info\">\r\n                          <div className=\"meta-item\">\r\n                            <span className=\"meta-label\">Rejected by:</span>\r\n                            <span className=\"meta-value rejection-list\">\r\n                              {request.rejectedBy.map((rejection, index) => (\r\n                                <span key={index} className=\"rejection-item\">\r\n                                  {rejection.userName || rejection.userId?.name || 'Unknown PM'}\r\n                                  {index < request.rejectedBy.length - 1 ? ', ' : ''}\r\n                                </span>\r\n                              ))}\r\n                            </span>\r\n                          </div>\r\n                          {request.rejectionReason && (\r\n                            <div className=\"meta-item\">\r\n                              <span className=\"meta-label\">Reason:</span>\r\n                              <span className=\"meta-value rejection-reason\">{request.rejectionReason}</span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                                         <div className=\"card-footer\">\r\n                       {request.status === 'Pending' ? (\r\n                            <div className=\"pm-approval-section\">\r\n                           <div className=\"manpower-input-section\">\r\n                             <label className=\"manpower-label\">Manpower IDs to assign:</label>\r\n                             <input\r\n                               type=\"text\"\r\n                               value={manpowerInput[request._id] || ''}\r\n                                  onChange={(e) => setManpowerInput((p) => ({ ...p, [request._id]: e.target.value }))}\r\n                               placeholder=\"e.g. 668f0..., 668f1...\"\r\n                               className=\"manpower-input\"\r\n                             />\r\n                           </div>\r\n                           <div className=\"action-buttons\">\r\n                             <button\r\n                               onClick={() => onApprove(request)}\r\n                               disabled={busyId === request._id}\r\n                               className=\"approve-btn\"\r\n                             >\r\n                               <FaCheck />\r\n                               <span>{busyId === request._id ? 'Processing…' : 'Approve'}</span>\r\n                             </button>\r\n                             <button\r\n                               onClick={() => onDeny(request)}\r\n                               disabled={busyId === request._id}\r\n                               className=\"deny-btn\"\r\n                             >\r\n                               <FaTimes />\r\n                                  <span>Reject</span>\r\n                             </button>\r\n                           </div>\r\n                         </div>\r\n                       ) : request.status === 'Archived' ? (\r\n                         <div className=\"archived-status\">\r\n                           <span className=\"archived-badge\">\r\n                             {getStatusBadge(request.status)} - Project Completed\r\n                           </span>\r\n                         </div>\r\n                       ) : (\r\n                         <div className=\"status-display\">\r\n                           <span className=\"final-status\">\r\n                             {getStatusBadge(request.status)}\r\n                           </span>\r\n                         </div>\r\n                       )}\r\n                     </div>\r\n                  </div>\r\n                );\r\n                  })}\r\n                </>\r\n            )}\r\n          </div>\r\n          {sortedRequests.length > 0 && (\r\n              <div className=\"pagination-section inside-card\">\r\n                <div className=\"pagination-info\">Showing {((currentPage - 1) * ITEMS_PER_PAGE) + 1} to {Math.min(currentPage * ITEMS_PER_PAGE, sortedRequests.length)} of {sortedRequests.length} entries</div>\r\n              <div className=\"pagination-controls\">\r\n                  <button onClick={()=>setCurrentPage(p=>Math.max(p-1,1))} disabled={currentPage===1} className=\"pagination-btn\">Previous</button>\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\r\n                    <button key={page} className={`pagination-btn ${page === currentPage ? 'active' : ''}`} onClick={()=>setCurrentPage(page)}>{page}</button>\r\n                  ))}\r\n                  <button onClick={()=>setCurrentPage(p=>Math.min(p+1,totalPages))} disabled={currentPage===totalPages} className=\"pagination-btn\">Next</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PmManpowerRequestList;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../../api/axiosInstance';\r\nimport AppHeader from '../layout/AppHeader';\r\nimport '../style/pic_style/PicAllProjects.css';\r\nimport { FaSearch, FaSortAmountDown, FaCheckCircle, FaHourglassHalf, FaProjectDiagram } from 'react-icons/fa';\r\n\r\nconst PmAllProjects = () => {\r\n  const token = localStorage.getItem('token');\r\n  const stored = localStorage.getItem('user');\r\n  const user = stored ? JSON.parse(stored) : null;\r\n  const userId = user?._id;\r\n  const navigate = useNavigate();\r\n\r\n  // Default to All for consistency with PIC view\r\n  const [activeTab, setActiveTab] = useState('All');\r\n  const [ongoing, setOngoing] = useState([]);\r\n  const [completed, setCompleted] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [project, setProject] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [sortKey, setSortKey] = useState('startDate');\r\n  const [sortDir, setSortDir] = useState('asc');\r\n\r\n  useEffect(()=>{ if(!userId) return; setLoading(true); Promise.all([\r\n    api.get(`/projects/by-user-status?userId=${userId}&role=projectmanager&status=Ongoing`),\r\n    api.get(`/projects/by-user-status?userId=${userId}&role=projectmanager&status=Completed`)\r\n  ]).then(([o,c])=>{ setOngoing(o.data||[]); setCompleted(c.data||[]); }).catch(()=>{ setOngoing([]); setCompleted([]);} ).finally(()=> setLoading(false)); },[userId]);\r\n\r\n  useEffect(()=>{ if(!token || !userId) return; api.get(`/projects/by-user-status?userId=${userId}&role=projectmanager&status=Ongoing`).then(({data})=> setProject(data[0]||null)).catch(()=> setProject(null)); },[token,userId]);\r\n\r\n  const decorate = (proj) => {\r\n    const start = proj.startDate ? new Date(proj.startDate) : null;\r\n    const end = proj.endDate ? new Date(proj.endDate) : null;\r\n    const today = new Date();\r\n    let totalDays=null, elapsedDays=null, pctTime=null, daysLeft=null;\r\n    if(start && end && end>start){ totalDays=Math.round((end-start)/86400000)||1; elapsedDays=Math.min(totalDays,Math.max(0,Math.round((today-start)/86400000))); pctTime=Math.min(100,Math.max(0,(elapsedDays/totalDays)*100)); daysLeft=Math.max(0,Math.round((end-today)/86400000)); }\r\n    return { ...proj, totalDays, elapsedDays, pctTime, daysLeft };\r\n  };\r\n\r\n  const sortFn = (a,b)=>{ const dir=sortDir==='asc'?1:-1; const val=(p)=>{ switch(sortKey){ case 'name': return p.projectName?.toLowerCase()||''; case 'startDate': return p.startDate||''; case 'endDate': return p.endDate||''; case 'status': return p.status||''; default: return p.startDate||'';} }; const av=val(a), bv=val(b); if(av<bv) return -1*dir; if(av>bv) return 1*dir; return 0; };\r\n  const filteredOngoing = useMemo(()=> ongoing.filter(p=> p.projectName?.toLowerCase().includes(search.toLowerCase())).map(decorate).sort(sortFn),[ongoing,search,sortKey,sortDir]);\r\n  const filteredCompleted = useMemo(()=> completed.filter(p=> p.projectName?.toLowerCase().includes(search.toLowerCase())).map(decorate).sort(sortFn),[completed,search,sortKey,sortDir]);\r\n  const filteredAll = useMemo(()=> [...ongoing,...completed].filter(p=> p.projectName?.toLowerCase().includes(search.toLowerCase())).map(decorate).sort(sortFn),[ongoing,completed,search,sortKey,sortDir]);\r\n\r\n  const stats = useMemo(()=> ({ ongoing: ongoing.length, completed: completed.length, total: ongoing.length+completed.length }),[ongoing,completed]);\r\n\r\n  const toggleSort = (key)=> { if (sortKey === key) { setSortDir(d=> d==='asc'?'desc':'asc'); } else { setSortKey(key); setSortDir('asc'); } };\r\n\r\n  if (loading) return <div className=\"dashboard-container\"><div className=\"professional-loading-screen\"><div className=\"loading-content\"><div className=\"loading-logo\"><img src={require('../../assets/images/FadzLogo1.png')} alt=\"FadzTrack Logo\" className=\"loading-logo-img\" /></div><div className=\"loading-spinner-container\"><div className=\"loading-spinner\"/></div><div className=\"loading-text\"><h2 className=\"loading-title\">Loading Projects</h2><p className=\"loading-subtitle\">Fetching your project list...</p></div></div></div></div>;\r\n\r\n  const ProjectTable = ({ projects, showBadges }) => (\r\n    <div className=\"projects-table-wrapper glass-card\">\r\n      <table className=\"projects-table\">\r\n        <thead>\r\n          <tr>\r\n            <th onClick={()=>toggleSort('name')} className={sortKey==='name'? 'sorted':''}>Project</th>\r\n            <th onClick={()=>toggleSort('status')} className={`${sortKey==='status'? 'sorted ':''}status-col`}>Status</th>\r\n            <th>Timeline</th>\r\n            <th onClick={()=>toggleSort('startDate')} className={sortKey==='startDate'? 'sorted':''}>Start</th>\r\n            <th onClick={()=>toggleSort('endDate')} className={sortKey==='endDate'? 'sorted':''}>End</th>\r\n            <th style={{textAlign:'right'}}>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.length===0 && <tr><td colSpan={6} className=\"empty-row\">No projects found.</td></tr>}\r\n          {projects.map(p=> (\r\n            <tr key={p._id}>\r\n              <td>\r\n                <div className=\"proj-main\">\r\n                  <div className=\"proj-title\">{p.projectName}</div>\r\n                  <div className=\"proj-meta\">{p.location?.name || 'No location'} • {p.daysLeft!=null ? `${p.daysLeft}d left` : '—'}</div>\r\n                </div>\r\n              </td>\r\n              <td className=\"status-col\">{showBadges ? <span className={`status-badge badge-${(p.status||'').toLowerCase()}`}>{p.status||'—'}</span> : <span className=\"status-plain\">{p.status||'—'}</span>}</td>\r\n              <td>{p.pctTime!=null ? <div className=\"timeline-bar\" title={p.totalDays? `${p.elapsedDays}/${p.totalDays} days (${p.pctTime.toFixed(0)}%)` : ''}><div className=\"timeline-fill\" style={{width:`${p.pctTime}%`}}/></div> : <span className=\"muted\">—</span>}</td>\r\n              <td>{p.startDate ? new Date(p.startDate).toLocaleDateString() : '—'}</td>\r\n              <td>{p.endDate ? new Date(p.endDate).toLocaleDateString() : '—'}</td>\r\n              <td style={{textAlign:'right'}}><button className=\"btn-view\" onClick={()=> navigate(`/pm/viewprojects/${p._id}`)}>View</button></td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"projects-cards\">\r\n        {projects.map(p=> (\r\n          <div key={p._id} className=\"project-card\" onClick={()=> navigate(`/pm/viewprojects/${p._id}`)}>\r\n            {showBadges ? <div className=\"pc-status\"><span className={`status-badge badge-${(p.status||'').toLowerCase()}`}>{p.status||'—'}</span></div> : <div className=\"pc-status-plain\">{p.status||'—'}</div>}\r\n            <div className=\"pc-header\"><h4>{p.projectName}</h4></div>\r\n            <div className=\"pc-meta\">{p.location?.name||'No location'}</div>\r\n            <div className=\"pc-timeline\">{p.pctTime!=null ? <div className=\"timeline-bar small\"><div className=\"timeline-fill\" style={{width:`${p.pctTime}%`}}/></div> : <div className=\"muted\">No timeline</div>}</div>\r\n            <div className=\"pc-dates\"><span>{p.startDate? new Date(p.startDate).toLocaleDateString(): '—'}</span><span>→</span><span>{p.endDate? new Date(p.endDate).toLocaleDateString(): '—'}</span></div>\r\n            <div className=\"pc-footer\"><button className=\"btn-view ghost\" onClick={(e)=> { e.stopPropagation(); navigate(`/pm/viewprojects/${p._id}`); }}>Open</button></div>\r\n          </div>\r\n        ))}\r\n        {projects.length===0 && <div className=\"empty-placeholder\">No projects found.</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"pic-projects-page\">\r\n      <AppHeader roleSegment=\"pm\" />\r\n      <section className=\"pp-hero\">\r\n        <div className=\"pp-hero-inner\">\r\n          <h1>My Projects</h1>\r\n          <p>Overview of all projects you manage. Search, filter and open a project instantly.</p>\r\n          <div className=\"pp-stats\">\r\n            <div className={`stat-card stat-click ${activeTab==='Ongoing' ? 'active' : ''}`} onClick={()=> setActiveTab('Ongoing')} role=\"button\" tabIndex={0} onKeyDown={e=>{ if(e.key==='Enter'||e.key===' '){ setActiveTab('Ongoing'); e.preventDefault(); }}} aria-pressed={activeTab==='Ongoing'}>\r\n              <div className=\"sc-icon ongoing\"><FaHourglassHalf/></div>\r\n              <div className=\"sc-body\"><span className=\"sc-label\">Ongoing</span><span className=\"sc-value\">{stats.ongoing}</span></div>\r\n            </div>\r\n            <div className={`stat-card stat-click ${activeTab==='Completed' ? 'active' : ''}`} onClick={()=> setActiveTab('Completed')} role=\"button\" tabIndex={0} onKeyDown={e=>{ if(e.key==='Enter'||e.key===' '){ setActiveTab('Completed'); e.preventDefault(); }}} aria-pressed={activeTab==='Completed'}>\r\n              <div className=\"sc-icon completed\"><FaCheckCircle/></div>\r\n              <div className=\"sc-body\"><span className=\"sc-label\">Completed</span><span className=\"sc-value\">{stats.completed}</span></div>\r\n            </div>\r\n            <div className={`stat-card stat-click ${activeTab==='All' ? 'active' : ''}`} onClick={()=> setActiveTab('All')} role=\"button\" tabIndex={0} onKeyDown={e=>{ if(e.key==='Enter'||e.key===' '){ setActiveTab('All'); e.preventDefault(); }}} aria-pressed={activeTab==='All'}>\r\n              <div className=\"sc-icon total\"><FaProjectDiagram/></div>\r\n              <div className=\"sc-body\"><span className=\"sc-label\">Total</span><span className=\"sc-value\">{stats.total}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <main className=\"pp-main\">\r\n        <div className=\"pp-controls\">\r\n          <div className=\"search-box\"><FaSearch className=\"icon\"/><input placeholder=\"Search project name...\" value={search} onChange={e=>setSearch(e.target.value)} /></div>\r\n          <div className=\"filters\">\r\n            <div className=\"tab-group\">\r\n              <button className={activeTab==='All'? 'tg-btn active':'tg-btn'} onClick={()=> setActiveTab('All')}>All ({stats.total})</button>\r\n              <button className={activeTab==='Ongoing'? 'tg-btn active':'tg-btn'} onClick={()=> setActiveTab('Ongoing')}>Ongoing ({stats.ongoing})</button>\r\n              <button className={activeTab==='Completed'? 'tg-btn active':'tg-btn'} onClick={()=> setActiveTab('Completed')}>Completed ({stats.completed})</button>\r\n            </div>\r\n            <div className=\"sort-box\">\r\n              <FaSortAmountDown className=\"icon\"/>\r\n              <select value={sortKey} onChange={e=>setSortKey(e.target.value)}>\r\n                <option value=\"startDate\">Sort: Start Date</option>\r\n                <option value=\"endDate\">Sort: End Date</option>\r\n                <option value=\"name\">Sort: Name</option>\r\n                <option value=\"status\">Sort: Status</option>\r\n              </select>\r\n              <button className=\"dir-btn\" onClick={()=> setSortDir(d=> d==='asc'?'desc':'asc')} aria-label=\"Toggle direction\">{sortDir==='asc'?'↑':'↓'}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"pp-table-area\">\r\n          <ProjectTable \r\n            projects={activeTab==='All' ? filteredAll : activeTab==='Ongoing' ? filteredOngoing : filteredCompleted}\r\n            showBadges={activeTab !== 'All'}\r\n          />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PmAllProjects;","import React from 'react';\r\nimport MaterialRequestListView from '../material/MaterialRequestListView';\r\nimport AppHeader from '../layout/AppHeader';\r\n\r\nconst PmMatRequestListWrapper = () => (\r\n  <>\r\n    <AppHeader roleSegment=\"pm\" />\r\n    <MaterialRequestListView\r\n      role=\"Project Manager\"\r\n      fetchUrl=\"/requests/mine\"\r\n      detailLinkBase=\"/pm/material-request\"\r\n      rootClass=\"pm-request-list\"\r\n      disableHeader\r\n    />\r\n  </>\r\n);\r\n\r\nexport default PmMatRequestListWrapper;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../style/pm_style/Pm_Dash.css';\r\nimport api from '../../api/axiosInstance';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\nimport AppHeader from '../layout/AppHeader';\r\n// Nav icons\r\nimport { FaComments, FaBoxes, FaProjectDiagram, FaTasks, FaCheckCircle, FaClock, FaExclamationTriangle, FaArrowRight, FaUserTie, FaBuilding, FaChartBar, FaUsers } from 'react-icons/fa';\r\n\r\nconst PmDash = ({ forceUserUpdate }) => {\r\n  const navigate = useNavigate();\r\n\r\n  // --- 1. User, token, userId state ---\r\n  const [user, setUser] = useState(() => {\r\n    const stored = localStorage.getItem('user');\r\n    return stored ? JSON.parse(stored) : null;\r\n  });\r\n  const [token, setToken] = useState(() => localStorage.getItem('token') || \"\");\r\n  const [userId, setUserId] = useState(() => user?._id);\r\n\r\n  // --- 2. Listen for storage changes for live update on login/logout/user switch ---\r\n  useEffect(() => {\r\n    const handleUserChange = () => {\r\n      const stored = localStorage.getItem('user');\r\n      setUser(stored ? JSON.parse(stored) : null);\r\n      setUserId(stored ? JSON.parse(stored)._id : undefined);\r\n      setToken(localStorage.getItem('token') || \"\");\r\n    };\r\n    window.addEventListener(\"storage\", handleUserChange);\r\n    return () => window.removeEventListener(\"storage\", handleUserChange);\r\n  }, []);\r\n\r\n  // --- 3. Update username/role from state ---\r\n  const [userName, setUserName] = useState(user?.name || 'ALECK');\r\n  const [userRole, setUserRole] = useState(user?.role || '');\r\n\r\n  useEffect(() => {\r\n    setUserName(user?.name || 'ALECK');\r\n    setUserRole(user?.role || '');\r\n  }, [user]);\r\n\r\n  // --- 4. Page data state ---\r\n  const [project, setProject] = useState(null);\r\n  // Unified header removes local profile/collapse states\r\n\r\n  const [chats, setChats] = useState([]);\r\n  const [loadingChats, setLoadingChats] = useState(true);\r\n  const [chatsError, setChatsError] = useState(null);\r\n\r\n  const [materialRequests, setMaterialRequests] = useState([]);\r\n  const [loadingRequests, setLoadingRequests] = useState(true);\r\n  const [requestsError, setRequestsError] = useState(null);\r\n\r\n  // Timeline status logic function\r\n  const getTimelineStatus = (status, stage) => {\r\n    const statusLower = status?.toLowerCase() || '';\r\n    \r\n    // Check for rejected statuses\r\n    if (statusLower.includes('rejected')) {\r\n      return 'rejected';\r\n    }\r\n    \r\n    switch (stage) {\r\n      case 'placed':\r\n        // Placed should be green (one step behind) when PM is pending\r\n        if (statusLower.includes('pending pm') || statusLower.includes('project manager')) {\r\n          return 'completed one-step-behind'; // Green - one step behind pending\r\n        } else if (statusLower.includes('pending am') || statusLower.includes('area manager') || \r\n                   statusLower.includes('approved') || statusLower.includes('received')) {\r\n          return 'completed'; // Blue - two or more steps behind pending\r\n        }\r\n        return 'completed'; // Default to blue for placed\r\n        \r\n      case 'pm':\r\n        if (statusLower.includes('rejected pm') || statusLower.includes('pm rejected')) {\r\n          return 'rejected';\r\n        } else if (statusLower.includes('pending pm') || statusLower.includes('project manager')) {\r\n          return 'pending'; // Yellow/Orange - pending\r\n        } else if (statusLower.includes('pending am') || statusLower.includes('area manager')) {\r\n          return 'completed one-step-behind'; // Green - one step behind pending\r\n        } else if (statusLower.includes('approved') || statusLower.includes('received')) {\r\n          return 'completed'; // Blue - two or more steps behind pending\r\n        }\r\n        break;\r\n        \r\n      case 'am':\r\n        if (statusLower.includes('rejected am') || statusLower.includes('am rejected')) {\r\n          return 'rejected';\r\n        } else if (statusLower.includes('pending am') || statusLower.includes('area manager')) {\r\n          return 'pending'; // Yellow/Orange - pending\r\n        } else if (statusLower.includes('approved')) {\r\n          return 'completed one-step-behind'; // Green - one step behind final\r\n        } else if (statusLower.includes('received')) {\r\n          return 'completed'; // Blue - final reached\r\n        }\r\n        break;\r\n      \r\n        \r\n      case 'done':\r\n        if (statusLower.includes('received')) {\r\n          return 'completed'; // Blue - completed\r\n        }\r\n        break;\r\n    }\r\n    \r\n    return ''; // Default empty state\r\n  };\r\n\r\n  // --- 5. Redirect to login if not logged in ---\r\n  useEffect(() => {\r\n    if (!token || !userId) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n  }, [token, userId, navigate]);\r\n\r\n  // Removed: header collapse logic handled globally or no longer required\r\n\r\n  // --- 7. Fetch assigned project for current PM ---\r\n  useEffect(() => {\r\n    if (!token || !userId) return;\r\n    const fetchAssignedPMProject = async () => {\r\n      try {\r\n        // Primary call (single project)\r\n        const { data } = await api.get(`/projects/assigned/projectmanager/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        let candidate = data;\r\n        // If project exists but status not ongoing, attempt to find an ongoing one from all role assignments\r\n        if (candidate && candidate.status && !/ongoing/i.test(candidate.status)) {\r\n          try {\r\n            const allRolesResp = await api.get(`/projects/assigned/allroles/${userId}`, { headers: { Authorization: `Bearer ${token}` } });\r\n            const list = Array.isArray(allRolesResp.data) ? allRolesResp.data : [];\r\n            const ongoing = list.find(p => /ongoing/i.test(p.status || ''));\r\n            if (ongoing) candidate = ongoing;\r\n          } catch (e) {\r\n            // silently ignore fallback failure\r\n          }\r\n        }\r\n        setProject(candidate || null);\r\n      } catch (err) {\r\n        setProject(null);\r\n      }\r\n    };\r\n    fetchAssignedPMProject();\r\n  }, [token, userId]);\r\n\r\n  // --- 8. Fetch material requests for current user ---\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setRequestsError('Session expired. Please log in again.');\r\n      setLoadingRequests(false);\r\n      return;\r\n    }\r\n    const fetchRequests = async () => {\r\n      try {\r\n        const { data } = await api.get('/requests/mine', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setMaterialRequests(Array.isArray(data) ? data : []);\r\n        setRequestsError(null);\r\n      } catch (error) {\r\n        setRequestsError('Error loading material requests');\r\n        setMaterialRequests([]);\r\n      }\r\n      setLoadingRequests(false);\r\n    };\r\n    fetchRequests();\r\n  }, [token]);\r\n\r\n  // --- 9. Fetch recent chats for current user ---\r\n  const fetchChats = useCallback(async () => {\r\n    if (!token) {\r\n      console.log('No token available for fetchChats');\r\n      setChatsError('Session expired. Please log in again.');\r\n      setLoadingChats(false);\r\n      return;\r\n    }\r\n\r\n    if (!userId) {\r\n      console.log('No userId available for fetchChats');\r\n      setChatsError('User ID not available');\r\n      setLoadingChats(false);\r\n      return;\r\n    }\r\n\r\n    console.log('Starting fetchChats with token and userId:', { token: token.substring(0, 20) + '...', userId });\r\n    setLoadingChats(true);\r\n\r\n    try {\r\n      // First, let's test what user ID the backend expects\r\n      try {\r\n        const testResponse = await api.get('/auth/me', { headers: { Authorization: `Bearer ${token}` } });\r\n        console.log('Backend user info:', testResponse.data);\r\n        console.log('Backend user ID:', testResponse.data._id);\r\n        console.log('Frontend userId:', userId);\r\n        console.log('Are they the same?', testResponse.data._id === userId);\r\n      } catch (testError) {\r\n        console.log('Could not get backend user info:', testError.message);\r\n      }\r\n\r\n      // Fetch conversations for the current user\r\n      const headers = { Authorization: `Bearer ${token}` };\r\n      console.log('Making API call to /chats with headers:', headers);\r\n\r\n      const { data } = await api.get('/chats', { headers });\r\n\r\n      console.log('Raw chat data received:', data);\r\n      console.log('Data type:', typeof data);\r\n      console.log('Is array?', Array.isArray(data));\r\n\r\n      if (Array.isArray(data)) {\r\n        console.log('Chat data is array, length:', data.length);\r\n        if (data.length > 0) {\r\n          console.log('First chat item structure:', data[0]);\r\n          console.log('First chat users:', data[0].users);\r\n          console.log('Current userId:', userId);\r\n        }\r\n\r\n        // Process each conversation to extract proper data\r\n        const processedChats = data.map((conversation, index) => {\r\n          console.log(`Processing chat ${index}:`, conversation);\r\n\r\n          // Get the other user's name (not the current user)\r\n          // Try different ways to find the other user\r\n          let otherUser = conversation.users?.find(user => user._id !== userId);\r\n\r\n          // If no other user found, try with string comparison\r\n          if (!otherUser && conversation.users?.length > 0) {\r\n            otherUser = conversation.users.find(user => user._id.toString() !== userId.toString());\r\n          }\r\n\r\n          // If still no other user, just take the first user that's not the current one\r\n          if (!otherUser && conversation.users?.length > 0) {\r\n            otherUser = conversation.users.find(user => user._id !== userId);\r\n          }\r\n\r\n          console.log(`Other user for chat ${index}:`, otherUser);\r\n          console.log(`Other user _id:`, otherUser?._id);\r\n          console.log(`Current userId:`, userId);\r\n          console.log(`Comparison result:`, otherUser?._id !== userId);\r\n\r\n          let otherUserName = 'Unknown User';\r\n          if (otherUser) {\r\n            otherUserName = otherUser.name || `${otherUser.firstname || ''} ${otherUser.lastname || ''}`.trim() || 'Unknown User';\r\n          } else if (conversation.users?.length > 0) {\r\n            // Fallback: show all users in the chat\r\n            const allUserNames = conversation.users.map(user =>\r\n              user.name || `${user.firstname || ''} ${user.lastname || ''}`.trim() || 'Unknown'\r\n            ).filter(name => name !== 'Unknown');\r\n            otherUserName = allUserNames.length > 0 ? allUserNames.join(', ') : 'Unknown User';\r\n          }\r\n\r\n          console.log(`Other user name for chat ${index}:`, otherUserName);\r\n\r\n          // Get the last message content\r\n          let lastMessageContent = 'No messages yet';\r\n          let lastMessageTime = new Date();\r\n\r\n          if (conversation.lastMessage) {\r\n            lastMessageContent = conversation.lastMessage.content || 'No messages yet';\r\n            lastMessageTime = conversation.lastMessage.timestamp || new Date();\r\n            console.log(`Last message for chat ${index}:`, { content: lastMessageContent, time: lastMessageTime });\r\n          }\r\n\r\n          const processedChat = {\r\n            _id: conversation._id,\r\n            name: conversation.isGroup ? conversation.name : otherUserName,\r\n            isGroup: conversation.isGroup || false,\r\n            lastMessage: lastMessageContent,\r\n            lastMessageTime: lastMessageTime,\r\n            users: conversation.users || [],\r\n            color: '#4A6AA5'\r\n          };\r\n\r\n          console.log(`Processed chat ${index}:`, processedChat);\r\n          return processedChat;\r\n        });\r\n\r\n        console.log('All processed chats:', processedChats);\r\n        setChats(processedChats);\r\n      } else {\r\n        console.log('No valid chat data found, setting empty array');\r\n        console.log('Data received was:', data);\r\n        setChats([]);\r\n      }\r\n\r\n      setChatsError(null);\r\n    } catch (error) {\r\n      console.log('Chat fetch error:', error);\r\n      console.log('Error response:', error.response);\r\n      console.log('Error message:', error.message);\r\n      setChats([]);\r\n      setChatsError(`Failed to load conversations: ${error.message}`);\r\n    }\r\n    setLoadingChats(false);\r\n  }, [token, userId]);\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [fetchChats]);\r\n\r\n  // Auto-refresh chats every 30 seconds\r\n  useEffect(() => {\r\n    if (!token || !userId) return;\r\n\r\n    const interval = setInterval(() => {\r\n      console.log('Auto-refreshing conversations...');\r\n      fetchChats();\r\n    }, 30000); // 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [token, userId, fetchChats]);\r\n\r\n  // Refresh conversations when user returns to dashboard tab\r\n  useEffect(() => {\r\n    const handleFocus = () => {\r\n      if (token && userId) {\r\n        console.log('Dashboard focused, refreshing conversations...');\r\n        fetchChats();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('focus', handleFocus);\r\n    return () => window.removeEventListener('focus', handleFocus);\r\n  }, [token, userId, fetchChats]);\r\n\r\n  // Removed custom logout (AppHeader handles logout)\r\n\r\n  // --- 12. Report-based metrics ---\r\n  const [reports, setReports] = useState([]);\r\n  const [reportsLoading, setReportsLoading] = useState(false);\r\n\r\n  // Fetch reports for the project\r\n  const fetchReports = useCallback(async () => {\r\n    if (!project?._id || !token) return;\r\n    \r\n    try {\r\n      setReportsLoading(true);\r\n      const { data } = await api.get(`/projects/${project._id}/reports`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setReports(data?.reports || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch reports:', error);\r\n      setReports([]);\r\n    } finally {\r\n      setReportsLoading(false);\r\n    }\r\n  }, [project?._id, token]);\r\n\r\n  useEffect(() => {\r\n    fetchReports();\r\n  }, [fetchReports]);\r\n\r\n  // Auto-refresh reports when global event dispatched (from ProjectView socket)\r\n  useEffect(()=>{\r\n    const handler = (e)=>{ if(String(e?.detail?.projectId)===String(project?._id)) fetchReports(); };\r\n    window.addEventListener('projectReportsUpdated', handler);\r\n    return ()=> window.removeEventListener('projectReportsUpdated', handler);\r\n  },[project?._id, fetchReports]);\r\n\r\n  // Calculate metrics from reports\r\n  const reportMetrics = React.useMemo(() => {\r\n    if (!reports.length) {\r\n      return {\r\n        data: [],\r\n        totalReports: 0,\r\n        completedWorkItems: 0,\r\n        inProgressWorkItems: 0,\r\n        totalWorkItems: 0,\r\n        averageContribution: 0,\r\n        reportingPics: 0,\r\n        lastReportDate: null,\r\n        overallAdjustedProgress: 0\r\n      };\r\n    }\r\n\r\n    // Latest report per PIC / uploader\r\n    const sorted = [...reports].sort((a, b) => new Date(b.uploadedAt || 0) - new Date(a.uploadedAt || 0));\r\n    const byUploader = new Map();\r\n    for (const report of sorted) {\r\n      const key = report.uploadedBy || report.uploadedByName || report._id;\r\n      if (!byUploader.has(key)) byUploader.set(key, report);\r\n    }\r\n    const distinctReports = [...byUploader.values()];\r\n\r\n    // Work item accumulation\r\n    let totalCompleted = 0;\r\n    let totalInProgress = 0;\r\n    let totalWorkItems = 0;\r\n    let totalContribution = 0; // sum only of non-zero contributions\r\n    let validContributions = 0;\r\n\r\n    const contributionMap = new Map(); // picId -> contribution (0-100)\r\n\r\n    distinctReports.forEach(report => {\r\n      const ai = report.ai || {};\r\n      const completed = ai.completed_tasks?.length || 0;\r\n      const inProgress = ai.summary_of_work_done?.length || 0;\r\n      const raw = Number(ai.pic_contribution_percent_raw);\r\n      const legacy = Number(ai.pic_contribution_percent);\r\n      const contribution = (isFinite(raw) && raw >= 0) ? raw : ((isFinite(legacy) && legacy >= 0) ? legacy : 0);\r\n\r\n      totalCompleted += completed;\r\n      totalInProgress += inProgress;\r\n      totalWorkItems += completed + inProgress;\r\n\r\n      if (contribution > 0) {\r\n        totalContribution += contribution;\r\n        validContributions++;\r\n      }\r\n      const key = report.uploadedBy || report.uploadedByName || report._id;\r\n      contributionMap.set(String(key), Math.max(0, Math.min(100, Math.round(contribution))));\r\n    });\r\n\r\n    const averageContribution = validContributions > 0 ? totalContribution / validContributions : 0;\r\n    const lastReportDate = sorted[0]?.uploadedAt || null;\r\n\r\n    // Adjust overall progress: include missing PICs as 0%\r\n    const assignedPicIds = Array.isArray(project?.pic)\r\n      ? project.pic.map(p => String(p?._id || p.id || p))\r\n      : [];\r\n    let overallAdjustedProgress = 0;\r\n    let headcountAverage = 0; // each reporting PIC treated as its contribution value; missing = 0\r\n    if (assignedPicIds.length > 0) {\r\n      const sum = assignedPicIds.reduce((s, id) => s + (contributionMap.get(id) || 0), 0);\r\n      overallAdjustedProgress = sum / assignedPicIds.length;\r\n      // headcount average already equivalent to adjusted (missing treated 0)\r\n      headcountAverage = overallAdjustedProgress;\r\n    } else {\r\n      // fallback: use average across reporters (prior behavior)\r\n      overallAdjustedProgress = averageContribution;\r\n      headcountAverage = averageContribution;\r\n    }\r\n    overallAdjustedProgress = Math.round(Math.max(0, Math.min(100, overallAdjustedProgress)));\r\n    headcountAverage = Math.round(Math.max(0, Math.min(100, headcountAverage)));\r\n\r\n    const data = [\r\n      { name: 'Completed', value: totalCompleted, color: '#22c55e' },\r\n      { name: 'In Progress', value: totalInProgress, color: '#3b82f6' },\r\n    ].filter(item => item.value > 0);\r\n\r\n    return {\r\n      data,\r\n      totalReports: reports.length,\r\n      completedWorkItems: totalCompleted,\r\n      inProgressWorkItems: totalInProgress,\r\n      totalWorkItems,\r\n      averageContribution: Math.round(averageContribution),\r\n      reportingPics: distinctReports.length,\r\n      lastReportDate,\r\n      overallAdjustedProgress,\r\n      headcountAverage\r\n    };\r\n  }, [reports, project?.pic]);\r\n\r\n  // --- Derived overall progress (single source for KPI + chart) ---\r\n  const derivedOverallProgress = React.useMemo(() => {\r\n    const totalPics = Array.isArray(project?.pic) ? project.pic.length : 0;\r\n    const reported = reportMetrics.reportingPics || 0;\r\n    // Headcount average already accounts for missing PICs as 0\r\n    let adjusted = reportMetrics.headcountAverage || 0;\r\n    if (totalPics === 0) {\r\n      adjusted = project?.progress || adjusted;\r\n    }\r\n    return Math.min(100, Math.max(0, Math.round(adjusted)));\r\n  }, [project?.pic, project?.progress, reportMetrics.headcountAverage]);\r\n\r\n  // Function to truncate text to about 10 words\r\n  const truncateMessage = (text, maxWords = 10) => {\r\n    if (!text || typeof text !== 'string') return 'No messages yet';\r\n\r\n    const words = text.trim().split(/\\s+/);\r\n    if (words.length <= maxWords) return text;\r\n\r\n    return words.slice(0, maxWords).join(' ') + '...';\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'completed':\r\n      case 'approved':\r\n        return <FaCheckCircle className=\"status-icon completed\" />;\r\n      case 'in progress':\r\n      case 'pending':\r\n        return <FaClock className=\"status-icon pending\" />;\r\n      case 'rejected':\r\n      case 'cancelled':\r\n        return <FaExclamationTriangle className=\"status-icon rejected\" />;\r\n      default:\r\n        return <FaClock className=\"status-icon pending\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pm-dashboard dashboard-container\">\r\n      <AppHeader roleSegment=\"pm\" />\r\n\r\n      {/* Main Dashboard Content */}\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"dashboard-grid\">\r\n          {/* Welcome & Project Overview Card */}\r\n          <div className=\"dashboard-card pm-welcome-card\">\r\n            {/* Hero Art */}\r\n            <div \r\n              className=\"hero-art\"\r\n              aria-hidden=\"true\"\r\n              style={{\r\n                backgroundImage: `radial-gradient(ellipse at 65% 35%, rgba(255,255,255,0.18), transparent 55%), url(${process.env.PUBLIC_URL || ''}/images/illustration-construction-site.png)`\r\n              }}\r\n            />\r\n            \r\n            <div className=\"welcome-content\">\r\n              <h2 className=\"welcome-title\">Welcome back, {userName}! 👋</h2>\r\n              <p className=\"welcome-subtitle\">Here's what's happening with your project today</p>\r\n            </div>\r\n            \r\n            {/* Welcome Stats */}\r\n            <div className=\"welcome-stats\">\r\n              <Link to=\"/pm/viewproj\" className=\"stat-link\">\r\n                <div className=\"stat-item\">\r\n                  <div className=\"stat-icon\">\r\n                    <FaProjectDiagram />\r\n                  </div>\r\n                  <div className=\"stat-content\">\r\n                    <div className=\"stat-value\">{project ? 1 : 0}</div>\r\n                    <div className=\"stat-label\">TOTAL PROJECTS</div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n              \r\n              <Link to=\"/pm/viewproj\" className=\"stat-link\">\r\n                <div className=\"stat-item\">\r\n                  <div className=\"stat-icon\">\r\n                    <FaUsers />\r\n                  </div>\r\n                  <div className=\"stat-content\">\r\n                    <div className=\"stat-value\">{project?.manpower?.length || 0}</div>\r\n                    <div className=\"stat-label\">TEAM MEMBERS</div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n\r\n            {/* KPI Strip */}\r\n            <div className=\"kpi-strip\">\r\n              <Link to=\"/pm/request/:id\" className=\"kpi\">\r\n                <div className=\"kpi-ico\">\r\n                  <FaBoxes />\r\n                </div>\r\n                <div className=\"kpi-body\" style={{color:'#fff'}}>\r\n                  <div className=\"kpi-title\" style={{color:'#fff'}}>Pending Requests</div>\r\n                  <div className=\"kpi-value\" style={{color:'#fff'}}>{materialRequests.filter(r => r.status === 'Pending').length}</div>\r\n                </div>\r\n              </Link>\r\n              \r\n              <Link to=\"/pm/viewproj\" className=\"kpi\">\r\n                <div className=\"kpi-ico\">\r\n                  <FaChartBar />\r\n                </div>\r\n                <div className=\"kpi-body\" style={{color:'#fff'}}>\r\n                  <div className=\"kpi-title\" style={{color:'#fff'}}>Active Projects</div>\r\n                  <div className=\"kpi-value\" style={{color:'#fff'}}>{project ? 1 : 0}</div>\r\n                </div>\r\n              </Link>\r\n              \r\n              <Link to=\"/pm/viewproj\" className=\"kpi\">\r\n                <div className=\"kpi-ico\">\r\n                  <FaProjectDiagram />\r\n                </div>\r\n                <div className=\"kpi-body\" style={{color:'#fff'}}>\r\n                  <div className=\"kpi-title\" style={{color:'#fff'}}>Avg. Progress</div>\r\n                  <div className=\"kpi-value\" style={{color:'#fff'}}>{derivedOverallProgress}%</div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            \r\n\r\n          </div>\r\n\r\n          {/* Work Progress Chart (aligned with overall project progress) */}\r\n          {project && (\r\n            <div className=\"dashboard-card chart-card\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"card-title\">Work Progress Overview</h3>\r\n                <div className=\"card-subtitle\">\r\n                  Overall progress based on latest PIC reports\r\n                </div>\r\n              </div>\r\n              {(() => {\r\n                const totalPics = Array.isArray(project?.pic) ? project.pic.length : 0;\r\n                const reported = reportMetrics.reportingPics || 0;\r\n                const overallProgress = derivedOverallProgress;\r\n                const progressData = [\r\n                  { name: 'Completed', value: overallProgress, color: '#22c55e' },\r\n                  { name: 'Remaining', value: 100 - overallProgress, color: '#e2e8f0' }\r\n                ];\r\n                return (\r\n                  <div className=\"chart-container\" style={{position:'relative'}}>\r\n                    <ResponsiveContainer width=\"100%\" height={200}>\r\n                      <PieChart>\r\n                        <Pie\r\n                          data={progressData}\r\n                          cx=\"50%\"\r\n                          cy=\"50%\"\r\n                          innerRadius={50}\r\n                          outerRadius={80}\r\n                          startAngle={90}\r\n                          endAngle={-270}\r\n                          paddingAngle={1}\r\n                          dataKey=\"value\"\r\n                        >\r\n                          {progressData.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={entry.color} />\r\n                          ))}\r\n                        </Pie>\r\n                      </PieChart>\r\n                    </ResponsiveContainer>\r\n                    <div style={{position:'absolute',top:'50%',left:'50%',transform:'translate(-50%, -50%)',textAlign:'center'}}>\r\n                      <div style={{fontSize:32,fontWeight:700,color:'#0f172a'}}>{overallProgress}%</div>\r\n                      <div style={{fontSize:12,color:'#64748b'}}>{reported < totalPics ? `${reported}/${totalPics} PICs` : 'Overall'}</div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })()}\r\n              {reportMetrics.lastReportDate && (\r\n                <div className=\"chart-footer\">\r\n                  <span className=\"last-report\">Last report: {new Date(reportMetrics.lastReportDate).toLocaleDateString()}</span>\r\n                  {Array.isArray(project?.pic) && project.pic.length>0 && (\r\n                    <span style={{marginLeft:12, fontSize:12, color:'#64748b'}}>\r\n                      Coverage: {reportMetrics.reportingPics}/{project.pic.length} PICs\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n\r\n          {/* Material Requests */}\r\n          <div className=\"dashboard-card requests-card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">Material Requests</h3>\r\n              <Link to=\"/pm/request/:id\" className=\"view-all-link\">\r\n                View All <FaArrowRight />\r\n              </Link>\r\n            </div>\r\n            <div className=\"requests-content\">\r\n              {loadingRequests ? (\r\n                <div className=\"loading-state\">\r\n                  <div className=\"loading-spinner\"></div>\r\n                  <span>Loading requests...</span>\r\n                </div>\r\n              ) : requestsError ? (\r\n                <div className=\"error-state\">\r\n                  <FaExclamationTriangle />\r\n                  <span>{requestsError}</span>\r\n                </div>\r\n              ) : materialRequests.length === 0 ? (\r\n                <div className=\"empty-state\">\r\n                  <FaBoxes />\r\n                  <span>No material requests found</span>\r\n                  <p>All requests have been processed or none are pending</p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"requests-list\">\r\n                  {materialRequests.slice(0, 3).map(request => (\r\n                    <Link to={`/pm/request/${request._id}`} key={request._id} className=\"request-item-new-layout\" style={{textDecoration:'none'}}>\r\n                      {/* Left Section - Item Details */}\r\n                      <div className=\"request-left-section\">\r\n                        <div className=\"request-icon-new\">\r\n                          <FaBoxes />\r\n                        </div>\r\n                        <div className=\"request-details-new\">\r\n                          <h4 className=\"request-title-new\">\r\n                            {request.materials?.map(m => `${m.materialName} (${m.quantity})`).join(', ')}\r\n                          </h4>\r\n                          <div className=\"request-meta-new\">\r\n                            <span className=\"request-project-new\">{request.project?.projectName}</span>\r\n                            <span className=\"request-date-new\">\r\n                              {new Date(request.createdAt).toLocaleDateString()}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {/* Center Section - Progress Tracking */}\r\n                      <div className=\"request-center-section\">\r\n                        <div className=\"tracking-timeline-new\">\r\n                          {/* Placed Stage */}\r\n                          <div className={`timeline-step-new ${getTimelineStatus(request.status, 'placed')}`}>\r\n                            <div className=\"timeline-icon-new\">\r\n                              <FaCheckCircle />\r\n                            </div>\r\n                            <span className=\"timeline-label-new\">Placed</span>\r\n                          </div>\r\n                          <div className={`timeline-connector-new ${['Pending PM', 'Pending AM', 'Approved', 'Received', 'PENDING PROJECT MANAGER'].includes(request.status) ? 'completed' : ''}`}></div>\r\n                          {/* PM Stage */}\r\n                          <div className={`timeline-step-new ${getTimelineStatus(request.status, 'pm')}`}>\r\n                            <div className=\"timeline-icon-new\">\r\n                              <FaUserTie />\r\n                            </div>\r\n                            <span className=\"timeline-label-new\">PM</span>\r\n                          </div>\r\n                          <div className={`timeline-connector-new ${['Pending AM', 'Approved', 'Received', 'PENDING AREA MANAGER'].includes(request.status) ? 'completed' : ''}`}></div>\r\n                          {/* AM Stage */}\r\n                          <div className={`timeline-step-new ${getTimelineStatus(request.status, 'am')}`}>\r\n                            <div className=\"timeline-icon-new\">\r\n                              <FaBuilding />\r\n                            </div>\r\n                            <span className=\"timeline-label-new\">AM</span>\r\n                          </div>\r\n                          <div className={`timeline-connector-new ${['Approved', 'Received'].includes(request.status) ? 'completed' : ''}`}></div>\r\n                          {/* Done Stage */}\r\n                          <div className={`timeline-step-new ${getTimelineStatus(request.status, 'done')}`}>\r\n                            <div className=\"timeline-icon-new\">\r\n                              <FaCheckCircle />\r\n                            </div>\r\n                            <span className=\"timeline-label-new\">Done</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {/* Right Section - Status */}\r\n                      <div className=\"request-right-section\">\r\n                        <div className=\"request-status-new\">\r\n                          <span className={`status-text-new ${request.status?.replace(/\\s/g, '').toLowerCase()}`}>\r\n                            {request.status}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Recent Chats */}\r\n          <div className=\"dashboard-card chats-card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">Recent Conversations</h3>\r\n              <div className=\"card-actions\">\r\n                <button\r\n                  className=\"refresh-btn\"\r\n                  onClick={fetchChats}\r\n                  title=\"Refresh conversations\"\r\n                  disabled={loadingChats}\r\n                >\r\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                    <path d=\"M1 4v6h6M23 20v-6h-6\" />\r\n                    <path d=\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\" />\r\n                  </svg>\r\n                </button>\r\n                <Link to=\"/pm/chat\" className=\"view-all-link\">\r\n                  View All <FaArrowRight />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"chats-list\">\r\n              {loadingChats ? (\r\n                <div className=\"loading-state\">\r\n                  <div className=\"loading-spinner\"></div>\r\n                  <span>Loading conversations...</span>\r\n                </div>\r\n              ) : chatsError ? (\r\n                <div className=\"error-state\">\r\n                  <FaExclamationTriangle />\r\n                  <span>{chatsError}</span>\r\n                </div>\r\n              ) : chats.length === 0 ? (\r\n                <div className=\"empty-state\">\r\n                  <FaComments />\r\n                  <span>No recent conversations</span>\r\n                  <p>Start chatting with your team members</p>\r\n                </div>\r\n              ) : (\r\n                chats.slice(0, 3).map((chat, index) => {\r\n                  console.log('Chat data for time debugging:', {\r\n                    chatId: chat._id || index,\r\n                    lastMessageTime: chat.lastMessageTime,\r\n                    timestamp: chat.timestamp,\r\n                    createdAt: chat.createdAt,\r\n                    fullChat: chat\r\n                  });\r\n\r\n                  return (\r\n                    <Link\r\n                      key={chat._id || index}\r\n                      to={`/pm/chat/${chat._id || chat.chatId || index}`}\r\n                      className=\"chat-item\"\r\n                      style={{ textDecoration: 'none' }}\r\n                    >\r\n                      <div className=\"chat-avatar\" style={{ backgroundColor: chat.color || '#3b82f6' }}>\r\n                        {typeof chat.name === 'string' ? chat.name.charAt(0).toUpperCase() : 'U'}\r\n                      </div>\r\n                      <div className=\"chat-content\">\r\n                        <div className=\"chat-header\">\r\n                          <span className=\"chat-name\">\r\n                            {typeof chat.name === 'string' ? chat.name : 'Unknown User'}\r\n                          </span>\r\n                          <span className=\"chat-time\">\r\n                            {(() => {\r\n                              const time = chat.lastMessageTime || chat.timestamp || chat.createdAt;\r\n                              if (!time) return 'Just now';\r\n\r\n                              try {\r\n                                if (typeof time === 'string') {\r\n                                  const date = new Date(time);\r\n                                  if (isNaN(date.getTime())) return 'Just now';\r\n                                  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                                } else if (time instanceof Date) {\r\n                                  return time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                                } else if (typeof time === 'number') {\r\n                                  const date = new Date(time);\r\n                                  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                                }\r\n                                return 'Just now';\r\n                              } catch (error) {\r\n                                console.log('Time formatting error:', error, 'for time:', time);\r\n                                return 'Just now';\r\n                              }\r\n                            })()}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"chat-message\">\r\n                          {truncateMessage(typeof chat.lastMessage === 'string' ? chat.lastMessage : 'No messages yet')}\r\n                        </p>\r\n                      </div>\r\n                    </Link>\r\n                  );\r\n                })\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PmDash;\r\n\r\n"],"names":["STATUS_META","approved","label","icon","_jsx","FaCheckCircle","tone","rejected","FaTimes","pending","FaHourglassHalf","archived","FaFileAlt","PmRequestedManpowerDetail","_request$project2","_request$project3","_request$createdBy3","_request$returnWindow","_request$project4","_request$manpowers","_request$returnWindow2","_request$returnWindow3","_request$returnWindow4","_request$returnWindow5","_request$returnWindow6","_request$project5","_request$manpowers2","_request$project6","_request$manpowers3","id","useParams","navigate","useNavigate","token","localStorage","getItem","stored","user","JSON","parse","userId","_id","userRole","role","userName","useState","name","request","setRequest","pmProject","setPmProject","loading","setLoading","error","setError","markReceived","setMarkReceived","showCalendar","setShowCalendar","selectedDate","setSelectedDate","busy","setBusy","showCancelConfirm","setShowCancelConfirm","showArchiveConfirm","setShowArchiveConfirm","archiveReason","setArchiveReason","modal","setModal","open","title","message","type","actions","openModal","cfg","_objectSpread","closeModal","m","showRejectModal","setShowRejectModal","rejectReason","setRejectReason","showReceiveConfirm","setShowReceiveConfirm","showReturnConfirm","setShowReturnConfirm","availableManpowers","setAvailableManpowers","selectedManpowerIds","setSelectedManpowerIds","isPM","useEffect","async","data","api","get","concat","received","_unused","run","isMine","useMemo","_request$createdBy","_request$createdBy2","creatorId","createdBy","isApproved","status","toLowerCase","donorIds","returnDate","Date","_unused2","originalAssignments","map","o","_o$donorProjectManage","donorProjectManager","filter","Boolean","isDonorPM","includes","headers","Authorization","_unused3","loadPmProject","arr","Array","isArray","requestedTypes","manpowers","mp","filtered","_m$assignedProject","ap","assignedProject","project","homeProject","projectMatch","String","typeMatch","position","e","console","fetchManpowerFromPmProject","sourceProjectName","projectName","destProjectName","renderStatusBadge","key","meta","_jsxs","className","children","AppHeader","roleSegment","FaExclamationTriangle","onClick","FaArrowLeft","FaProjectDiagram","FaUserTie","requestNumber","slice","handleEdit","FaEdit","disabled","handleCancel","acquisitionDate","toLocaleDateString","duration","returnWindow","maxReturnDate","handleOpenReceiveConfirm","FaUsers","length","i","quantity","description","FaCheck","join","defaultValue","onChange","val","target","value","p","idv","find","prev","x","handleDeny","_request$project","put","manpowerProvided","primary","_e$response","_e$response$data","response","rejectedBy","rejectionReason","r","_r$userId","rejectedAt","archivedReason","originalRequestDetails","handleArchive","handleScheduleReturn","FaCalendarPlus","handleOpenReturnConfirm","style","fontSize","color","marginBottom","_e$response3","_e$response3$data","_e$response4","_e$response4$data","min","earliestReturnDate","split","toISOString","max","undefined","marginTop","daysRemainingInWindow","_unused4","AuditTrail","requestId","createdAt","delete","_unused5","placeholder","reason","_e$response5","_e$response5$data","width","minHeight","padding","border","borderRadius","_response$data","_e$response2","_e$response2$data","a","_ref","logs","setLogs","React","setOpen","l","_l$meta","fetchLogs","_l$performedBy","action","timestamp","toLocaleString","performedBy","performedByRole","PmProgressReport","handleLogout","projectId","setProject","aiAnalysis","setAiAnalysis","logsUsed","setLogsUsed","profileMenuOpen","setProfileMenuOpen","then","res","catch","err","src","require","alt","Link","to","FaTachometerAlt","FaComments","FaBoxes","FaClipboardList","FaChartBar","FaCalendarAlt","display","alignItems","gap","NotificationBell","charAt","toUpperCase","margin","latestLogs","sort","b","date","dssRes","post","result","_project$projectName","doc","jsPDF","unit","format","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","marginX","y","logoURL","logoData","img","Image","crossOrigin","Promise","resolve","onload","canvas","document","createElement","naturalWidth","height","naturalHeight","getContext","drawImage","dataUrl","toDataURL","w","h","onerror","warn","drawHeader","_logoData","_project$location","maxLogoWidth","maxLogoHeight","logoRatio","logoWidth","logoHeight","addImage","setFontSize","setFont","setTextColor","text","location","currentDate","setDrawColor","setLineWidth","line","analysisParagraphs","trim","currentY","paragraph","addPage","lines","splitTextToSize","forEach","log","index","workPerformed","work","task","addFooter","pageNum","originalPage","getCurrentPageInfo","pageNumber","setPage","footerText","pageText","getNumberOfPages","getTextWidth","fileName","replace","save","marginLeft","background","boxShadow","whiteSpace","fontFamily","PmChat","AreaChat","baseSegment","PmMatRequestDetailWrapper","_Fragment","MaterialRequestDetailView","rootClass","disableHeader","gridCardStyle","maxWidth","flexDirection","flexBetween","justifyContent","gridBox","gridTemplateColumns","sectionTitle","fontWeight","capitalize","str","PmViewDailyLogs","_log$project","setLog","textAlign","present","siteAttendance","_a$manpower","_a$manpower2","manpower","fullName","absent","_a$manpower3","_a$manpower4","attachments","attachmentProof","logTitle","logNumber","site","engineer","weatherCondition","flex","minWidth","materialDeliveries","del","_del$delivery","delivery","poNumber","marginRight","maxHeight","overflow","remarks","flexWrap","idx","objectFit","PmManpowerList","userRef","useRef","current","requests","setRequests","setStatus","searchTerm","setSearchTerm","currentPage","setCurrentPage","layoutView","setLayoutView","sortDesc","setSortDesc","viewMode","setViewMode","active","othersOnly","_r$createdBy","_r$createdBy2","fetchAll","filteredRequests","items","s","_r$project","_r$createdBy3","proj","by","summary","sortedRequests","aTime","getTime","bTime","totalPages","Math","ceil","pageRows","start","summaryCounts","completed","overdue","isOver","total","statusCounts","All","Pending","Overdue","Approved","Completed","Rejected","Archived","tab","_statusCounts$tab","FaSearch","FaTh","FaList","_request$createdBy4","badgeLabel","getStatusBadge","getStatusColor","rejection","_rejection$userId","from","_","page","PmViewProjects","ProjectView","useUnifiedHeader","PmRequestManpower","projects","setProjects","editMode","setEditMode","formData","setFormData","allTypes","setAllTypes","focusedRow","setFocusedRow","highlighted","setHighlighted","list","types","fetchTypeSuggestions","_data$project","finally","handleManpowerChange","field","newManpowers","handleChange","prevState","projectManager","fetchProjects","onSubmit","preventDefault","every","isNaN","Number","body","url","method","htmlFor","readOnly","required","_highlighted$idx","suggestions","t","showDropdown","currentHighlight","onFocus","onBlur","setTimeout","onKeyDown","autoComplete","listStyle","top","left","right","zIndex","overflowY","cursor","onMouseDown","onMouseEnter","removeManpowerRow","FaTrash","addManpowerRow","FaPlus","rows","FaSave","PMDailyLogs","setUserName","currentProject","setCurrentProject","projectManpower","setProjectManpower","setMaterialDeliveries","projectTasks","setProjectTasks","fetchAssignedPMProject","projectData","manpowerResponse","deliveriesResponse","tasksResponse","_error$response","_error$response$data","hasToken","alert","fetchProjectData","newWorkPerformed","taskName","wp","handleFieldChange","handleWorkPerformedChange","handleClickOutside","event","closest","addEventListener","removeEventListener","removeItem","borderRight","initial","chat","transition","textOverflow","submittedBy","paddingRight","_formData$siteAttenda","handleAttendanceChange","manpowerId","attendance","findIndex","push","_formData$materialDel","materialName","d","handleMaterialDeliveryChange","deliveryId","deliveries","overflowX","checked","statusFilterMap","PmDailyLogsList","setFilter","setUser","setToken","setUserId","filteredLogs","startIndex","pageLogs","window","href","borderBottom","fill","_log$submittedBy","lineHeight","opacity","PmManpowerRequestList","manpowerInput","setManpowerInput","busyId","setBusyId","onApprove","ids","item","_item$project","_item$project2","area","onDeny","prompt","confirm","v","c","PmAllProjects","activeTab","setActiveTab","ongoing","setOngoing","setCompleted","search","setSearch","sortKey","setSortKey","sortDir","setSortDir","all","_ref2","decorate","startDate","end","endDate","today","totalDays","elapsedDays","pctTime","daysLeft","round","sortFn","dir","_p$projectName","av","bv","filteredOngoing","_p$projectName2","filteredCompleted","_p$projectName3","filteredAll","_p$projectName4","stats","toggleSort","ProjectTable","_ref3","showBadges","colSpan","_p$location","toFixed","_p$location2","stopPropagation","tabIndex","FaSortAmountDown","PmMatRequestListWrapper","MaterialRequestListView","fetchUrl","detailLinkBase","_project$manpower","forceUserUpdate","handleUserChange","setUserRole","chats","setChats","loadingChats","setLoadingChats","chatsError","setChatsError","materialRequests","setMaterialRequests","loadingRequests","setLoadingRequests","requestsError","setRequestsError","getTimelineStatus","stage","statusLower","candidate","test","allRolesResp","fetchRequests","fetchChats","useCallback","substring","testResponse","testError","users","processedChats","conversation","_conversation$users","_conversation$users2","_conversation$users3","_otherUser","_otherUser2","_conversation$users4","otherUser","toString","otherUserName","firstname","lastname","allUserNames","lastMessageContent","lastMessageTime","lastMessage","content","time","processedChat","isGroup","interval","setInterval","clearInterval","handleFocus","reports","setReports","reportsLoading","setReportsLoading","fetchReports","handler","_e$detail","detail","reportMetrics","_sorted$","totalReports","completedWorkItems","inProgressWorkItems","totalWorkItems","averageContribution","reportingPics","lastReportDate","overallAdjustedProgress","sorted","uploadedAt","byUploader","Map","report","uploadedBy","uploadedByName","has","set","distinctReports","values","totalCompleted","totalInProgress","totalContribution","validContributions","contributionMap","_ai$completed_tasks","_ai$summary_of_work_d","ai","completed_tasks","inProgress","summary_of_work_done","raw","pic_contribution_percent_raw","legacy","pic_contribution_percent","contribution","isFinite","assignedPicIds","pic","headcountAverage","reduce","derivedOverallProgress","totalPics","adjusted","progress","truncateMessage","maxWords","arguments","words","backgroundImage","reported","overallProgress","progressData","ResponsiveContainer","PieChart","Pie","cx","cy","innerRadius","outerRadius","startAngle","endAngle","paddingAngle","dataKey","entry","Cell","transform","FaArrowRight","_request$materials","_request$status","textDecoration","materials","FaBuilding","viewBox","stroke","strokeWidth","chatId","fullChat","backgroundColor","toLocaleTimeString","hour","minute"],"sourceRoot":""}