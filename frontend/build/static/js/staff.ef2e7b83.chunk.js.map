{"version":3,"file":"static/js/staff.ef2e7b83.chunk.js","mappings":"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","sources":["components/staff/StaffCurrentProject.js","components/staff/StaffAllProjects.js","components/chats/StaffChat.js"],"sourcesContent":["// Unified StaffCurrentProject now reuses generic ProjectView.\r\nimport React from 'react';\r\nimport ProjectView from '../project/ProjectView';\r\nimport AppHeader from '../layout/AppHeader';\r\n\r\n// Use the same pattern as HrSiteCurrentProject: let ProjectView render layout once.\r\n// Passing customHeader avoids nesting two headers and multiple scroll containers.\r\nexport default function StaffCurrentProject(){\r\n  return (\r\n    <ProjectView\r\n      role=\"staff\"\r\n      useUnifiedHeader={true}\r\n      customHeader={<AppHeader roleSegment=\"staff\" />}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../../api/axiosInstance';\r\nimport '../style/staff_style/Staff_Dash.css';\r\nimport '../style/am_style/Area_Projects.css';\r\nimport AppHeader from '../layout/AppHeader';\r\nimport { \r\n  FaMapMarkerAlt, FaUserTie, FaBuilding, FaCalendarAlt, FaUsers as FaUsersIcon,\r\n  FaMoneyBillWave, FaCheckCircle, FaClock, FaTh, FaList, FaSearch, FaChevronDown, FaChevronUp, FaProjectDiagram\r\n} from 'react-icons/fa';\r\n\r\nconst StaffAllProjects = () => {\r\n  const [filter, setFilter] = useState('all');\r\n  const [viewMode, setViewMode] = useState('grid');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [projects, setProjects] = useState([]);\r\n  const [allProjects, setAllProjects] = useState([]); // for \"All Projects\" view\r\n  const [showAll, setShowAll] = useState(false); // toggle between My Projects and All\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const user = useMemo(()=> { try { return JSON.parse(localStorage.getItem('user')||'{}'); } catch { return {}; } }, []);\r\n  const staffId = user?._id;\r\n\r\n  // Fetch my (assigned) projects & all projects\r\n  useEffect(()=>{\r\n    if(!staffId) return; let cancelled=false; setLoading(true); setError(null);\r\n    (async()=>{ try {\r\n      const [mineRes, allRes] = await Promise.all([\r\n        api.get(`/projects/assigned/allroles/${staffId}`), // ongoing assigned across roles\r\n        api.get('/projects') // all projects for global view\r\n      ]);\r\n      if(cancelled) return;\r\n      setProjects(Array.isArray(mineRes.data)? mineRes.data: []);\r\n      setAllProjects(Array.isArray(allRes.data)? allRes.data: []);\r\n    } catch(e){ if(!cancelled){ setError('Failed to load projects'); } } finally { if(!cancelled) setLoading(false); } })();\r\n    return ()=>{ cancelled=true; };\r\n  },[staffId]);\r\n\r\n  // Apply filters and search\r\n  const sourceProjects = showAll ? allProjects : projects;\r\n  const displayedProjects = sourceProjects\r\n    .filter(project => {\r\n      // Status filter\r\n      if (filter === 'completed') {\r\n        return project.status === 'Completed';\r\n      }\r\n      if (filter === 'ongoing') {\r\n        return project.status === 'Ongoing' || project.status === 'On Going';\r\n      }\r\n      if (filter === 'pending') {\r\n        return project.status === 'Pending' || project.status === 'Not Started';\r\n      }\r\n      \r\n      // Search filter\r\n      if (searchTerm) {\r\n        const searchLower = searchTerm.toLowerCase();\r\n        return (\r\n          project.projectName?.toLowerCase().includes(searchLower) ||\r\n          project.location?.name?.toLowerCase().includes(searchLower) ||\r\n          project.projectmanager?.name?.toLowerCase().includes(searchLower) ||\r\n          project.contractor?.toLowerCase().includes(searchLower)\r\n        );\r\n      }\r\n      \r\n      return true;\r\n    })\r\n    .sort((a, b) => {\r\n      let aValue, bValue;\r\n      \r\n      switch (sortBy) {\r\n        case 'name':\r\n          aValue = a.projectName || '';\r\n          bValue = b.projectName || '';\r\n          break;\r\n        case 'location':\r\n          aValue = a.location?.name || '';\r\n          bValue = b.location?.name || '';\r\n          break;\r\n        case 'manager':\r\n          aValue = a.projectmanager?.name || '';\r\n          bValue = b.projectmanager?.name || '';\r\n          break;\r\n        case 'status':\r\n          aValue = a.status || '';\r\n          bValue = b.status || '';\r\n          break;\r\n        case 'startDate':\r\n          aValue = new Date(a.startDate || 0);\r\n          bValue = new Date(b.startDate || 0);\r\n          break;\r\n        default:\r\n          aValue = a.projectName || '';\r\n          bValue = b.projectName || '';\r\n      }\r\n      \r\n      if (sortOrder === 'asc') {\r\n        return aValue > bValue ? 1 : -1;\r\n      } else {\r\n        return aValue < bValue ? 1 : -1;\r\n      }\r\n    });\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'completed':\r\n        return '#10B981';\r\n      case 'ongoing':\r\n      case 'on going':\r\n        return '#3B82F6';\r\n      case 'pending':\r\n      case 'not started':\r\n        return '#F59E0B';\r\n      default:\r\n        return '#6B7280';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'completed':\r\n        return <FaCheckCircle />;\r\n      case 'ongoing':\r\n      case 'on going':\r\n        return <FaClock />;\r\n      case 'pending':\r\n      case 'not started':\r\n        return <FaClock />;\r\n      default:\r\n        return <FaClock />;\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"dashboard-container\"><div className=\"loading-container\"><div className=\"loading-spinner\"/><p>Loading projects...</p></div></div>;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <AppHeader roleSegment=\"pic\" overrideNav={[\r\n        { to:'/staff/current-project', label:'Project', icon:<FaCalendarAlt/>, match:'/staff/current-project' },\r\n        { to:'/staff/chat', label:'Chat', icon:<FaClock/>, match:'/staff/chat' },\r\n        { to:'/staff/all-projects', label: showAll? 'All Projects':'My Projects', icon:<FaProjectDiagram/>, match:'/staff/all-projects' }\r\n      ]} />\r\n\r\n      {/* Main Content */}\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"projects-container\">\r\n          {/* Page Header */}\r\n          <div className=\"page-header\">\r\n            <div className=\"page-title-section\">\r\n              <h1 className=\"page-title\">{showAll? 'All Projects':'My Projects'}</h1>\r\n              <p className=\"page-subtitle\">{showAll? 'Complete portfolio overview':'Projects you are assigned to'} </p>\r\n            </div>\r\n            <div className=\"page-actions\" style={{display:'flex',gap:'0.5rem'}}>\r\n              <button className=\"view-mode-btn\" style={{minWidth:130}} onClick={()=>setShowAll(s=>!s)}>\r\n                {showAll? 'Show My Projects':'Show All'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filters and Controls */}\r\n          <div className=\"projects-controls\">\r\n            <div className=\"controls-left\">\r\n              {/* Search */}\r\n              <div className=\"search-container\">\r\n                <FaSearch className=\"search-icon\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search projects...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"search-input\"\r\n                />\r\n                  </div>\r\n\r\n              {/* Status Filter */}\r\n              <div className=\"filter-group\">\r\n                <button\r\n                  className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\r\n                  onClick={() => setFilter('all')}\r\n                >\r\n                  All ({sourceProjects.length})\r\n                </button>\r\n                <button\r\n                  className={`filter-btn ${filter === 'ongoing' ? 'active' : ''}`}\r\n                  onClick={() => setFilter('ongoing')}\r\n                >\r\n                  Ongoing ({sourceProjects.filter(p => p.status === 'Ongoing' || p.status === 'On Going').length})\r\n                </button>\r\n                <button\r\n                  className={`filter-btn ${filter === 'completed' ? 'active' : ''}`}\r\n                  onClick={() => setFilter('completed')}\r\n                >\r\n                  Completed ({sourceProjects.filter(p => p.status === 'Completed').length})\r\n                </button>\r\n                <button\r\n                  className={`filter-btn ${filter === 'pending' ? 'active' : ''}`}\r\n                  onClick={() => setFilter('pending')}\r\n                >\r\n                  Pending ({sourceProjects.filter(p => p.status === 'Pending' || p.status === 'Not Started').length})\r\n                </button>\r\n                  </div>\r\n                </div>\r\n\r\n            <div className=\"controls-right\">\r\n              {/* Sort */}\r\n              <div className=\"sort-container\">\r\n                <select\r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value)}\r\n                  className=\"sort-select\"\r\n                >\r\n                  <option value=\"name\">Sort by Name</option>\r\n                  <option value=\"location\">Sort by Location</option>\r\n                  <option value=\"manager\">Sort by Manager</option>\r\n                  <option value=\"status\">Sort by Status</option>\r\n                  <option value=\"startDate\">Sort by Start Date</option>\r\n                </select>\r\n                <button\r\n                  className=\"sort-order-btn\"\r\n                  onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\r\n                >\r\n                  {sortOrder === 'asc' ? <FaChevronUp /> : <FaChevronDown />}\r\n                </button>\r\n              </div>\r\n\r\n              {/* View Mode */}\r\n              <div className=\"view-mode-container\">\r\n                <button\r\n                  className={`view-mode-btn ${viewMode === 'grid' ? 'active' : ''}`}\r\n                  onClick={() => setViewMode('grid')}\r\n                >\r\n                  <FaTh />\r\n                </button>\r\n                <button\r\n                  className={`view-mode-btn ${viewMode === 'list' ? 'active' : ''}`}\r\n                  onClick={() => setViewMode('list')}\r\n                >\r\n                  <FaList />\r\n                </button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n\r\n          {/* Error State */}\r\n          {error && (\r\n            <div className=\"error-state\">\r\n              <FaClock />\r\n              <span>{error}</span>\r\n              <button onClick={() => window.location.reload()} className=\"retry-btn\">\r\n                Try Again\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Projects Grid/List */}\r\n          {!error && (\r\n            <div className={`projects-display ${viewMode}`}>\r\n              {displayedProjects.length === 0 ? (\r\n                <div className=\"empty-state\">\r\n                  <FaProjectDiagram />\r\n                  <h3>No projects found</h3>\r\n                  <p>\r\n                    {searchTerm || filter !== 'all' \r\n                      ? 'Try adjusting your search or filters'\r\n                      : 'You are not assigned to any projects yet'\r\n                    }\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                displayedProjects.map(project => (\r\n                  <div\r\n                    key={project._id}\r\n                    className=\"project-card\"\r\n                    onClick={() => navigate(`/staff/current-project/${project._id}`)}\r\n                  >\r\n                    {/* Project Image */}\r\n                    <div className=\"project-image-container\">\r\n                      <img\r\n                        src={project.photos && project.photos.length > 0\r\n                          ? project.photos[0]\r\n                          : 'https://placehold.co/400x250?text=No+Photo'}\r\n                        alt={project.projectName}\r\n                        className=\"project-image\"\r\n                      />\r\n                      <div className=\"project-status-badge\" style={{ backgroundColor: getStatusColor(project.status) }}>\r\n                        {getStatusIcon(project.status)}\r\n                        <span>{project.status || 'Unknown'}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Project Content */}\r\n                    <div className=\"project-content\">\r\n                      <div className=\"project-header\">\r\n                        <h3 className=\"project-name\">{project.projectName}</h3>\r\n                        <div className=\"project-location\">\r\n                          <FaMapMarkerAlt />\r\n                          <span>{project.location?.name || 'No Location'}</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"project-details\">\r\n                        <div className=\"detail-item\">\r\n                          <FaUserTie className=\"detail-icon\" />\r\n                          <div className=\"detail-content\">\r\n                            <span className=\"detail-label\">Project Manager</span>\r\n                            <span className=\"detail-value\">{project.projectmanager?.name || 'Not Assigned'}</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"detail-item\">\r\n                          <FaBuilding className=\"detail-icon\" />\r\n                          <div className=\"detail-content\">\r\n                            <span className=\"detail-label\">Contractor</span>\r\n                            <span className=\"detail-value\">{project.contractor || 'Not Assigned'}</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"detail-item\">\r\n                          <FaCalendarAlt className=\"detail-icon\" />\r\n                          <div className=\"detail-content\">\r\n                            <span className=\"detail-label\">Timeline</span>\r\n                            <span className=\"detail-value\">\r\n                              {project.startDate && project.endDate\r\n                                ? `${new Date(project.startDate).toLocaleDateString()} - ${new Date(project.endDate).toLocaleDateString()}`\r\n                                : 'Not Set'\r\n                              }\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"detail-item\">\r\n                          <FaUsersIcon className=\"detail-icon\" />\r\n                          <div className=\"detail-content\">\r\n                            <span className=\"detail-label\">Manpower</span>\r\n                            <span className=\"detail-value\">\r\n                              {Array.isArray(project.manpower) && project.manpower.length > 0\r\n                                ? `${project.manpower.length} assigned`\r\n                                : 'No manpower assigned'\r\n                              }\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {project.budget && (\r\n                          <div className=\"detail-item\">\r\n                            <FaMoneyBillWave className=\"detail-icon\" />\r\n                            <div className=\"detail-content\">\r\n                              <span className=\"detail-label\">Budget</span>\r\n                              <span className=\"detail-value\">{project.budget ? new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(project.budget): 'N/A'}</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          )}\r\n          </div>\r\n        </main>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default StaffAllProjects;\r\n","// Unified StaffChat wrapper using AreaChat implementation\r\nimport React from 'react';\r\nimport AreaChat from './AreaChat';\r\n\r\nconst StaffChat = () => <AreaChat baseSegment=\"staff\" />;\r\n\r\nexport default StaffChat;\r\n"],"names":["StaffCurrentProject","_jsx","ProjectView","role","useUnifiedHeader","customHeader","AppHeader","roleSegment","StaffAllProjects","filter","setFilter","useState","viewMode","setViewMode","searchTerm","setSearchTerm","sortBy","setSortBy","sortOrder","setSortOrder","projects","setProjects","allProjects","setAllProjects","showAll","setShowAll","loading","setLoading","error","setError","navigate","useNavigate","user","useMemo","JSON","parse","localStorage","getItem","_unused","staffId","_id","useEffect","cancelled","mineRes","allRes","Promise","all","api","get","concat","Array","isArray","data","e","sourceProjects","displayedProjects","project","status","_project$projectName","_project$location","_project$location$nam","_project$projectmanag","_project$projectmanag2","_project$contractor","searchLower","toLowerCase","projectName","includes","location","name","projectmanager","contractor","sort","a","b","_a$location","_b$location","_a$projectmanager","_b$projectmanager","aValue","bValue","Date","startDate","getStatusColor","className","children","_jsxs","overrideNav","to","label","icon","FaCalendarAlt","match","FaClock","FaProjectDiagram","style","display","gap","minWidth","onClick","s","FaSearch","type","placeholder","value","onChange","target","length","p","FaChevronUp","FaChevronDown","FaTh","FaList","window","reload","map","_project$location2","_project$projectmanag3","src","photos","alt","backgroundColor","FaCheckCircle","FaMapMarkerAlt","FaUserTie","FaBuilding","endDate","toLocaleDateString","FaUsersIcon","manpower","budget","FaMoneyBillWave","Intl","NumberFormat","currency","format","StaffChat","AreaChat","baseSegment"],"sourceRoot":""}