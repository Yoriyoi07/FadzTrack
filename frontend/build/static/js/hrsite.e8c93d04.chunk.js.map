{"version":3,"file":"static/js/hrsite.e8c93d04.chunk.js","mappings":"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","sources":["components/hrSite/HrSiteAllProjects.js","components/chats/HrSiteChat.js","components/hrSite/HrSiteCurrentProject.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../../api/axiosInstance';\r\nimport AppHeader from '../layout/AppHeader';\r\nimport '../style/hr_style/HrSite_Dash.css';\r\nimport '../style/am_style/Area_Projects.css';\r\n\r\n// React Icons\r\nimport { \r\n  FaTachometerAlt, \r\n  FaComments, \r\n  FaProjectDiagram, \r\n  FaClipboardList,\r\n  FaMapMarkerAlt,\r\n  FaUserTie,\r\n  FaBuilding,\r\n  FaCalendarAlt,\r\n  FaUsers as FaUsersIcon,\r\n  FaMoneyBillWave,\r\n  FaCheckCircle,\r\n  FaClock,\r\n  FaFilter,\r\n  FaTh,\r\n  FaList,\r\n  FaSearch,\r\n  FaChevronDown,\r\n  FaChevronUp\r\n} from 'react-icons/fa';\r\n\r\nconst HrSiteAllProjects = () => {\r\n  const [filter, setFilter] = useState('all');\r\n  const [viewMode, setViewMode] = useState('grid');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const user = useMemo(()=> { try { return JSON.parse(localStorage.getItem('user')||'{}'); } catch { return {}; } }, []);\r\n  const hrSiteId = user?._id;\r\n\r\n  // Fetch projects assigned to this HR-Site user\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      try {\r\n    setLoading(true);\r\n        // Get projects where this HR-Site user is assigned\r\n  const response = await api.get(`/projects/assigned/allroles/${hrSiteId}`);\r\n        setProjects(response.data || []);\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error('Failed to fetch projects:', error);\r\n        setError('Failed to load projects. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    if (hrSiteId) {\r\n      fetchProjects();\r\n    }\r\n  }, [hrSiteId]);\r\n\r\n  // Apply filters and search\r\n  const displayedProjects = projects\r\n    .filter(project => {\r\n      // Status filter\r\n      if (filter === 'completed') {\r\n        return project.status === 'Completed';\r\n      }\r\n      if (filter === 'ongoing') {\r\n        return project.status === 'Ongoing' || project.status === 'On Going';\r\n      }\r\n      if (filter === 'pending') {\r\n        return project.status === 'Pending' || project.status === 'Not Started';\r\n      }\r\n      \r\n      // Search filter\r\n      if (searchTerm) {\r\n        const searchLower = searchTerm.toLowerCase();\r\n        return (\r\n          project.projectName?.toLowerCase().includes(searchLower) ||\r\n          project.location?.name?.toLowerCase().includes(searchLower) ||\r\n          project.projectmanager?.name?.toLowerCase().includes(searchLower) ||\r\n          project.contractor?.toLowerCase().includes(searchLower)\r\n        );\r\n      }\r\n      \r\n      return true;\r\n    })\r\n    .sort((a, b) => {\r\n      let aValue, bValue;\r\n      \r\n      switch (sortBy) {\r\n        case 'name':\r\n          aValue = a.projectName || '';\r\n          bValue = b.projectName || '';\r\n          break;\r\n        case 'location':\r\n          aValue = a.location?.name || '';\r\n          bValue = b.location?.name || '';\r\n          break;\r\n        case 'manager':\r\n          aValue = a.projectmanager?.name || '';\r\n          bValue = b.projectmanager?.name || '';\r\n          break;\r\n        case 'status':\r\n          aValue = a.status || '';\r\n          bValue = b.status || '';\r\n          break;\r\n        case 'startDate':\r\n          aValue = new Date(a.startDate || 0);\r\n          bValue = new Date(b.startDate || 0);\r\n          break;\r\n        default:\r\n          aValue = a.projectName || '';\r\n          bValue = b.projectName || '';\r\n      }\r\n      \r\n      if (sortOrder === 'asc') {\r\n        return aValue > bValue ? 1 : -1;\r\n      } else {\r\n        return aValue < bValue ? 1 : -1;\r\n      }\r\n    });\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'completed':\r\n        return '#10B981';\r\n      case 'ongoing':\r\n      case 'on going':\r\n        return '#3B82F6';\r\n      case 'pending':\r\n      case 'not started':\r\n        return '#F59E0B';\r\n      default:\r\n        return '#6B7280';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'completed':\r\n        return <FaCheckCircle />;\r\n      case 'ongoing':\r\n      case 'on going':\r\n        return <FaClock />;\r\n      case 'pending':\r\n      case 'not started':\r\n        return <FaClock />;\r\n      default:\r\n        return <FaClock />;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading projects...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <AppHeader roleSegment=\"hrsite\" />\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"projects-container\">\r\n          {/* Page Header */}\r\n          <div className=\"page-header\">\r\n            <div className=\"page-title-section\">\r\n              <h1 className=\"page-title\">My Projects</h1>\r\n              <p className=\"page-subtitle\">View all projects you are assigned to</p>\r\n                  </div>\r\n                </div>\r\n\r\n          {/* Filters and Controls */}\r\n          <div className=\"projects-controls\">\r\n            <div className=\"controls-left\">\r\n              {/* Search */}\r\n              <div className=\"search-container\">\r\n                <FaSearch className=\"search-icon\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search projects...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"search-input\"\r\n                />\r\n              </div>\r\n\r\n              {/* Status Filter */}\r\n              <div className=\"filter-group\">\r\n                <button\r\n                  className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\r\n                  onClick={() => setFilter('all')}\r\n                >\r\n                  All ({projects.length})\r\n                </button>\r\n                <button\r\n                  className={`filter-btn ${filter === 'ongoing' ? 'active' : ''}`}\r\n                  onClick={() => setFilter('ongoing')}\r\n                >\r\n                  Ongoing ({projects.filter(p => p.status === 'Ongoing' || p.status === 'On Going').length})\r\n                </button>\r\n                <button\r\n                  className={`filter-btn ${filter === 'completed' ? 'active' : ''}`}\r\n                  onClick={() => setFilter('completed')}\r\n                >\r\n                  Completed ({projects.filter(p => p.status === 'Completed').length})\r\n                </button>\r\n                <button\r\n                  className={`filter-btn ${filter === 'pending' ? 'active' : ''}`}\r\n                  onClick={() => setFilter('pending')}\r\n                >\r\n                  Pending ({projects.filter(p => p.status === 'Pending' || p.status === 'Not Started').length})\r\n                </button>\r\n            </div>\r\n          </div>\r\n\r\n            <div className=\"controls-right\">\r\n              {/* Sort */}\r\n              <div className=\"sort-container\">\r\n                <select\r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value)}\r\n                  className=\"sort-select\"\r\n                >\r\n                  <option value=\"name\">Sort by Name</option>\r\n                  <option value=\"location\">Sort by Location</option>\r\n                  <option value=\"manager\">Sort by Manager</option>\r\n                  <option value=\"status\">Sort by Status</option>\r\n                  <option value=\"startDate\">Sort by Start Date</option>\r\n                </select>\r\n                <button\r\n                  className=\"sort-order-btn\"\r\n                  onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\r\n                >\r\n                  {sortOrder === 'asc' ? <FaChevronUp /> : <FaChevronDown />}\r\n                </button>\r\n            </div>\r\n\r\n              {/* View Mode */}\r\n              <div className=\"view-mode-container\">\r\n              <button\r\n                  className={`view-mode-btn ${viewMode === 'grid' ? 'active' : ''}`}\r\n                  onClick={() => setViewMode('grid')}\r\n              >\r\n                  <FaTh />\r\n              </button>\r\n              <button\r\n                  className={`view-mode-btn ${viewMode === 'list' ? 'active' : ''}`}\r\n                  onClick={() => setViewMode('list')}\r\n                >\r\n                  <FaList />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error State */}\r\n          {error && (\r\n            <div className=\"error-state\">\r\n              <FaClock />\r\n              <span>{error}</span>\r\n              <button onClick={() => window.location.reload()} className=\"retry-btn\">\r\n                Try Again\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Projects Grid/List */}\r\n          {!error && (\r\n            <div className={`projects-display ${viewMode}`}>\r\n              {displayedProjects.length === 0 ? (\r\n                <div className=\"empty-state\">\r\n                  <FaProjectDiagram />\r\n                  <h3>No projects found</h3>\r\n                  <p>\r\n                    {searchTerm || filter !== 'all' \r\n                      ? 'Try adjusting your search or filters'\r\n                      : 'You are not assigned to any projects yet'\r\n                    }\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                displayedProjects.map(project => (\r\n                  <div\r\n                    key={project._id}\r\n                    className=\"project-card\"\r\n                    onClick={() => navigate(`/hr-site/current-project`)}\r\n                  >\r\n                    {/* Project Image */}\r\n                    <div className=\"project-image-container\">\r\n                      <img\r\n                        src={project.photos && project.photos.length > 0\r\n                          ? project.photos[0]\r\n                          : 'https://placehold.co/400x250?text=No+Photo'}\r\n                        alt={project.projectName}\r\n                        className=\"project-image\"\r\n                      />\r\n                      <div className=\"project-status-badge\" style={{ backgroundColor: getStatusColor(project.status) }}>\r\n                        {getStatusIcon(project.status)}\r\n                        <span>{project.status || 'Unknown'}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Project Content */}\r\n                    <div className=\"project-content\">\r\n                      <div className=\"project-header\">\r\n                        <h3 className=\"project-name\">{project.projectName}</h3>\r\n                        <div className=\"project-location\">\r\n                          <FaMapMarkerAlt />\r\n                          <span>{project.location?.name || 'No Location'}</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"project-details\">\r\n                        <div className=\"detail-item\">\r\n                          <FaUserTie className=\"detail-icon\" />\r\n                          <div className=\"detail-content\">\r\n                            <span className=\"detail-label\">Project Manager</span>\r\n                            <span className=\"detail-value\">{project.projectmanager?.name || 'Not Assigned'}</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"detail-item\">\r\n                          <FaBuilding className=\"detail-icon\" />\r\n                          <div className=\"detail-content\">\r\n                            <span className=\"detail-label\">Contractor</span>\r\n                            <span className=\"detail-value\">{project.contractor || 'Not Assigned'}</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"detail-item\">\r\n                          <FaCalendarAlt className=\"detail-icon\" />\r\n                          <div className=\"detail-content\">\r\n                            <span className=\"detail-label\">Timeline</span>\r\n                            <span className=\"detail-value\">\r\n                              {project.startDate && project.endDate\r\n                                ? `${new Date(project.startDate).toLocaleDateString()} - ${new Date(project.endDate).toLocaleDateString()}`\r\n                                : 'Not Set'\r\n                              }\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"detail-item\">\r\n                          <FaUsersIcon className=\"detail-icon\" />\r\n                          <div className=\"detail-content\">\r\n                            <span className=\"detail-label\">Manpower</span>\r\n                            <span className=\"detail-value\">\r\n                              {Array.isArray(project.manpower) && project.manpower.length > 0\r\n                                ? `${project.manpower.length} assigned`\r\n                                : 'No manpower assigned'\r\n                              }\r\n                            </span>\r\n                          </div>\r\n            </div>\r\n\r\n                        {project.budget && (\r\n                          <div className=\"detail-item\">\r\n                            <FaMoneyBillWave className=\"detail-icon\" />\r\n                            <div className=\"detail-content\">\r\n                              <span className=\"detail-label\">Budget</span>\r\n                              <span className=\"detail-value\">{project.budget}</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n            </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          )}\r\n          </div>\r\n        </main>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default HrSiteAllProjects;\r\n","// Unified HrSiteChat wrapper using AreaChat implementation\r\nimport React from 'react';\r\nimport AreaChat from './AreaChat';\r\n\r\nconst HrSiteChat = () => <AreaChat baseSegment=\"hr-site\" />;\r\n\r\nexport default HrSiteChat;\r\n","import React from 'react';\r\nimport AppHeader from '../layout/AppHeader';\r\nimport ProjectView from '../project/ProjectView';\r\n\r\nexport default function HrSiteCurrentProject(){\r\n  return (\r\n    <ProjectView\r\n      role=\"hrsite\"\r\n      useUnifiedHeader={true}\r\n      customHeader={<AppHeader roleSegment=\"hrsite\" />}\r\n    />\r\n  );\r\n}\r\n"],"names":["HrSiteAllProjects","filter","setFilter","useState","viewMode","setViewMode","searchTerm","setSearchTerm","sortBy","setSortBy","sortOrder","setSortOrder","projects","setProjects","loading","setLoading","error","setError","navigate","useNavigate","user","useMemo","JSON","parse","localStorage","getItem","_unused","hrSiteId","_id","useEffect","async","response","api","get","concat","data","console","fetchProjects","displayedProjects","project","status","_project$projectName","_project$location","_project$location$nam","_project$projectmanag","_project$projectmanag2","_project$contractor","searchLower","toLowerCase","projectName","includes","location","name","projectmanager","contractor","sort","a","b","_a$location","_b$location","_a$projectmanager","_b$projectmanager","aValue","bValue","Date","startDate","getStatusColor","_jsx","className","children","_jsxs","AppHeader","roleSegment","FaSearch","type","placeholder","value","onChange","e","target","onClick","length","p","FaChevronUp","FaChevronDown","FaTh","FaList","FaClock","window","reload","FaProjectDiagram","map","_project$location2","_project$projectmanag3","src","photos","alt","style","backgroundColor","FaCheckCircle","FaMapMarkerAlt","FaUserTie","FaBuilding","FaCalendarAlt","endDate","toLocaleDateString","FaUsersIcon","Array","isArray","manpower","budget","FaMoneyBillWave","HrSiteChat","AreaChat","baseSegment","HrSiteCurrentProject","ProjectView","role","useUnifiedHeader","customHeader"],"sourceRoot":""}