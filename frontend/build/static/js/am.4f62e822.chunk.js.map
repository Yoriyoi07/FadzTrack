{"version":3,"file":"static/js/am.4f62e822.chunk.js","mappings":"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","sources":["components/am/AreaDash.js","components/am/AmViewProject.js","../node_modules/recharts/es6/chart/BarChart.js","components/am/ProgressReport.js","components/am/AreaManpowerReqDetails.js","components/am/AmMatRequestList.js","components/am/AreaManpowerList.js","components/am/AreaAddproj.js","components/am/AreaProjArea.js","components/am/AmMaterialHeader.js","components/am/AmMatRequestDetail.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../style/am_style/Area_Dash.css';\r\nimport api from '../../api/axiosInstance';\r\nimport AppHeader from '../layout/AppHeader';\r\n\r\n// React Icons\r\nimport { FaCalendarAlt, FaCheckCircle, FaExclamationTriangle, FaArrowRight, FaChevronDown, FaChevronUp, FaBuilding, FaMapMarkerAlt, FaUserTie, FaChevronRight, FaChevronLeft, FaUsers, FaProjectDiagram, FaBoxes, FaChartBar, FaBars, FaHardHat, FaHammer, FaTruck, FaIndustry } from 'react-icons/fa';\r\n\r\nconst AreaDash = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // --- Stable user (no re-parsing every render) ---\r\n  const userRef = useRef(null);\r\n  if (userRef.current === null) {\r\n    const raw = localStorage.getItem('user');\r\n    userRef.current = raw ? JSON.parse(raw) : null;\r\n  }\r\n  const user = userRef.current;\r\n  const userId = user?._id ?? null;\r\n\r\n  const [userName, setUserName] = useState(user?.name || '');\r\n  const [userRole, setUserRole] = useState(user?.role || '');\r\n\r\n  // Header state\r\n  // Header (legacy states removed with unified header)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  // Data state\r\n  const [projects, setProjects] = useState([]);\r\n  const [allProjects, setAllProjects] = useState([]);\r\n  const [enrichedAllProjects, setEnrichedAllProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [materialRequests, setMaterialRequests] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [requestsError, setRequestsError] = useState(null);\r\n  const [assignedLocations, setAssignedLocations] = useState([]);\r\n  const [expandedLocations, setExpandedLocations] = useState({});\r\n\r\n  // Metrics data\r\n  const [metrics, setMetrics] = useState({\r\n    totalProjects: 0,\r\n    activeProjects: 0,\r\n    completedProjects: 0,\r\n    pendingRequests: 0,\r\n    totalEngineers: 0,\r\n    averageProgress: 0\r\n  });\r\n  // Cache of PIC contributions per project to avoid double fetching\r\n  const [projectContribs, setProjectContribs] = useState({}); // { projectId: contributionsData }\r\n\r\n  // ---------- Data load (production-safe, won't spam) ----------\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    let isActive = true; // avoid setState after unmount\r\n    const controller = new AbortController();\r\n\r\n    const fetchAssignedLocations = async () => {\r\n      try {\r\n        const { data } = await api.get(`/users/${userId}/locations`, {\r\n          signal: controller.signal,\r\n        });\r\n        return Array.isArray(data) ? data : [];\r\n      } catch {\r\n        return [];\r\n      }\r\n    };\r\n\r\n    const fetchProjects = async (locations) => {\r\n        try {\r\n          setMetricsLoading(true);\r\n          const { data: projectsData } = await api.get('/projects', { signal: controller.signal });\r\n          if (!isActive) return;\r\n          setAllProjects(projectsData);\r\n          const userProjects = projectsData.filter(project =>\r\n            locations.some(loc => loc._id === (project.location?._id || project.location))\r\n          );\r\n\r\n          const contribMap = {};\r\n\r\n          const projectsWithProgress = await Promise.all(\r\n            userProjects.map(async (project) => {\r\n              try {\r\n                const totalPics = Array.isArray(project.pic) ? project.pic.length : 0;\r\n                let avg = 0;\r\n                let latestDate = null;\r\n                let reportingPics = 0;\r\n                let pendingPics = totalPics;\r\n                let picContributions = [];\r\n\r\n                // Primary source: project reports\r\n                try {\r\n                  const { data: repData } = await api.get(`/projects/${project._id}/reports`, { signal: controller.signal });\r\n                  const list = repData?.reports || [];\r\n                  if (list.length) {\r\n                    const sorted = [...list].sort((a,b)=> new Date(b.uploadedAt||0)-new Date(a.uploadedAt||0));\r\n                    latestDate = sorted[0]?.uploadedAt || null;\r\n                    const byUploader = new Map();\r\n                    for (const r of sorted) {\r\n                      const key = r.uploadedBy || r.uploadedByName || r._id;\r\n                      if (!byUploader.has(key)) byUploader.set(key, r); // keep latest per uploader\r\n                    }\r\n                    const distinct = [...byUploader.values()];\r\n                    const percents = distinct\r\n                      .map(r => {\r\n                        const ai = r?.ai || {};\r\n                        const raw = Number(ai.pic_contribution_percent_raw);\r\n                        const legacy = Number(ai.pic_contribution_percent);\r\n                        if (isFinite(raw) && raw >= 0) return raw;\r\n                        if (isFinite(legacy) && legacy >= 0) return legacy;\r\n                        return NaN;\r\n                      })\r\n                      .filter(v => isFinite(v) && v >= 0);\r\n                    if (percents.length) {\r\n                      // Headcount average: divide sum of reported contributions by total assigned PICs (missing = 0)\r\n                      const sum = percents.reduce((s,v)=>s+v,0);\r\n                      avg = totalPics > 0 ? (sum / totalPics) : 0;\r\n                    }\r\n                    reportingPics = distinct.length;\r\n                    pendingPics = totalPics > 0 ? Math.max(0, totalPics - reportingPics) : 0;\r\n                    picContributions = distinct.map(r => {\r\n                      const ai = r?.ai || {};\r\n                      const raw = Number(ai.pic_contribution_percent_raw);\r\n                      const legacy = Number(ai.pic_contribution_percent);\r\n                      const chosen = isFinite(raw) && raw >= 0 ? raw : (isFinite(legacy) && legacy >= 0 ? legacy : 0);\r\n                      return {\r\n                        picId: r.uploadedBy || r._id,\r\n                        picName: r.uploadedByName || 'Unknown',\r\n                        contribution: Math.round(chosen),\r\n                        hasReport: true,\r\n                        lastReportDate: r.uploadedAt || null\r\n                      };\r\n                    });\r\n                  }\r\n                } catch { /* ignore reports errors */ }\r\n\r\n                // Fallback: aggregated daily-report contributions if still zero\r\n                if (avg === 0) {\r\n                  try {\r\n                    const { data: contrib } = await api.get(`/daily-reports/project/${project._id}/pic-contributions`, { signal: controller.signal });\r\n                    if (contrib) {\r\n                      if (!latestDate) {\r\n                        const ld = (contrib.picContributions||[])\r\n                          .filter(p=>p.lastReportDate)\r\n                          .map(p=> new Date(p.lastReportDate))\r\n                          .sort((a,b)=> b-a)[0];\r\n                        latestDate = ld ? ld.toISOString() : latestDate;\r\n                      }\r\n                      if (contrib.averageContribution) {\r\n                        // averageContribution already represents headcount average from backend (missing PICs = 0)\r\n                        avg = contrib.averageContribution;\r\n                      }\r\n                      if (!reportingPics) reportingPics = contrib.reportingPics || 0;\r\n                      if (totalPics && pendingPics === totalPics) pendingPics = contrib.pendingPics ?? pendingPics;\r\n                      if (!picContributions.length) picContributions = (contrib.picContributions || []).map(p => ({\r\n                        picId: p.picId,\r\n                        picName: p.picName,\r\n                        contribution: Math.round(p.contribution || 0),\r\n                        hasReport: !!p.lastReportDate,\r\n                        lastReportDate: p.lastReportDate || null\r\n                      }));\r\n                    }\r\n                  } catch { /* ignore fallback errors */ }\r\n                }\r\n\r\n                const finalPercent = Math.min(100, Math.max(0, Math.round(avg)));\r\n                contribMap[project._id] = {\r\n                  averageContribution: finalPercent,\r\n                  totalPics,\r\n                  reportingPics,\r\n                  pendingPics,\r\n                  picContributions\r\n                };\r\n                return {\r\n                  ...project,\r\n                  progress: [{ name: 'Completed', value: finalPercent }],\r\n                  latestDate,\r\n                };\r\n              } catch (e) {\r\n                return { ...project, progress: [{ name: 'Completed', value: 0 }], latestDate: null };\r\n              }\r\n            })\r\n          );\r\n\r\n          if (!isActive) return;\r\n          setProjectContribs(contribMap);\r\n          setProjects(projectsWithProgress);\r\n        } catch (error) {\r\n          console.error('Error fetching projects:', error);\r\n        } finally {\r\n          if (isActive) {\r\n            setMetricsLoading(false);\r\n            setLoading(false);\r\n          }\r\n        }\r\n    };\r\n\r\n    const normalizeStatus = (s='') => s.replace(/\\s+/g,' ').trim().toUpperCase();\r\n\r\n    const fetchRequests = async (locations) => {\r\n      try {\r\n        const { data } = await api.get('/requests', { signal: controller.signal });\r\n        if (!isActive) return;\r\n        setMaterialRequests(Array.isArray(data)? data : []);\r\n        setRequestsError(null);\r\n      } catch (error) {\r\n        if (!isActive) return;\r\n        if (error?.response?.status === 401) {\r\n          setRequestsError('Session expired. Please log in again.');\r\n        } else if (error.name !== 'CanceledError') {\r\n          setRequestsError('Error loading material requests');\r\n        }\r\n      }\r\n    };\r\n\r\n    (async () => {\r\n      const locations = await fetchAssignedLocations();\r\n      if (!isActive) return;\r\n\r\n      setAssignedLocations(locations); // reflect in UI\r\n      await Promise.all([fetchProjects(locations), fetchRequests(locations)]);\r\n    })();\r\n\r\n    return () => {\r\n      isActive = false;\r\n      controller.abort();\r\n    };\r\n  }, [navigate, userId]);\r\n\r\n  // Derive enriched projects when inputs change\r\n  useEffect(() => {\r\n  if (allProjects.length) {\r\n      // Normalize helper to extract comparable location id\r\n      const extractLocId = (p) => {\r\n        if (!p) return null;\r\n        const loc = p.location;\r\n        if (!loc) return null;\r\n        if (typeof loc === 'string') return loc;\r\n        if (typeof loc === 'object') return loc._id || loc.id || null;\r\n        return null;\r\n      };\r\n\r\n      // Filter: owned by this area manager (areamanager) and not soft-deleted\r\n      const filtered = allProjects.filter(project => {\r\n        const amId = (typeof project.areamanager === 'object') ? (project.areamanager?._id || project.areamanager?.id) : project.areamanager;\r\n        if(!amId) return false;\r\n        if(String(amId) !== String(userId)) return false;\r\n        if(project.isDeleted) return false;\r\n        return true;\r\n      });\r\n\r\n      // Map to enriched objects (preserve multiple projects even if identical metadata)\r\n      const enriched = filtered.map(project => {\r\n        const locId = extractLocId(project);\r\n        const loc = assignedLocations.find(l => l._id === locId) || null;\r\n        return {\r\n          ...project,\r\n          location: loc ? { ...loc } : { name: 'Unknown Location', region: '' },\r\n          name: project.projectName,\r\n          engineer: project.projectmanager?.name || 'Not Assigned',\r\n        };\r\n      });\r\n\r\n      setEnrichedAllProjects(enriched);\r\n    }\r\n  }, [allProjects, userId]);\r\n\r\n  // Listen for global projectReportsUpdated events to refresh a single project's contribution snapshot\r\n  useEffect(() => {\r\n    const handler = (e) => {\r\n      const projectId = e?.detail?.projectId;\r\n      if(!projectId) return;\r\n      (async () => {\r\n        try {\r\n          const { data: repData } = await api.get(`/projects/${projectId}/reports`);\r\n          const list = repData?.reports || [];\r\n          if(!list.length) return;\r\n          const sorted = [...list].sort((a,b)=> new Date(b.uploadedAt||0)-new Date(a.uploadedAt||0));\r\n          const byUploader = new Map();\r\n          for(const r of sorted){ const key=r.uploadedBy||r.uploadedByName||r._id; if(!byUploader.has(key)) byUploader.set(key,r); }\r\n          const distinct=[...byUploader.values()];\r\n          const percents = distinct.map(r=>{ const ai=r.ai||{}; const raw=Number(ai.pic_contribution_percent_raw); const legacy=Number(ai.pic_contribution_percent); if(isFinite(raw)&&raw>=0) return raw; if(isFinite(legacy)&&legacy>=0) return legacy; return NaN; }).filter(v=> isFinite(v)&&v>=0);\r\n          let avg=0; if(percents.length) avg=percents.reduce((s,v)=> s+v,0)/percents.length;\r\n          const projectObj = allProjects.find(p=> String(p._id)===String(projectId));\r\n          const totalPics = Array.isArray(projectObj?.pic)? projectObj.pic.length : 0;\r\n          const reportingPics = distinct.length;\r\n          const pendingPics = totalPics>0? Math.max(0,totalPics-reportingPics):0;\r\n          const picContributions = distinct.map(r=>{ const ai=r.ai||{}; const raw=Number(ai.pic_contribution_percent_raw); const legacy=Number(ai.pic_contribution_percent); const chosen=isFinite(raw)&&raw>=0? raw : (isFinite(legacy)&&legacy>=0? legacy : 0); return { picId:r.uploadedBy||r._id, picName:r.uploadedByName||'Unknown', contribution:Math.round(chosen), hasReport:true, lastReportDate:r.uploadedAt||null }; });\r\n          setProjectContribs(prev => ({ ...prev, [projectId]: { averageContribution: Math.min(100,Math.max(0,Math.round(avg))), totalPics, reportingPics, pendingPics, picContributions } }));\r\n        } catch {}\r\n      })();\r\n    };\r\n    window.addEventListener('projectReportsUpdated', handler);\r\n    return () => window.removeEventListener('projectReportsUpdated', handler);\r\n  }, [allProjects]);\r\n\r\n  // Calculate metrics\r\n  useEffect(() => {\r\n    if (enrichedAllProjects.length > 0) {\r\n      // --- Unified status normalization for reliable metrics ---\r\n      // We treat any variation of:\r\n      //   \"ongoing\", \"on-going\", \"on going\", \"in progress\" and \"active\" as Active\r\n      // We treat any variation containing: \"completed\", \"complete\", \"finished\", \"done\" as Completed\r\n      // Everything else (including blank / undefined) is neither counted as Active nor Completed.\r\n      const normalizeStatus = (s = '') => s\r\n        .toString()\r\n        .replace(/[\\s_-]+/g, ' ')    // collapse spaces, underscores, hyphens\r\n        .trim()\r\n        .toLowerCase();\r\n\r\n      // Dedupe projects just in case duplicates slipped in during enrichment\r\n      // No dedupe: assume backend returns distinct _id per project; removing dedupe prevents accidental undercount\r\n      const uniqueProjects = enrichedAllProjects; // kept variable name for clarity\r\n      const totalProjects = enrichedAllProjects.length;\r\n\r\n      let activeProjects = 0;\r\n      let completedProjects = 0;\r\n      for (const proj of uniqueProjects) {\r\n        const st = normalizeStatus(proj.status || '');\r\n        if (!st) continue;\r\n        if (/(completed|complete|finished|done)/.test(st)) {\r\n          completedProjects += 1;\r\n          continue; // completed shouldn't be double-counted as active\r\n        }\r\n        if (/(ongoing|on going|in progress)/.test(st) || st === 'active') {\r\n          activeProjects += 1;\r\n        }\r\n      }\r\n      const totalEngineers = new Set(enrichedAllProjects.map(p => p.engineer)).size;\r\n      const averageProgress = projects.length > 0 \r\n        ? projects.reduce((acc, p) => {\r\n            const completed = p.progress.find(prog => prog.name === 'Completed');\r\n            return acc + (completed ? completed.value : 0);\r\n          }, 0) / projects.length\r\n        : 0;\r\n\r\n      setMetrics({\r\n        totalProjects,\r\n        activeProjects,\r\n        completedProjects,\r\n        pendingRequests: pendingRequests.length,\r\n        totalEngineers,\r\n        averageProgress: Math.round(averageProgress)\r\n      });\r\n    }\r\n  }, [enrichedAllProjects, pendingRequests, projects]);\r\n\r\n  // Recalculate pending requests whenever material requests or assigned locations change\r\n  useEffect(()=>{\r\n    const norm = (s='')=> s.replace(/\\s+/g,' ').trim().toUpperCase();\r\n    if(!materialRequests.length){ setPendingRequests([]); return; }\r\n    const pending = materialRequests.filter(r=>{\r\n      if(!r || !r.project) return false;\r\n      const status = norm(r.status||'');\r\n      const isPending = status.includes('PENDING AM') || status.includes('PENDING AREA MANAGER');\r\n      if(!isPending) return false;\r\n      // Try direct location on request.project\r\n      let locId = r.project?.location?._id || (typeof r.project?.location === 'string' ? r.project.location : null);\r\n      if(!locId){\r\n        // fallback: find project in enriched list\r\n        const pid = r.project._id || r.project.id || r.project; // handle raw id\r\n        const proj = enrichedAllProjects.find(p=> p._id === pid);\r\n        if(proj) locId = proj.location?._id || proj.location; \r\n      }\r\n      if(!locId) return false; // cannot verify assignment\r\n      return assignedLocations.some(l=> l._id === locId);\r\n    });\r\n    setPendingRequests(pending);\r\n  },[materialRequests, assignedLocations, enrichedAllProjects]);\r\n\r\n  // Unified header handles logout & profile menu\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n  };\r\n\r\n  const projectsByLocation = enrichedAllProjects.reduce((acc, project) => {\r\n    const locationId = project.location?._id || 'unknown';\r\n    if (!acc[locationId]) {\r\n      acc[locationId] = {\r\n        name: project.location?.name || 'Unknown Location',\r\n        region: project.location?.region || '',\r\n        projects: [],\r\n      };\r\n    }\r\n    acc[locationId].projects.push(project);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Project metrics reuse fetched contributions\r\n  const [projectMetrics, setProjectMetrics] = useState([]);\r\n  const [metricsLoading, setMetricsLoading] = useState(false); // loading tied to fetchProjects\r\n  // (Removed CEO-style filter controls to restore original horizontal layout)\r\n  useEffect(()=>{\r\n    if(!enrichedAllProjects.length){ setProjectMetrics([]); return; }\r\n  // Exclude completed (or equivalent) projects from the progress carousel/card\r\n  const isCompleted = (status='') => /completed|complete|finished|done/i.test(status.replace(/[\\s_-]+/g,' ').trim());\r\n  const workingSet = enrichedAllProjects.filter(p => !isCompleted(p.status || ''));\r\n  const metrics = workingSet.map(project => {\r\n      const contrib = projectContribs[project._id];\r\n      if(contrib){\r\n    const avg = (contrib.averageContribution || contrib.fallbackProgress || 0);\r\n        const totalPics = contrib.totalPics || 0;\r\n        const reportingPics = contrib.reportingPics || 0;\r\n        const pendingPics = contrib.pendingPics || 0;\r\n        let status='ontrack';\r\n        if(pendingPics>0 && totalPics>1) status='pending'; else if(avg < 50) status='regressing';\r\n        const latestDate = (contrib.picContributions||[]).filter(p=>p.lastReportDate).map(p=> new Date(p.lastReportDate)).sort((a,b)=> b-a)[0] || null;\r\n        if(latestDate && (Date.now()-latestDate.getTime()) > 3*24*60*60*1000) status='stale';\r\n        const picNames = (contrib.picContributions||[]).map(p=> p.hasReport? p.picName : `${p.picName} (pending)`);\r\n        return { projectId: project._id, projectName: project.name, pm: project.engineer, area: project.location?.name || 'Unknown Area', progress: avg, totalPics, latestDate, status, waitingForAll: pendingPics>0 && totalPics>1, picNames, reportingPics, pendingPics };\r\n      }\r\n      return { projectId: project._id, projectName: project.name, pm: project.engineer, area: project.location?.name || 'Unknown Area', progress:0, totalPics:0, latestDate:null, status:'stale', waitingForAll:false, picNames:[], reportingPics:0, pendingPics:0 };\r\n    });\r\n    metrics.sort((a,b)=>{ if(!a.latestDate && !b.latestDate) return 0; if(!a.latestDate) return 1; if(!b.latestDate) return -1; return new Date(b.latestDate)-new Date(a.latestDate); });\r\n    setProjectMetrics(metrics);\r\n  },[enrichedAllProjects, projectContribs]);\r\n\r\n  // Sample metrics data for charts\r\n  const progressData = [\r\n    { name: 'Completed', value: 65, color: '#10B981' },\r\n    { name: 'In Progress', value: 25, color: '#3B82F6' },\r\n    { name: 'Not Started', value: 10, color: '#EF4444' }\r\n  ];\r\n\r\n  const monthlyProgress = [\r\n    { month: 'Jan', progress: 45 },\r\n    { month: 'Feb', progress: 52 },\r\n    { month: 'Mar', progress: 58 },\r\n    { month: 'Apr', progress: 65 },\r\n    { month: 'May', progress: 72 },\r\n    { month: 'Jun', progress: 78 }\r\n  ];\r\n\r\n  // Timeline status logic function\r\n  const getTimelineStatus = (status, stage) => {\r\n    const statusLower = status?.toLowerCase() || '';\r\n    \r\n    // Check for rejected statuses\r\n    if (statusLower.includes('rejected')) {\r\n      return 'rejected';\r\n    }\r\n    \r\n    switch (stage) {\r\n      case 'placed':\r\n        // Placed should be green (one step behind) when PM is pending\r\n        if (statusLower.includes('pending pm') || statusLower.includes('project manager')) {\r\n          return 'completed one-step-behind'; // Green - one step behind pending\r\n        } else if (statusLower.includes('pending am') || statusLower.includes('area manager') || \r\n                   statusLower.includes('approved') || statusLower.includes('received')) {\r\n          return 'completed'; // Blue - two or more steps behind pending\r\n        }\r\n        return 'completed'; // Default to blue for placed\r\n        \r\n      case 'pm':\r\n        if (statusLower.includes('rejected pm') || statusLower.includes('pm rejected')) {\r\n          return 'rejected';\r\n        } else if (statusLower.includes('pending pm') || statusLower.includes('project manager')) {\r\n          return 'pending'; // Yellow/Orange - pending\r\n        } else if (statusLower.includes('pending am') || statusLower.includes('area manager')) {\r\n          return 'completed one-step-behind'; // Green - one step behind pending\r\n        } else if (statusLower.includes('approved') || statusLower.includes('received')) {\r\n          return 'completed'; // Blue - two or more steps behind pending\r\n        }\r\n        break;\r\n        \r\n      case 'am':\r\n        if (statusLower.includes('rejected am') || statusLower.includes('am rejected')) {\r\n          return 'rejected';\r\n        } else if (statusLower.includes('pending am') || statusLower.includes('area manager')) {\r\n          return 'pending'; // Yellow/Orange - pending\r\n        } else if (statusLower.includes('approved')) {\r\n          return 'completed one-step-behind'; // Green - one step behind final\r\n        } else if (statusLower.includes('received')) {\r\n          return 'completed'; // Blue - final reached\r\n        }\r\n        break;\r\n      \r\n        \r\n      case 'done':\r\n        if (statusLower.includes('received')) {\r\n          return 'completed'; // Blue - completed\r\n        }\r\n        break;\r\n    }\r\n    \r\n    return ''; // Default - no special styling\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading dashboard data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Original layout uses full projectMetrics list directly (no local filtering UI)\r\n\r\n  return (\r\n    <div className=\"am-dashboard dashboard-container\">\r\n      <AppHeader \r\n        roleSegment=\"am\" \r\n        extraLeft={\r\n          <button\r\n            className=\"sidebar-toggle-btn am-header-toggle\"\r\n            onClick={toggleSidebar}\r\n            aria-label={sidebarOpen ? 'Close areas & projects panel' : 'Open areas & projects panel'}\r\n          >\r\n            <FaBars />\r\n          </button>\r\n        }\r\n      />\r\n\r\n      {/* Main Dashboard Content */}\r\n      <main className=\"dashboard-main blueprint-bg\">\r\n\r\n        {/* Areas & Projects Sidebar */}\r\n        <div className={`areas-projects-sidebar ${sidebarOpen ? 'open' : ''}`}>\r\n          <div className=\"sidebar-header\">\r\n            <h3><FaHardHat className=\"hdr-ico\" /> Areas & Projects</h3>\r\n            <button className=\"close-sidebar-btn\" onClick={toggleSidebar}>\r\n              <FaChevronLeft />\r\n            </button>\r\n          </div>\r\n          <div className=\"areas-projects-card\">\r\n            <div className=\"card-header\">\r\n              <button className=\"add-project-btn\" onClick={() => navigate('/am/addproj')}>\r\n                Add Project\r\n          </button>\r\n            </div>\r\n            <div className=\"areas-list\">\r\n            {Object.entries(projectsByLocation).map(([locationId, locationData]) => (\r\n                <div key={locationId} className=\"area-item\">\r\n                  <div className=\"area-header\">\r\n                    <div className=\"area-info\">\r\n                      <FaMapMarkerAlt className=\"area-icon\" />\r\n                      <div>\r\n                        <h4>{locationData.name}</h4>\r\n                        <p>{locationData.region}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"area-stats\">\r\n                      <span className=\"project-count\">{locationData.projects.length} projects</span>\r\n                      <button \r\n                        className=\"expand-btn\"\r\n                        onClick={() => setExpandedLocations(prev => ({ ...prev, [locationId]: !prev[locationId] }))}\r\n                      >\r\n                        {expandedLocations[locationId] ? <FaChevronUp /> : <FaChevronDown />}\r\n                      </button>\r\n                  </div>\r\n                </div>\r\n                {expandedLocations[locationId] && (\r\n                    <div className=\"projects-list\">\r\n                    {locationData.projects.map((project) => (\r\n                        <Link to={`/am/projects/${project._id}`} key={project._id} className=\"project-item\">\r\n                          <FaProjectDiagram className=\"project-icon\" />\r\n                          <div className=\"project-info\">\r\n                            <h5>{project.name}</h5>\r\n                            <p>{project.engineer}</p>\r\n                        </div>\r\n                          <FaArrowRight className=\"arrow-icon\" />\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n        {/* Sidebar Overlay */}\r\n        {sidebarOpen && <div className=\"sidebar-overlay\" onClick={toggleSidebar}></div>}\r\n\r\n        {/* Main Content Area */}\r\n        <div className=\"dashboard-content\">\r\n          {/* Main Content Grid */}\r\n          <div className=\"dashboard-grid\">\r\n            {/* Welcome Card */}\r\n            <div className=\"dashboard-card am-welcome-card\">\r\n              <div className=\"welcome-content\">\r\n                <h2 className=\"welcome-title\">Welcome back, {userName}! 👋</h2>\r\n                <p className=\"welcome-subtitle\">Here's what's happening with your areas today</p>\r\n              </div>\r\n              <div className=\"welcome-stats\">\r\n                <Link to=\"/am/viewproj\" className=\"stat-item stat-link\" aria-label=\"Go to Projects\">\r\n                  <span className=\"stat-number\">{enrichedAllProjects.length}</span>\r\n                  <span className=\"stat-label\">Total Projects</span>\r\n                </Link>\r\n                <Link to=\"/am/viewproj\" className=\"stat-item stat-link\" aria-label=\"Go to Projects\">\r\n                  <span className=\"stat-number\">{assignedLocations.length}</span>\r\n                  <span className=\"stat-label\">Areas Managed</span>\r\n                </Link>\r\n              </div>\r\n              <div className=\"kpi-strip\">\r\n                <Link to=\"/am/matreq\" className=\"kpi\" aria-label=\"Pending material requests\">\r\n                  <div className=\"kpi-ico\"><FaBoxes /></div>\r\n                  <div className=\"kpi-body\">\r\n                    <div className=\"kpi-title\">Pending Requests</div>\r\n                    <div className=\"kpi-value\">{pendingRequests.length}</div>\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/am/viewproj\" className=\"kpi\" aria-label=\"Active projects\">\r\n                  <div className=\"kpi-ico\"><FaProjectDiagram /></div>\r\n                  <div className=\"kpi-body\">\r\n                    <div className=\"kpi-title\">Active Projects</div>\r\n                    <div className=\"kpi-value\">{metrics.activeProjects}</div>\r\n                  </div>\r\n                </Link>\r\n                <Link to=\"/am/viewproj\" className=\"kpi\" aria-label=\"Average progress\">\r\n                  <div className=\"kpi-ico\"><FaChartBar /></div>\r\n                  <div className=\"kpi-body\">\r\n                    <div className=\"kpi-title\">Avg. Progress</div>\r\n                    <div className=\"kpi-value\">{metrics.averageProgress}%</div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n              <div\r\n                className=\"hero-art\"\r\n                aria-hidden=\"true\"\r\n                style={{\r\n                  backgroundImage: `radial-gradient(ellipse at 65% 35%, rgba(255,255,255,0.18), transparent 55%), url(${process.env.PUBLIC_URL || ''}/images/illustration-construction-site.png)`\r\n                }}\r\n              ></div>\r\n            </div>\r\n\r\n            {/* Project Metrics - Restored Original Layout (horizontal scroll, no filters) */}\r\n            <div className=\"dashboard-card project-metrics-card\">\r\n              <div className=\"card-header\">\r\n                <h3><FaChartBar /> Project Progress</h3>\r\n                <span className=\"metrics-subtitle\">Based on latest PIC reports</span>\r\n              </div>\r\n              <div className=\"project-metrics-container\">\r\n                {metricsLoading ? (\r\n                  <div className=\"metrics-loading\">\r\n                    <div className=\"loading-spinner\"></div>\r\n                    <span>Loading project metrics...</span>\r\n                  </div>\r\n                ) : projectMetrics.length === 0 ? (\r\n                  <div className=\"metrics-empty\">\r\n                    <FaChartBar />\r\n                    <span>No project metrics available</span>\r\n                    <p>Reports need to be submitted to see progress</p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"project-metrics-scroll\">\r\n                    {projectMetrics.map((metric) => (\r\n                      <Link\r\n                        to={`/am/projects/${metric.projectId}`}\r\n                        key={metric.projectId}\r\n                        className=\"project-metric-item project-metric-link\"\r\n                        style={{ textDecoration:'none' }}\r\n                        aria-label={`View project ${metric.projectName}`}\r\n                      >\r\n                        <div className=\"metric-header\">\r\n                          <div className=\"metric-project-info\">\r\n                            <h4 className=\"metric-project-name\">{metric.projectName}</h4>\r\n                            <p className=\"metric-project-details\">\r\n                              <span className=\"metric-pm\">{metric.pm}</span>\r\n                              <span className=\"metric-area\">{metric.area}</span>\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"metric-progress-circle\">\r\n                            <div className=\"progress-ring\">\r\n                              <svg width=\"60\" height=\"60\">\r\n                                <circle\r\n                                  cx=\"30\"\r\n                                  cy=\"30\"\r\n                                  r=\"25\"\r\n                                  stroke=\"#e2e8f0\"\r\n                                  strokeWidth=\"4\"\r\n                                  fill=\"transparent\"\r\n                                />\r\n                                <circle\r\n                                  cx=\"30\"\r\n                                  cy=\"30\"\r\n                                  r=\"25\"\r\n                                  stroke={metric.progress >= 80 ? '#10B981' : metric.progress >= 50 ? '#3B82F6' : '#F59E0B'}\r\n                                  strokeWidth=\"4\"\r\n                                  fill=\"transparent\"\r\n                                  strokeDasharray={`${2 * Math.PI * 25}`}\r\n                                  strokeDashoffset={`${2 * Math.PI * 25 * (1 - metric.progress / 100)}`}\r\n                                  strokeLinecap=\"round\"\r\n                                  transform=\"rotate(-90 30 30)\"\r\n                                />\r\n                              </svg>\r\n                              <div className=\"progress-text\">\r\n                                <span className=\"progress-percentage\">{metric.progress}%</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"metric-footer\">\r\n                          <div className=\"metric-stats\">\r\n                            <span className=\"metric-stat\">\r\n                              <FaUsers />\r\n                              {metric.totalPics} PICs\r\n                            </span>\r\n                            <span className=\"metric-stat\">\r\n                              <FaCalendarAlt />\r\n                              {metric.latestDate ? new Date(metric.latestDate).toLocaleDateString() : '\\u2014'}\r\n                            </span>\r\n                          </div>\r\n                          {/* Professional metric badges (no bar graphs) */}\r\n                          <div className=\"metric-badges\" style={{marginTop:8, display:'grid', gridTemplateColumns:'repeat(auto-fit,minmax(90px,1fr))', gap:6, fontSize:11}}>\r\n                            <div style={{background:'#f1f5f9',padding:'6px 8px',borderRadius:6,display:'flex',flexDirection:'column',gap:2}}>\r\n                              <span style={{opacity:.6}}>Progress</span>\r\n                              <strong>{metric.progress}%</strong>\r\n                            </div>\r\n                            <div style={{background:'#f1f5f9',padding:'6px 8px',borderRadius:6,display:'flex',flexDirection:'column',gap:2}}>\r\n                              <span style={{opacity:.6}}>Reported</span>\r\n                              <strong>{metric.reportingPics}/{metric.totalPics||0}</strong>\r\n                            </div>\r\n                            <div style={{background:'#f1f5f9',padding:'6px 8px',borderRadius:6,display:'flex',flexDirection:'column',gap:2}}>\r\n                              <span style={{opacity:.6}}>Pending PICs</span>\r\n                              <strong>{metric.pendingPics}</strong>\r\n                            </div>\r\n                            <div style={{\r\n                              background: (() => {\r\n                                const status = metric.waitingForAll ? 'Waiting' : metric.status;\r\n                                switch(status?.toLowerCase()) {\r\n                                  case 'completed':\r\n                                  case 'done':\r\n                                  case 'finished':\r\n                                    return '#ecfdf5'; // Green background\r\n                                  case 'ontrack':\r\n                                  case 'on track':\r\n                                  case 'in progress':\r\n                                  case 'active':\r\n                                  case 'ongoing':\r\n                                    return '#eff6ff'; // Blue background\r\n                                  case 'pending':\r\n                                  case 'waiting':\r\n                                    return '#fffbeb'; // Orange background\r\n                                  case 'regressing':\r\n                                  case 'delayed':\r\n                                  case 'behind':\r\n                                    return '#fef2f2'; // Red background\r\n                                  case 'on hold':\r\n                                  case 'paused':\r\n                                    return '#f3e8ff'; // Purple background\r\n                                  default:\r\n                                    return '#f1f5f9'; // Default gray background\r\n                                }\r\n                              })(),\r\n                              border: (() => {\r\n                                const status = metric.waitingForAll ? 'Waiting' : metric.status;\r\n                                switch(status?.toLowerCase()) {\r\n                                  case 'completed':\r\n                                  case 'done':\r\n                                  case 'finished':\r\n                                    return '1px solid #bbf7d0'; // Green border\r\n                                  case 'ontrack':\r\n                                  case 'on track':\r\n                                  case 'in progress':\r\n                                  case 'active':\r\n                                  case 'ongoing':\r\n                                    return '1px solid #dbeafe'; // Blue border\r\n                                  case 'pending':\r\n                                  case 'waiting':\r\n                                    return '1px solid #fed7aa'; // Orange border\r\n                                  case 'regressing':\r\n                                  case 'delayed':\r\n                                  case 'behind':\r\n                                    return '1px solid #fecaca'; // Red border\r\n                                  case 'on hold':\r\n                                  case 'paused':\r\n                                    return '1px solid #e9d5ff'; // Purple border\r\n                                  default:\r\n                                    return '1px solid #e2e8f0'; // Default gray border\r\n                                }\r\n                              })(),\r\n                              padding:'6px 8px',\r\n                              borderRadius:6,\r\n                              display:'flex',\r\n                              flexDirection:'column',\r\n                              gap:2\r\n                            }}>\r\n                              <span style={{opacity:.6}}>Status</span>\r\n                              <strong style={{\r\n                                textTransform:'capitalize',\r\n                                color: (() => {\r\n                                  const status = metric.waitingForAll ? 'Waiting' : metric.status;\r\n                                  switch(status?.toLowerCase()) {\r\n                                    case 'completed':\r\n                                    case 'done':\r\n                                    case 'finished':\r\n                                      return '#059669'; // Green text\r\n                                    case 'ontrack':\r\n                                    case 'on track':\r\n                                    case 'in progress':\r\n                                    case 'active':\r\n                                    case 'ongoing':\r\n                                      return '#1d4ed8'; // Blue text\r\n                                    case 'pending':\r\n                                    case 'waiting':\r\n                                      return '#d97706'; // Orange text\r\n                                    case 'regressing':\r\n                                    case 'delayed':\r\n                                    case 'behind':\r\n                                      return '#dc2626'; // Red text\r\n                                    case 'on hold':\r\n                                    case 'paused':\r\n                                      return '#7c3aed'; // Purple text\r\n                                    default:\r\n                                      return '#374151'; // Default gray text\r\n                                  }\r\n                                })()\r\n                              }}>{metric.waitingForAll ? 'Waiting' : metric.status}</strong>\r\n                            </div>\r\n                            <div style={{background:'#f1f5f9',padding:'6px 8px',borderRadius:6,display:'flex',flexDirection:'column',gap:2}}>\r\n                              <span style={{opacity:.6}}>Last Report</span>\r\n                              <strong>{metric.latestDate ? new Date(metric.latestDate).toLocaleDateString() : '—'}</strong>\r\n                            </div>\r\n                          </div>\r\n                          {/* Mini per-PIC contribution bar chart (re-added as requested) */}\r\n                          <div className=\"metric-mini-chart\" style={{marginTop:10, background:'#f8fafc', border:'1px solid #e2e8f0', borderRadius:8, padding:'4px 6px'}}>\r\n                            {(() => {\r\n                              const contrib = projectContribs[metric.projectId]?.picContributions || [];\r\n                              const data = contrib.filter(c=>c.hasReport).map(c=>({\r\n                                name: c.picName.length>6? c.picName.slice(0,6)+'…': c.picName,\r\n                                value: c.contribution || 0\r\n                              }));\r\n                              if(!data.length){\r\n                                return <div style={{fontSize:11, opacity:.6, textAlign:'center', padding:'6px 0'}}>No PIC reports yet</div>;\r\n                              }\r\n                              return (\r\n                                <ResponsiveContainer width=\"100%\" height={90}>\r\n                                  <BarChart data={data} margin={{top:4,right:4,left:0,bottom:0}}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" vertical={false} stroke=\"#e2e8f0\" />\r\n                                    <XAxis dataKey=\"name\" tick={{fontSize:9}} axisLine={false} tickLine={false} />\r\n                                    <YAxis hide domain={[0,100]} />\r\n                                    <Tooltip cursor={{fill:'rgba(0,0,0,0.04)'}} formatter={(v)=>[v+'%', 'Contribution']} />\r\n                                    <Bar dataKey=\"value\" radius={[4,4,0,0]} fill=\"#3B82F6\" />\r\n                                  </BarChart>\r\n                                </ResponsiveContainer>\r\n                              );\r\n                            })()}\r\n                          </div>\r\n                        </div>\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Aggregated Metrics Charts removed per request */}\r\n\r\n            {/* Material Requests Overview - Compact with Tracking (original layout) */}\r\n            <div className=\"dashboard-card requests-card\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"card-title\"><FaTruck /> Material Requests</h3>\r\n                <div className=\"requests-summary\">\r\n                  <span className=\"pending-count\">{pendingRequests.length} Pending</span>\r\n                  <Link to=\"/am/matreq\" className=\"view-all-link\">\r\n                    View All <FaArrowRight />\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"requests-content\">\r\n                {requestsError ? (\r\n                  <div className=\"error-state\">\r\n                    <FaExclamationTriangle />\r\n                    <span>{requestsError}</span>\r\n                  </div>\r\n                ) : materialRequests.length === 0 ? (\r\n                  <div className=\"empty-state\">\r\n                    <FaBoxes />\r\n                    <span>No material requests found</span>\r\n                    <p>All requests have been processed or none are pending</p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"requests-list\">\r\n                    {materialRequests\r\n                      .sort((a, b) => {\r\n                        const normA = (a.status||'').replace(/\\s+/g,' ').trim().toUpperCase();\r\n                        const normB = (b.status||'').replace(/\\s+/g,' ').trim().toUpperCase();\r\n                        const aPendingAM = normA==='PENDING AM' || normA==='PENDING AREA MANAGER';\r\n                        const bPendingAM = normB==='PENDING AM' || normB==='PENDING AREA MANAGER';\r\n                        if (aPendingAM && !bPendingAM) return -1;\r\n                        if (!aPendingAM && bPendingAM) return 1;\r\n                        return new Date(b.createdAt) - new Date(a.createdAt);\r\n                      })\r\n                      .map(request => {\r\n                        const statusNorm = (request.status||'').replace(/\\s+/g,' ').trim().toUpperCase();\r\n                        const pendingAM = statusNorm==='PENDING AM' || statusNorm==='PENDING AREA MANAGER';\r\n                        return (\r\n                          <Link to={`/am/material-request/${request._id}`} key={request._id} className={`request-item-new-layout ${pendingAM? 'pending-for-user':''}`} style={{textDecoration:'none'}}>\r\n                            {/* Left Section - Item Details */}\r\n                            <div className=\"request-left-section\">\r\n                              <div className=\"request-icon-new\">\r\n                                <FaBoxes />\r\n                              </div>\r\n                              <div className=\"request-details-new\">\r\n                                <h4 className=\"request-title-new\">\r\n                                  {request.materials?.map(m => `${m.materialName} (${m.quantity})`).join(', ')}\r\n                                </h4>\r\n                                <div className=\"request-meta-new\">\r\n                                  <span className=\"request-project-new\">{request.project?.projectName}</span>\r\n                                  <span className=\"request-date-new\">\r\n                                    {new Date(request.createdAt).toLocaleDateString()}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            {/* Center Section - Progress Tracking */}\r\n                            <div className=\"request-center-section\">\r\n                              <div className=\"tracking-timeline-new\">\r\n                                {/* Placed Stage */}\r\n                                <div className={`timeline-step-new ${getTimelineStatus(request.status, 'placed')}`}>\r\n                                  <div className=\"timeline-icon-new\">\r\n                                    <FaCheckCircle />\r\n                                  </div>\r\n                                  <span className=\"timeline-label-new\">Placed</span>\r\n                                </div>\r\n                                <div className={`timeline-connector-new ${['Pending PM', 'Pending AM', 'Approved', 'Received', 'PENDING PROJECT MANAGER'].includes(request.status) ? 'completed' : ''}`}></div>\r\n                                {/* PM Stage */}\r\n                                <div className={`timeline-step-new ${getTimelineStatus(request.status, 'pm')}`}>\r\n                                  <div className=\"timeline-icon-new\">\r\n                                    <FaUserTie />\r\n                                  </div>\r\n                                  <span className=\"timeline-label-new\">PM</span>\r\n                                </div>\r\n                                <div className={`timeline-connector-new ${['Pending AM', 'Approved', 'Received', 'PENDING AREA MANAGER'].includes(request.status) ? 'completed' : ''}`}></div>\r\n                                {/* AM Stage */}\r\n                                <div className={`timeline-step-new ${getTimelineStatus(request.status, 'am')}`}>\r\n                                  <div className=\"timeline-icon-new\">\r\n                                    <FaBuilding />\r\n                                  </div>\r\n                                  <span className=\"timeline-label-new\">AM</span>\r\n                                </div>\r\n                                <div className={`timeline-connector-new ${['Approved', 'Received'].includes(request.status) ? 'completed' : ''}`}></div>\r\n                                {/* Done Stage */}\r\n                                <div className={`timeline-step-new ${getTimelineStatus(request.status, 'done')}`}>\r\n                                  <div className=\"timeline-icon-new\">\r\n                                    <FaCheckCircle />\r\n                                  </div>\r\n                                  <span className=\"timeline-label-new\">Done</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            {/* Right Section - Status */}\r\n                            <div className=\"request-right-section\">\r\n                              <div className=\"request-status-new\">\r\n                                <span className={`status-text-new ${request.status?.replace(/\\s/g, '').toLowerCase()}`}>\r\n                                  {request.status}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* Page-level overlay removed; now injected globally in index.html */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AreaDash;\r\n","import React from 'react';\r\nimport ProjectView from '../project/ProjectView';\r\nimport { useParams } from 'react-router-dom';\r\nimport AppHeader from '../layout/AppHeader';\r\n\r\n// Area Manager wrapper using unified AppHeader\r\nexport default function AmViewProject(){\r\n\tconst { id } = useParams();\r\n\tconst overrides = {\r\n\t\tdashboard: '/am',\r\n\t\tprojects: '/am/viewproj',\r\n\t\tchat: '/am/chat',\r\n\t\tmaterials: '/am/matreq',\r\n\t\tmanpower: '/am/manpower-requests'\r\n\t};\r\n\tconst reportOverrides = {\r\n\t\t'View Project': `/am/projects/${id}`,\r\n\t\t'Reports': `/am/progress-report/${id}`\r\n\t};\r\n\treturn (\r\n\t\t<ProjectView\r\n\t\t\trole=\"am\"\r\n\t\t\tuseUnifiedHeader={true}\r\n\t\t\tnavPathOverrides={{ ...overrides, ...reportOverrides }}\r\n\t\t\tcustomHeader={<AppHeader roleSegment=\"am\" />}\r\n\t\t/>\r\n\t);\r\n}\r\n","/**\n * @fileOverview Bar Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Bar } from '../cartesian/Bar';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var BarChart = generateCategoricalChart({\n  chartName: 'BarChart',\n  GraphicalChild: Bar,\n  defaultTooltipEventType: 'axis',\n  validateTooltipEventTypes: ['axis', 'item'],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'; \r\nimport NotificationBell from '../NotificationBell'; \r\nimport '../style/am_style/ProgressReport.css';\r\n\r\n// React Icons\r\nimport { FaTachometerAlt, FaComments, FaBoxes, FaUsers, FaProjectDiagram, FaClipboardList, FaChartBar } from 'react-icons/fa';\r\n\r\nconst ProgressReport = () => {\r\n  const [selectedLocation, setSelectedLocation] = useState('Alveo Sanctuary');\r\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\r\n\r\n  // Define userName and handleLogout for demo\r\n  const userName = \"Zandro\"; // <-- Replace with your actual logic for user name\r\n  const handleLogout = () => {\r\n    // Your logout logic here\r\n    console.log('Logout');\r\n  };\r\n\r\n  // Sample data for recent progress reports\r\n  const recentReports = [\r\n    {\r\n      id: 1,\r\n      period: 'Apr 1 - Apr 14, 2025',\r\n      file: 'Progress Report.docx',\r\n      submitted: '4/10/24 11:59pm',\r\n      location: 'Alveo Sanctuary'\r\n    },\r\n    // ...other reports\r\n  ];\r\n\r\n  // Sample data for previous progress reports\r\n  const previousReports = [\r\n    {\r\n      id: 4,\r\n      period: 'Apr 1 - Apr 14, 2025',\r\n      file: 'Progress Report.docx',\r\n      submitted: '4/10/24 11:59pm',\r\n      location: 'Alveo Sanctuary'\r\n    },\r\n    // ...other reports\r\n  ];\r\n\r\n  const locations = ['All', 'Alveo Sanctuary', 'BGC Hotel', 'Makati Central'];\r\n\r\n  const handleDownload = (reportId) => {\r\n    // Handle download functionality\r\n    console.log(`Downloading report ${reportId}`);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    // Handle back navigation\r\n    console.log('Navigate back');\r\n  };\r\n\r\n  return (\r\n    <div className=\"area-dash head\">\r\n      {/* Header remains the same */}\r\n      <header className=\"header\">\r\n  <div className=\"logo-container\">\r\n    <img\r\n      src={require('../../assets/images/FadzLogo1.png')}\r\n      alt=\"FadzTrack Logo\"\r\n      className=\"logo-img\"\r\n    />\r\n    <h1 className=\"brand-name\">FadzTrack</h1>\r\n  </div>\r\n  <nav className=\"nav-menu\">\r\n    <Link to=\"/am\" className=\"nav-link\"><FaTachometerAlt /> Dashboard</Link>\r\n    <Link to=\"/am/chat\" className=\"nav-link\"><FaComments /> Chat</Link>\r\n    <Link to=\"/am/matreq\" className=\"nav-link\"><FaBoxes /> Material</Link>\r\n    <Link to=\"/am/manpower-requests\" className=\"nav-link\"><FaUsers /> Manpower</Link>\r\n    <Link to=\"/am/viewproj\" className=\"nav-link\"><FaProjectDiagram /> Projects</Link>\r\n    <Link to=\"/logs\" className=\"nav-link\"><FaClipboardList /> Logs</Link>\r\n    <Link to=\"/reports\" className=\"nav-link\"><FaChartBar /> Reports</Link>\r\n  </nav>\r\n  <div className=\"profile-menu-container\" style={{ display: 'flex', alignItems: 'center', gap: 18 }}>\r\n    <NotificationBell />\r\n    <div className=\"profile-circle\" onClick={() => setProfileMenuOpen(!profileMenuOpen)}>\r\n      {userName ? userName.charAt(0).toUpperCase() : 'Z'}\r\n    </div>\r\n    {profileMenuOpen && (\r\n      <div className=\"profile-menu\">\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </div>\r\n    )}\r\n  </div>\r\n</header>\r\n      <div className=\"progress-report-container\">\r\n        <div className=\"progress-report-content\">\r\n          <div className=\"report-header\">\r\n            <h1 className=\"report-title\">\r\n              Progress Report\r\n              <span className=\"dropdown-arrow\">⌄</span>\r\n            </h1>\r\n\r\n            <div className=\"filter-section\">\r\n              <div className=\"filter-group\">\r\n                <button className=\"filter-btn active\">All</button>\r\n                <div className=\"location-dropdown\">\r\n                  <select\r\n                    value={selectedLocation}\r\n                    onChange={(e) => setSelectedLocation(e.target.value)}\r\n                    className=\"location-select\"\r\n                  >\r\n                    {locations.map(location => (\r\n                      <option key={location} value={location}>{location}</option>\r\n                    ))}\r\n                  </select>\r\n                  <span className=\"dropdown-arrow\">⌄</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"reports-section\">\r\n            <h2 className=\"section-title\">Recent Progress Report</h2>\r\n            <div className=\"reports-table\">\r\n              <div className=\"table-header\">\r\n                <div className=\"header-cell\">Report Period</div>\r\n                <div className=\"header-cell\">File</div>\r\n                <div className=\"header-cell\"></div>\r\n                <div className=\"header-cell\">Submitted</div>\r\n                <div className=\"header-cell\">Location</div>\r\n              </div>\r\n              {recentReports.map(report => (\r\n                <div key={report.id} className=\"table-row\">\r\n                  <div className=\"table-cell\">{report.period}</div>\r\n                  <div className=\"table-cell\">{report.file}</div>\r\n                  <div className=\"table-cell\">\r\n                    <button\r\n                      className=\"download-btn\"\r\n                      onClick={() => handleDownload(report.id)}\r\n                    >\r\n                      📄 Download\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"table-cell\">{report.submitted}</div>\r\n                  <div className=\"table-cell\">{report.location}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"reports-section\">\r\n            <h2 className=\"section-title\">Previous Progress Reports</h2>\r\n            <div className=\"reports-table\">\r\n              <div className=\"table-header\">\r\n                <div className=\"header-cell\">Report Period</div>\r\n                <div className=\"header-cell\">File</div>\r\n                <div className=\"header-cell\"></div>\r\n                <div className=\"header-cell\">Submitted</div>\r\n                <div className=\"header-cell\">Location</div>\r\n              </div>\r\n              {previousReports.map(report => (\r\n                <div key={report.id} className=\"table-row\">\r\n                  <div className=\"table-cell\">{report.period}</div>\r\n                  <div className=\"table-cell\">{report.file}</div>\r\n                  <div className=\"table-cell\">\r\n                    <button\r\n                      className=\"download-btn\"\r\n                      onClick={() => handleDownload(report.id)}\r\n                    >\r\n                      📄 Download\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"table-cell\">{report.submitted}</div>\r\n                  <div className=\"table-cell\">{report.location}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"back-button-container\">\r\n            <button className=\"back-btn\" onClick={handleBack}>\r\n              Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressReport;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link, useParams } from 'react-router-dom';\r\nimport '../style/am_style/Area_Manpower_ReqDetails.css';\r\nimport api from '../../api/axiosInstance';\r\nimport NotificationBell from '../NotificationBell';\r\nimport { FaTachometerAlt, FaComments, FaBoxes, FaUsers, FaProjectDiagram, FaClipboardList, FaChartBar } from 'react-icons/fa';\r\n\r\nexport default function AreaManpowerReqDetails() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  // ⚠️ Declare user BEFORE using it anywhere\r\n  const stored = typeof window !== 'undefined' ? localStorage.getItem('user') : null;\r\n  const user = stored ? JSON.parse(stored) : null;\r\n\r\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\r\n  const [reqData, setReqData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [reviewMode, setReviewMode] = useState(false);\r\n  const [approveLoading, setApproveLoading] = useState(false);\r\n\r\n  const [selectedManpowers, setSelectedManpowers] = useState([]);\r\n  const [availableManpowers, setAvailableManpowers] = useState([]);\r\n\r\n  // Lazy init so we read user once at mount\r\n  const [userName, setUserName] = useState(() => (user?.name ? user.name : 'ALECK'));\r\n\r\n  const [selectedArea, setSelectedArea] = useState(user?.area || '');\r\n  const [selectedProject, setSelectedProject] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchRequest();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  const fetchRequest = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await api.get(`/manpower-requests/${id}`);\r\n      setReqData(data || null);\r\n      setSelectedProject(data?.project?._id || '');\r\n      // If user area exists, keep it; otherwise default empty\r\n      setSelectedArea(prev => prev || user?.area || '');\r\n    } catch (error) {\r\n      console.error('Failed to fetch request:', error);\r\n      setReqData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!reqData) return;\r\n    const fetchAvailable = async () => {\r\n      try {\r\n        const { data } = await api.get('/manpower-requests/inactive');\r\n        const arr = Array.isArray(data) ? data : [];\r\n        \r\n        // Get the requested manpower types from the request\r\n        const requestedTypes = (reqData.manpowers || []).map(mp => mp.type);\r\n        \r\n        // Filter manpower to only show those whose position matches the requested types\r\n        const filtered = arr.filter(mp => requestedTypes.includes(mp.position));\r\n        \r\n        setAvailableManpowers(filtered);\r\n      } catch (error) {\r\n        console.error('❌ Error fetching inactive manpowers:', error);\r\n        setAvailableManpowers([]);\r\n      }\r\n    };\r\n    fetchAvailable();\r\n  }, [reqData]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (!event.target.closest('.profile-menu-container')) {\r\n        setProfileMenuOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => document.removeEventListener('click', handleClickOutside);\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/');\r\n  };\r\n\r\n  const handleAddManpower = (mpId) => {\r\n    const selected = availableManpowers.find(mp => mp._id === mpId);\r\n    if (!selected) return;\r\n    if (selectedManpowers.some(m => m._id === mpId)) return;\r\n    setSelectedManpowers(prev => [...prev, selected]);\r\n  };\r\n\r\n  const handleRemoveManpower = (mpId) => {\r\n    setSelectedManpowers(prev => prev.filter(mp => mp._id !== mpId));\r\n  };\r\n\r\n  const handleProvideManpower = async () => {\r\n    if (!selectedArea || !selectedProject || selectedManpowers.length === 0) {\r\n      alert('Fill all required fields.');\r\n      return;\r\n    }\r\n    setApproveLoading(true);\r\n    try {\r\n      await api.put(`/manpower-requests/${id}/approve`, {\r\n        approvedBy: user?.name || '',\r\n        status: 'Approved',\r\n        area: selectedArea,\r\n        project: selectedProject,\r\n        manpowerProvided: selectedManpowers.map(mp => mp._id),\r\n      });\r\n      alert('✅ Request Approved!');\r\n      setReviewMode(false);\r\n      fetchRequest();\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(error?.response?.data?.message || '❌ Failed to approve request.');\r\n    } finally {\r\n      setApproveLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeny = async () => {\r\n    const confirmed = window.confirm(\r\n      'Confirm Rejection?\\n\\nRejecting this request will remove this from your list of Other\\'s Request.'\r\n    );\r\n    \r\n    if (!confirmed) return;\r\n    \r\n    setApproveLoading(true);\r\n    try {\r\n      await api.put(`/manpower-requests/${id}`, { status: 'Rejected' });\r\n      alert('Request rejected successfully. It has been removed from your list.');\r\n      navigate('/am/manpower-requests');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(error?.response?.data?.message || 'Failed to reject request.');\r\n    } finally {\r\n      setApproveLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (reviewMode) setReviewMode(false);\r\n    else navigate('/am/manpower-requests');\r\n  };\r\n\r\n  const handleReviewRequest = () => setReviewMode(true);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"fadztrack-main\">\r\n        <div className=\"fadztrack-card\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!reqData) {\r\n    return (\r\n      <div className=\"fadztrack-main\">\r\n        <div className=\"fadztrack-card\">Request not found or failed to load.</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fadztrack-app\">\r\n      {/* Header */}\r\n      <header className=\"header\">\r\n        <div className=\"logo-container\">\r\n          <img\r\n            src={require('../../assets/images/FadzLogo1.png')}\r\n            alt=\"FadzTrack Logo\"\r\n            className=\"logo-img\"\r\n          />\r\n          <h1 className=\"brand-name\">FadzTrack</h1>\r\n        </div>\r\n        <nav className=\"nav-menu\">\r\n          <Link to=\"/am\" className=\"nav-link\"><FaTachometerAlt /> Dashboard</Link>\r\n          <Link to=\"/am/chat\" className=\"nav-link\"><FaComments /> Chat</Link>\r\n          <Link to=\"/am/matreq\" className=\"nav-link\"><FaBoxes /> Material</Link>\r\n          <Link to=\"/am/manpower-requests\" className=\"nav-link\"><FaUsers /> Manpower</Link>\r\n          <Link to=\"/am/viewproj\" className=\"nav-link\"><FaProjectDiagram /> Projects</Link>\r\n          <Link to=\"/logs\" className=\"nav-link\"><FaClipboardList /> Logs</Link>\r\n          <Link to=\"/reports\" className=\"nav-link\"><FaChartBar /> Reports</Link>\r\n        </nav>\r\n        <div className=\"profile-menu-container\" style={{ display: 'flex', alignItems: 'center', gap: 18 }}>\r\n          <NotificationBell />\r\n          <div className=\"profile-circle\" onClick={() => setProfileMenuOpen(!profileMenuOpen)}>\r\n            {userName ? userName.charAt(0).toUpperCase() : 'Z'}\r\n          </div>\r\n          {profileMenuOpen && (\r\n            <div className=\"profile-menu\">\r\n              <button onClick={handleLogout}>Logout</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </header>\r\n\r\n      {/* Body */}\r\n      <div className=\"fadztrack-main\">\r\n        <div className=\"fadztrack-card details-card\">\r\n          <div style={{ textAlign: 'center' }}>\r\n            <h1 className=\"fadztrack-title\" style={{ textAlign: 'center' }}>\r\n              Request for {reqData.manpowers.map(mp => `${mp.quantity} ${mp.type}`).join(', ')}\r\n            </h1>\r\n          </div>\r\n          <p className=\"fadztrack-subtitle\">\r\n            {reqData.project?.projectName} | Engr. {reqData.createdBy?.name}\r\n          </p>\r\n\r\n          <div className=\"fadztrack-form-row center-row\">\r\n            <div className=\"fadztrack-form-group\">\r\n              <label><b>Target Acquisition Date:</b></label>\r\n              <div>{new Date(reqData.acquisitionDate).toLocaleDateString()}</div>\r\n            </div>\r\n            <div className=\"fadztrack-form-group\">\r\n              <label><b>Duration:</b></label>\r\n              <div>{reqData.duration} day(s)</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"fadztrack-summary-section\">\r\n            <label><b>Request Summary</b></label>\r\n            <div className=\"fadztrack-summary-box\">\r\n              {(reqData.manpowers || []).map((mp, i) => (\r\n                <div key={i}>{mp.quantity} {mp.type}</div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {reviewMode && reqData.status !== 'Approved' ? (\r\n            <>\r\n              <div className=\"fadztrack-form-row\">\r\n                <div className=\"fadztrack-form-group\">\r\n                  <label>Select Area</label>\r\n                  <select\r\n                    className=\"fadztrack-select\"\r\n                    value={selectedArea}\r\n                    onChange={e => setSelectedArea(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select Area</option>\r\n                    <option value=\"Batangas\">Batangas</option>\r\n                    <option value=\"Laguna\">Laguna</option>\r\n                    <option value=\"Makati\">Makati</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"fadztrack-form-group\">\r\n                  <label>Project</label>\r\n                  <input className=\"fadztrack-select\" value={reqData.project?.projectName || ''} readOnly />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"fadztrack-form-group\">\r\n                <label>Select Manpower</label>\r\n                {reqData?.manpowers && reqData.manpowers.length > 0 && (\r\n                  <div style={{ marginBottom: '8px', fontSize: '0.9rem', color: '#666' }}>\r\n                    Requested types: {reqData.manpowers.map(mp => `${mp.type} (${mp.quantity})`).join(', ')}\r\n                  </div>\r\n                )}\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                  <select\r\n                    defaultValue=\"\"\r\n                    onChange={e => handleAddManpower(e.target.value)}\r\n                    className=\"fadztrack-select\"\r\n                    style={{ flex: 1 }}\r\n                  >\r\n                    <option value=\"\">\r\n                      {availableManpowers.length === 0 ? 'No matching manpower available' : 'Select Manpower'}\r\n                    </option>\r\n                    {availableManpowers\r\n                      .filter(mp => !selectedManpowers.some(sel => sel._id === mp._id))\r\n                      .map(mp => (\r\n                        <option key={mp._id} value={mp._id}>\r\n                          {mp.name} ({mp.position})\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"fadztrack-button\"\r\n                    style={{ padding: '8px 14px', fontSize: 14 }}\r\n                    onClick={() => alert('Use dropdown to select manpower.\\nRepeat for additional manpower.')}\r\n                  >\r\n                    +\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {selectedManpowers.length > 0 && (\r\n                <div className=\"fadztrack-form-group\">\r\n                  <label>Manpower to Lend</label>\r\n                  <div className=\"fadztrack-select\" style={{ minHeight: 50, padding: 10, display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n                    {selectedManpowers.map(mp => (\r\n                      <span key={mp._id} style={{\r\n                        display: 'inline-flex',\r\n                        alignItems: 'center',\r\n                        background: '#dceafe',\r\n                        color: '#1d4ed8',\r\n                        padding: '6px 12px',\r\n                        borderRadius: '20px',\r\n                        fontSize: '0.95rem'\r\n                      }}>\r\n                        {mp.name} ({mp.position})\r\n                        <button\r\n                          onClick={() => handleRemoveManpower(mp._id)}\r\n                          style={{\r\n                            background: 'none',\r\n                            border: 'none',\r\n                            marginLeft: 8,\r\n                            color: '#1e3a8a',\r\n                            fontWeight: 'bold',\r\n                            fontSize: '1rem',\r\n                            cursor: 'pointer',\r\n                            lineHeight: '1'\r\n                          }}\r\n                          title=\"Remove\"\r\n                        >\r\n                          ×\r\n                        </button>\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"fadztrack-buttons\" style={{ marginTop: 32 }}>\r\n                <button className=\"fadztrack-button\" onClick={handleBack} disabled={approveLoading}>Back</button>\r\n                <button className=\"fadztrack-button review-btn\" onClick={handleProvideManpower} disabled={approveLoading}>\r\n                  {approveLoading ? 'Processing...' : 'Provide Manpower'}\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"fadztrack-summary-section\">\r\n                <label className=\"fadztrack-summary-label\"><b>Request Description</b></label>\r\n                <div className=\"fadztrack-summary-description\">\r\n                  {reqData.description}\r\n                </div>\r\n              </div>\r\n              {reqData.status !== 'Approved' && (\r\n                                 <div style={{ display: 'flex', marginTop: 32, gap: 24, justifyContent: 'center' }}>\r\n                   <button className=\"fadztrack-button\" style={{ background: '#c0392b' }} onClick={handleDeny} disabled={approveLoading}>Reject Request</button>\r\n                   <button className=\"fadztrack-button review-btn\" onClick={handleReviewRequest}>Review Request</button>\r\n                 </div>\r\n              )}\r\n              {reqData.status === 'Approved' && (\r\n                <div style={{ marginTop: 32, textAlign: 'center', fontWeight: 'bold', color: '#189d38' }}>\r\n                  {reqData.returnDate\r\n                    ? <>Request fulfilled, manpower set to return on:\r\n                        <span style={{ color: '#2079c4', marginLeft: 6 }}>\r\n                          {new Date(reqData.returnDate).toLocaleDateString('en-CA')}\r\n                        </span>\r\n                      </>\r\n                    : 'Manpower Request Approved'}\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport MaterialRequestListView from '../material/MaterialRequestListView';\r\n\r\nconst AmMatRequestList = () => (\r\n  <MaterialRequestListView\r\n    role=\"Area Manager\"\r\n    fetchUrl=\"/requests/mine\"\r\n    detailLinkBase=\"/am/material-request\"\r\n    rootClass=\"am-request-list\"\r\n    headerTitle=\"AM Material Requests\"\r\n    headerSubtitle=\"Approve validated requests and monitor delivery\"\r\n  />\r\n);\r\n\r\nexport default AmMatRequestList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport api from '../../api/axiosInstance';\r\nimport '../style/am_style/Area_Manpower_List.css'; \r\nimport NotificationBell from '../NotificationBell';\r\n\r\n// React Icons\r\nimport { FaTachometerAlt, FaComments, FaBoxes, FaUsers, FaProjectDiagram, FaClipboardList, FaChartBar } from 'react-icons/fa';\r\n\r\nconst ITEMS_PER_PAGE = 5;\r\n\r\nconst AreaManpowerList = () => {\r\n  const navigate = useNavigate();\r\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\r\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n  const [requests, setRequests] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [filter, setFilter] = useState('All');\r\n  const [searchTerm, ] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [userName, setUserName] = useState(user?.name || 'ALECK');\r\n\r\n  // Sidebar state\r\n  const [assignedLocations, setAssignedLocations] = useState([]);\r\n  const [allProjects, setAllProjects] = useState([]);\r\n  const [enrichedAllProjects, setEnrichedAllProjects] = useState([]);\r\n  const [expandedLocations, setExpandedLocations] = useState({});\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [chats] = useState([\r\n    { id: 1, name: 'Rychea Miralles', initial: 'R', message: 'Hello Good Morning po! As...', color: '#4A6AA5' },\r\n    { id: 2, name: 'Third Castellar', initial: 'T', message: 'Hello Good Morning po! As...', color: '#2E7D32' },\r\n    { id: 3, name: 'Zenarose Miranda', initial: 'Z', message: 'Hello Good Morning po! As...', color: '#9C27B0' }\r\n  ]);\r\n\r\n\r\n  // Fetch manpower requests (for this page)\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setError('Session expired. Please log in.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    api.get('/manpower-requests')\r\n      .then(res => {\r\n        setRequests(Array.isArray(res.data) ? res.data : []);\r\n        setLoading(false);\r\n        setError('');\r\n      })\r\n      .catch(err => {\r\n        if (err.response && (err.response.status === 403 || err.response.status === 401)) {\r\n          setError('Session expired or unauthorized. Please login.');\r\n        } else {\r\n          setError('Failed to load requests');\r\n        }\r\n        setRequests([]);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Sidebar location/projects fetch\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data: locData } = await api.get(`/users/${user._id}/locations`);\r\n        setAssignedLocations(locData);\r\n        const { data: projData } = await api.get('/projects');\r\n        setAllProjects(projData);\r\n        const { data: requestsData } = await api.get('/manpower-requests');\r\n        setPendingRequests(\r\n          requestsData.filter(\r\n            req =>\r\n              req.status === 'Pending AM' &&\r\n              req.project &&\r\n              locData.some(\r\n                loc =>\r\n                  loc._id === (req.project.location?._id || req.project.location)\r\n              )\r\n          )\r\n        );\r\n      } catch (err) {\r\n        setAssignedLocations([]);\r\n        setAllProjects([]);\r\n        setPendingRequests([]);\r\n      }\r\n    };\r\n    if (user._id) fetchData();\r\n  }, [user._id]);\r\n\r\n  // Enrich projects for sidebar\r\n  useEffect(() => {\r\n    if (assignedLocations.length && allProjects.length) {\r\n      setEnrichedAllProjects(\r\n        allProjects\r\n          .filter(project =>\r\n            assignedLocations.some(\r\n              loc => loc._id === (project.location?._id || project.location)\r\n            )\r\n          )\r\n          .map(project => {\r\n            const loc = assignedLocations.find(\r\n              l => l._id === (project.location?._id || project.location)\r\n            );\r\n            return {\r\n              ...project,\r\n              location: loc ? { ...loc } : { name: 'Unknown Location', region: '' },\r\n              name: project.projectName,\r\n              engineer: project.projectmanager?.name || 'Not Assigned'\r\n            };\r\n          })\r\n      );\r\n    }\r\n  }, [assignedLocations, allProjects]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (!event.target.closest(\".profile-menu-container\")) {\r\n        setProfileMenuOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => document.removeEventListener(\"click\", handleClickOutside);\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/');\r\n  };\r\n\r\n  // Sidebar grouping logic\r\n  const projectsByLocation = enrichedAllProjects.reduce((acc, project) => {\r\n    const locationId = project.location?._id || 'unknown';\r\n    if (!acc[locationId]) {\r\n      acc[locationId] = {\r\n        name: project.location?.name || 'Unknown Location',\r\n        region: project.location?.region || '',\r\n        projects: []\r\n      };\r\n    }\r\n    acc[locationId].projects.push(project);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Filtering/search/pagination\r\n  const filteredRequests = requests.filter(request => {\r\n    const status = (request.status || '').toLowerCase();\r\n    const matchesFilter =\r\n      filter === 'All' ||\r\n      (filter === 'Pending' && status.includes('pending')) ||\r\n      (filter === 'Approved' && status.includes('approved')) ||\r\n      (filter === 'Cancelled' && (status.includes('denied') || status.includes('cancel')));\r\n\r\n    const searchTarget = [\r\n      request.manpowers && request.manpowers.map(m => m.type).join(', '),\r\n      request.description,\r\n      request.createdBy?.name,\r\n      request.project?.projectName,\r\n    ].join(' ').toLowerCase();\r\n\r\n    const matchesSearch = searchTerm ? searchTarget.includes(searchTerm.toLowerCase()) : true;\r\n    return matchesFilter && matchesSearch;\r\n  });\r\n\r\n  const totalPages = Math.ceil(filteredRequests.length / ITEMS_PER_PAGE);\r\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n  const paginatedRequests = filteredRequests.slice(startIndex, startIndex + ITEMS_PER_PAGE);\r\n\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <header className=\"header\">\r\n  <div className=\"logo-container\">\r\n    <img\r\n      src={require('../../assets/images/FadzLogo1.png')}\r\n      alt=\"FadzTrack Logo\"\r\n      className=\"logo-img\"\r\n    />\r\n    <h1 className=\"brand-name\">FadzTrack</h1>\r\n  </div>\r\n  <nav className=\"nav-menu\">\r\n    <Link to=\"/am\" className=\"nav-link\"><FaTachometerAlt /> Dashboard</Link>\r\n    <Link to=\"/am/chat\" className=\"nav-link\"><FaComments /> Chat</Link>\r\n    <Link to=\"/am/matreq\" className=\"nav-link\"><FaBoxes /> Material</Link>\r\n    <Link to=\"/am/manpower-requests\" className=\"nav-link\"><FaUsers /> Manpower</Link>\r\n    <Link to=\"/am/viewproj\" className=\"nav-link\"><FaProjectDiagram /> Projects</Link>\r\n    <Link to=\"/logs\" className=\"nav-link\"><FaClipboardList /> Logs</Link>\r\n    <Link to=\"/reports\" className=\"nav-link\"><FaChartBar /> Reports</Link>\r\n  </nav>\r\n  <div className=\"profile-menu-container\" style={{ display: 'flex', alignItems: 'center', gap: 18 }}>\r\n    <NotificationBell />\r\n    <div className=\"profile-circle\" onClick={() => setProfileMenuOpen(!profileMenuOpen)}>\r\n      {userName ? userName.charAt(0).toUpperCase() : 'Z'}\r\n    </div>\r\n    {profileMenuOpen && (\r\n      <div className=\"profile-menu\">\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </div>\r\n    )}\r\n  </div>\r\n</header>\r\n\r\n      {/* Three-column layout */}\r\n      <div className=\"area-dash dashboard-layout\">\r\n        {/* Left Sidebar */}\r\n        <div className=\"area-dash sidebar\">\r\n          <h2>Dashboard</h2>\r\n          <button\r\n            className=\"area-dash add-project-btn\"\r\n            onClick={() => navigate('/am/addproj')}\r\n          >\r\n            Add New Project\r\n          </button>\r\n          <div className=\"area-dash location-folders\">\r\n            {Object.entries(projectsByLocation).map(([locationId, locationData]) => (\r\n              <div key={locationId} className=\"area-dash location-folder\">\r\n                <div\r\n                  className=\"area-dash location-header\"\r\n                  onClick={() =>\r\n                    setExpandedLocations(prev => ({\r\n                      ...prev,\r\n                      [locationId]: !prev[locationId]\r\n                    }))\r\n                  }\r\n                >\r\n                  <div className=\"area-dash folder-icon\">\r\n                    <span className={`area-dash folder-arrow ${expandedLocations[locationId] ? 'expanded' : ''}`}>▶</span>\r\n                    <span className=\"area-dash folder-icon-img\">📁</span>\r\n                  </div>\r\n                  <div className=\"area-dash location-info\">\r\n                    <div className=\"area-dash location-name\">{locationData.name}</div>\r\n                    <div className=\"area-dash location-region\">{locationData.region}</div>\r\n                  </div>\r\n                  <div className=\"area-dash project-count\">{locationData.projects.length}</div>\r\n                </div>\r\n                {expandedLocations[locationId] && (\r\n                  <div className=\"area-dash projects-list\">\r\n                    {locationData.projects.map(proj => (\r\n                      <Link\r\n                        to={`/am/projects/${proj._id}`}\r\n                        key={proj._id}\r\n                        className=\"area-dash project-item\"\r\n                      >\r\n                        <div className=\"area-dash project-icon\">\r\n                          <span className=\"area-dash icon\">🏗️</span>\r\n                          <div className=\"area-dash icon-bg\" />\r\n                        </div>\r\n                        <div className=\"area-dash project-info\">\r\n                          <div className=\"area-dash project-name\">{proj.name}</div>\r\n                          <div className=\"area-dash project-engineer\">{proj.engineer}</div>\r\n                        </div>\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main */}\r\n        <main className=\"main-content\" style={{ flex: 1, minHeight: \"100vh\" }}>\r\n          <div className=\"requests-container\">\r\n            <div className=\"requests-header\">\r\n              <h2 className=\"page-title\">Manpower Requests</h2>\r\n              <div className=\"filter-tabs\">\r\n                {['All', 'Pending', 'Approved', 'Cancelled'].map(tab => (\r\n                  <button\r\n                    key={tab}\r\n                    className={`filter-tab ${filter === tab ? 'active' : ''}`}\r\n                    onClick={() => setFilter(tab)}\r\n                  >\r\n                    {tab}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Request List */}\r\n            <div className=\"requests-list\">\r\n              {loading ? (\r\n                <div>Loading requests...</div>\r\n              ) : error ? (\r\n                <div style={{ color: 'red', marginBottom: 20 }}>{error}</div>\r\n              ) : paginatedRequests.length === 0 ? (\r\n                <div className=\"no-requests\">\r\n                  <p>No manpower requests found matching your criteria.</p>\r\n                </div>\r\n              ) : (\r\n                paginatedRequests.map(request => (\r\n                  <Link\r\n                    to={`/am/manpower-requests/${request._id}`}\r\n                    className=\"request-item\"\r\n                    key={request._id}\r\n                    style={{ textDecoration: 'none', color: 'inherit' }}\r\n                  >\r\n                    <div className=\"request-icon\">👷</div>\r\n                    <div className=\"request-details\">\r\n                      <h3 className=\"request-title\">\r\n                        {request.manpowers && request.manpowers.length > 0\r\n                          ? request.manpowers.map(m => `${m.quantity} ${m.type}`).join(', ')\r\n                          : 'Manpower Request'}\r\n                      </h3>\r\n                      <p className=\"request-description\">{request.description}</p>\r\n                    </div>\r\n                    <div className=\"request-meta\">\r\n                      <div className=\"request-author\">{request.createdBy?.name || 'Unknown'}</div>\r\n                      <div className=\"request-project\">{request.project?.projectName || '-'}</div>\r\n                      <div className=\"request-date\">\r\n                        {request.acquisitionDate ? new Date(request.acquisitionDate).toLocaleDateString() : ''}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"request-actions\">\r\n                      <span className={`status-badge ${(request.status || '').replace(/\\s/g, '').toLowerCase()}`}>\r\n                        {request.status}\r\n                      </span>\r\n                    </div>\r\n                  </Link>\r\n                ))\r\n              )}\r\n            </div>\r\n\r\n            {/* Pagination Controls */}\r\n            <div className=\"pagination\">\r\n              <span className=\"pagination-info\">\r\n                Showing {startIndex + 1} to {Math.min(startIndex + ITEMS_PER_PAGE, filteredRequests.length)} of {filteredRequests.length} entries.\r\n              </span>\r\n              <div className=\"pagination-controls\">\r\n                <button className=\"pagination-btn\" onClick={() => setCurrentPage(p => Math.max(p - 1, 1))} disabled={currentPage === 1}>{'<'}</button>\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map(num => (\r\n                  <button\r\n                    key={num}\r\n                    className={`pagination-btn ${num === currentPage ? 'active' : ''}`}\r\n                    onClick={() => setCurrentPage(num)}\r\n                  >\r\n                    {num}\r\n                  </button>\r\n                ))}\r\n                <button className=\"pagination-btn\" onClick={() => setCurrentPage(p => Math.min(p + 1, totalPages))} disabled={currentPage === totalPages}>{'>'}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n\r\n        {/* Right Sidebar */}\r\n        <div className=\"area-dash right-sidebar\">\r\n          <div className=\"area-dash pending-requests-section\">\r\n            <div className=\"area-dash section-header\">\r\n              <h2>Pending Manpower Requests</h2>\r\n              <Link to=\"/am/manpower-requests\" className=\"area-dash view-all-btn\">View All</Link>\r\n            </div>\r\n            <div className=\"area-dash pending-requests-list\">\r\n              {pendingRequests.length === 0 ? (\r\n                <div className=\"area-dash no-requests\">No pending manpower requests</div>\r\n              ) : (\r\n                pendingRequests.slice(0, 3).map(request => (\r\n                  <Link to={`/am/manpower-requests/${request._id}`} key={request._id} className=\"area-dash pending-request-item\">\r\n                    <div className=\"area-dash request-icon\">👷</div>\r\n                    <div className=\"area-dash request-details\">\r\n                      <h3 className=\"area-dash request-title\">\r\n                        {request.manpowers?.map(m => `${m.quantity} ${m.type}`).join(', ')}\r\n                      </h3>\r\n                      <p className=\"area-dash request-description\">{request.description}</p>\r\n                      <div className=\"area-dash request-meta\">\r\n                        <span className=\"area-dash request-project\">{request.project?.projectName}</span>\r\n                        <span className=\"area-dash request-date\">\r\n                          Requested: {new Date(request.acquisitionDate).toLocaleDateString()}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"area-dash request-status\">\r\n                      <span className=\"area-dash status-badge pending\">Pending AM Approval</span>\r\n                    </div>\r\n                  </Link>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"area-dash chats-section\">\r\n            <h3>Chats</h3>\r\n            <div className=\"area-dash chats-list\">\r\n              {chats.map(chat => (\r\n                <div key={chat.id} className=\"area-dash chat-item\">\r\n                  <div className=\"area-dash chat-avatar\" style={{ backgroundColor: chat.color }}>{chat.initial}</div>\r\n                  <div className=\"area-dash chat-details\">\r\n                    <div className=\"area-dash chat-name\">{chat.name}</div>\r\n                    <div className=\"area-dash chat-message\">{chat.message}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AreaManpowerList;\r\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../style/am_style/Area_Addproj.css';\r\nimport '../style/am_style/Area_Dash.css';\r\nimport Papa from 'papaparse';\r\nimport api from '../../api/axiosInstance';\r\nimport AppHeader from '../layout/AppHeader';\r\n\r\nconst AreaAddproj = () => {\r\n  const navigate = useNavigate();\r\n  const stored = localStorage.getItem('user');\r\n  const user = stored ? JSON.parse(stored) : null;\r\n  const userId = user?._id;\r\n  const [documents, setDocuments] = useState([]);\r\n  const [budgetFiles, setBudgetFiles] = useState([]); // dedicated budget PDF(s)\r\n  const [userName, setUserName] = useState(user?.name || 'ALECK');\r\n  // Unified header: remove local profile menu/collapse state\r\n  const [eligiblePMs, setEligiblePMs] = useState([]);\r\n\r\n  // For PIC/Staff/HR panels\r\n  const [picUsers, setPicUsers] = useState([]);\r\n  const [availablePICs, setAvailablePICs] = useState([]);\r\n  const [assignedPICs, setAssignedPICs] = useState([]);\r\n  const [searchPIC, setSearchPIC] = useState('');\r\n\r\n  const [staffUsers, setStaffUsers] = useState([]);\r\n  const [availableStaff, setAvailableStaff] = useState([]);\r\n  const [assignedStaff, setAssignedStaff] = useState([]);\r\n  const [searchStaff, setSearchStaff] = useState('');\r\n\r\n  const [hrSiteUsers, setHrSiteUsers] = useState([]);\r\n  const [availableHR, setAvailableHR] = useState([]);\r\n  const [assignedHR, setAssignedHR] = useState([]);\r\n  const [searchHR, setSearchHR] = useState('');\r\n\r\n  const [assignedLocations, setAssignedLocations] = useState([]);\r\n  const [manpowerList, setManpowerList] = useState([]);\r\n  const [searchManpower, setSearchManpower] = useState('');\r\n  const [availableManpower, setAvailableManpower] = useState([]);\r\n  const [assignedManpower, setAssignedManpower] = useState([]);\r\n  const [csvError, setCsvError] = useState('');\r\n  const [photos, setPhotos] = useState([]);\r\n  const [isPhotoDrag, setIsPhotoDrag] = useState(false);\r\n  const [isDocDrag, setIsDocDrag] = useState(false);\r\n  const [isBudgetDrag, setIsBudgetDrag] = useState(false); // drag state for budget PDFs\r\n  const [showCsvHelp, setShowCsvHelp] = useState(false); // CSV guide modal\r\n\r\n  const [formData, setFormData] = useState({\r\n    projectName: '',\r\n    pic: [],\r\n    staff: [],\r\n    hrsite: [],\r\n    contractor: 'FADZ',\r\n    contractorType: 'Contractor',\r\n    budget: '',\r\n    location: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    manpower: [],\r\n    projectmanager: '',\r\n    areamanager: userId || ''\r\n  });\r\n  // Formatted display value for budget (with commas) separate from raw budget in formData\r\n  const [budgetDisplay, setBudgetDisplay] = useState('');\r\n\r\n  // Removed manpowerCategories (category badges no longer used). Backend no longer receives this mapping.\r\n\r\n  useEffect(() => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      areamanager: userId || ''\r\n    }));\r\n  }, [userId]);\r\n\r\n  // Ensure contractor stays preset (in case of any unintended clears)\r\n  useEffect(() => {\r\n    setFormData(prev => prev.contractor ? prev : { ...prev, contractor: 'FADZ' });\r\n  }, []);\r\n\r\n  // Fetch eligible PMs, available PIC/Staff/HR, manpower\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        // PMs (change endpoint if you have a dedicated one for PMs)\r\n        const pmRes = await api.get('/users/unassigned-pms');\r\n        setEligiblePMs(Array.isArray(pmRes.data) ? pmRes.data : pmRes.data.data || []);\r\n        // PIC\r\n        const picRes = await api.get('/projects/unassigned-pics');\r\n        setPicUsers(picRes.data || []);\r\n        setAvailablePICs(picRes.data || []);\r\n        // Staff\r\n        const staffRes = await api.get('/projects/unassigned-staff');\r\n        setStaffUsers(staffRes.data || []);\r\n        setAvailableStaff(staffRes.data || []);\r\n        // HR Site\r\n        const hrRes = await api.get('/projects/unassigned-hrsite');\r\n        setHrSiteUsers(hrRes.data || []);\r\n        setAvailableHR(hrRes.data || []);\r\n        // Manpower\r\n        const manpowerRes = await api.get('/manpower/unassigned');\r\n        setManpowerList(manpowerRes.data);\r\n        setAvailableManpower(manpowerRes.data);\r\n      } catch (err) {\r\n        console.error('Failed to fetch users:', err);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Assign logic (PIC)\r\n  const filteredAvailablePICs = availablePICs.filter(u =>\r\n    !assignedPICs.some(a => a._id === u._id) &&\r\n    u.name.toLowerCase().includes(searchPIC.toLowerCase())\r\n  );\r\n  const handleAssignPIC = (user) => {\r\n    if (!assignedPICs.some(u => u._id === user._id)) {\r\n      setAssignedPICs(prev => [...prev, user]);\r\n      setAvailablePICs(prev => prev.filter(u => u._id !== user._id));\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        pic: [...prev.pic, user._id]\r\n      }));\r\n    }\r\n  };\r\n  const handleRemovePIC = (user) => {\r\n    setAvailablePICs(prev => [...prev, user]);\r\n    setAssignedPICs(prev => prev.filter(u => u._id !== user._id));\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      pic: prev.pic.filter(id => id !== user._id)\r\n    }));\r\n  };\r\n\r\n  // Assign logic (Staff)\r\n  const filteredAvailableStaff = availableStaff.filter(u =>\r\n    !assignedStaff.some(a => a._id === u._id) &&\r\n    u.name.toLowerCase().includes(searchStaff.toLowerCase())\r\n  );\r\n  const handleAssignStaff = (user) => {\r\n    if (!assignedStaff.some(u => u._id === user._id)) {\r\n      setAssignedStaff(prev => [...prev, user]);\r\n      setAvailableStaff(prev => prev.filter(u => u._id !== user._id));\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        staff: [...(prev.staff || []), user._id]\r\n      }));\r\n    }\r\n  };\r\n  const handleRemoveStaff = (user) => {\r\n    setAvailableStaff(prev => [...prev, user]);\r\n    setAssignedStaff(prev => prev.filter(u => u._id !== user._id));\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      staff: (prev.staff || []).filter(id => id !== user._id)\r\n    }));\r\n  };\r\n\r\n  // Assign logic (HR)\r\n  const filteredAvailableHR = availableHR.filter(u =>\r\n    !assignedHR.some(a => a._id === u._id) &&\r\n    u.name.toLowerCase().includes(searchHR.toLowerCase())\r\n  );\r\n  const handleAssignHR = (user) => {\r\n    if (!assignedHR.some(u => u._id === user._id)) {\r\n      setAssignedHR(prev => [...prev, user]);\r\n      setAvailableHR(prev => prev.filter(u => u._id !== user._id));\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        hrsite: [...(prev.hrsite || []), user._id]\r\n      }));\r\n    }\r\n  };\r\n  const handleRemoveHR = (user) => {\r\n    setAvailableHR(prev => [...prev, user]);\r\n    setAssignedHR(prev => prev.filter(u => u._id !== user._id));\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      hrsite: (prev.hrsite || []).filter(id => id !== user._id)\r\n    }));\r\n  };\r\n\r\n  // Clear-all helpers (ensure uniqueness when returning to available pools)\r\n  const uniqueById = (arr) => {\r\n    const m = new Map();\r\n    arr.forEach(o => { if(o && o._id) m.set(o._id, o); });\r\n    return Array.from(m.values());\r\n  };\r\n  const handleClearPICs = () => {\r\n    if(!assignedPICs.length) return;\r\n    setAvailablePICs(prev => uniqueById([...prev, ...assignedPICs]));\r\n    setAssignedPICs([]);\r\n    setFormData(prev => ({...prev, pic: []}));\r\n  };\r\n  const handleClearStaffAll = () => {\r\n    if(!assignedStaff.length) return;\r\n    setAvailableStaff(prev => uniqueById([...prev, ...assignedStaff]));\r\n    setAssignedStaff([]);\r\n    setFormData(prev => ({...prev, staff: []}));\r\n  };\r\n  const handleClearHRAll = () => {\r\n    if(!assignedHR.length) return;\r\n    setAvailableHR(prev => uniqueById([...prev, ...assignedHR]));\r\n    setAssignedHR([]);\r\n    setFormData(prev => ({...prev, hrsite: []}));\r\n  };\r\n  // NOTE: Removed original handleClearManpowerAll to avoid duplicate declaration.\r\n  // The updated version with category reset is defined further below.\r\n\r\n  // Fetch locations (if needed)\r\n  useEffect(() => {\r\n    if (userId) {\r\n      api.get(`/users/${userId}/locations`)\r\n        .then(res => setAssignedLocations(res.data))\r\n        .catch(() => setAssignedLocations([]));\r\n    }\r\n  }, [userId]);\r\n\r\n  // Keep manpower in formData in sync\r\n  useEffect(() => {\r\n    setFormData(prev => ({ ...prev, manpower: assignedManpower.map(m => m._id) }));\r\n  }, [assignedManpower]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if(name === 'budget') return; // handled by handleBudgetChange\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Budget formatting handler (adds commas, keeps raw numeric in formData.budget)\r\n  const handleBudgetChange = (e) => {\r\n    let val = e.target.value || '';\r\n    // Keep only digits and optional decimal point\r\n    val = val.replace(/[^0-9.]/g,'');\r\n    // If multiple decimals, keep first\r\n    const parts = val.split('.');\r\n    if(parts.length > 2) {\r\n      val = parts[0] + '.' + parts.slice(1).join('');\r\n    }\r\n    const [intPartRaw, decPartRaw] = val.split('.');\r\n  // Limit integer digits to 15 to prevent absurdly long numbers stretching perceived layout\r\n  const intPartLimited = (intPartRaw || '').slice(0,15);\r\n  const intPart = intPartLimited.replace(/^0+(\\d)/,'$1');\r\n    const withCommas = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    const decPart = typeof decPartRaw === 'string' ? decPartRaw.slice(0,2) : undefined; // limit to 2 decimals\r\n    const formatted = decPart !== undefined && decPart.length>0 ? `${withCommas}.${decPart}` : withCommas;\r\n    setBudgetDisplay(formatted);\r\n  const rawForState = decPart !== undefined && decPart.length>0 ? `${intPartLimited}.${decPart}` : intPartLimited;\r\n  setFormData(prev => ({ ...prev, budget: rawForState })); // raw numeric (no commas)\r\n  };\r\n  // Initialize display when raw budget changes programmatically\r\n  useEffect(()=>{\r\n    if(formData.budget === ''){ setBudgetDisplay(''); return; }\r\n    const parts = String(formData.budget).split('.');\r\n    const intPart = parts[0] || '0';\r\n    const withCommas = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    const dec = parts[1] ? '.'+parts[1] : '';\r\n    const nextFormatted = withCommas + dec;\r\n    if(nextFormatted !== budgetDisplay) setBudgetDisplay(nextFormatted);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [formData.budget]);\r\n\r\n  // Helpers formatting\r\n  const formatBytes = (bytes) => {\r\n    if (!bytes) return '0 B';\r\n    const sizes = ['B','KB','MB','GB'];\r\n    const i = Math.floor(Math.log(bytes)/Math.log(1024));\r\n    return `${(bytes/Math.pow(1024,i)).toFixed( (i===0)?0:1 )} ${sizes[i]}`;\r\n  };\r\n\r\n  // Photo handlers\r\n  const onPhotosSelected = useCallback(files => {\r\n    if (!files) return;\r\n    const list = Array.from(files); // basic validation could be added\r\n    setPhotos(prev => [...prev, ...list]);\r\n  },[]);\r\n  const handlePhotoInput = (e) => {\r\n    onPhotosSelected(e.target.files);\r\n  };\r\n  const handleRemovePhoto = (index) => {\r\n    setPhotos(prev => prev.filter((_,i)=>i!==index));\r\n  };\r\n  const handlePhotoDragOver = (e) => { e.preventDefault(); setIsPhotoDrag(true); };\r\n  const handlePhotoDragLeave = (e) => { e.preventDefault(); setIsPhotoDrag(false); };\r\n  const handlePhotoDrop = (e) => { e.preventDefault(); setIsPhotoDrag(false); onPhotosSelected(e.dataTransfer.files); };\r\n\r\n  // Document handlers\r\n  const onDocsSelected = useCallback(files => {\r\n    if (!files) return;\r\n    const list = Array.from(files);\r\n    setDocuments(prev => [...prev, ...list]);\r\n  },[]);\r\n  const handleDocInput = (e) => { onDocsSelected(e.target.files); };\r\n  const handleRemoveDoc = (index) => { setDocuments(prev => prev.filter((_,i)=>i!==index)); };\r\n  const handleDocDragOver = (e) => { e.preventDefault(); setIsDocDrag(true); };\r\n  const handleDocDragLeave = (e) => { e.preventDefault(); setIsDocDrag(false); };\r\n  const handleDocDrop = (e) => { e.preventDefault(); setIsDocDrag(false); onDocsSelected(e.dataTransfer.files); };\r\n\r\n  // Budget PDF handlers (single style consistent with others but can take multiple; first parsed)\r\n  const onBudgetSelected = useCallback(files => {\r\n    if (!files) return;\r\n    const list = Array.from(files).filter(f => f.type === 'application/pdf');\r\n    if (!list.length) return;\r\n    setBudgetFiles(prev => {\r\n      // Avoid duplicate names (same size) being added twice\r\n      const existingKeys = new Set(prev.map(f => `${f.name}|${f.size}`));\r\n      const merged = [...prev];\r\n      list.forEach(f => {\r\n        const key = `${f.name}|${f.size}`;\r\n        if (!existingKeys.has(key)) merged.push(f);\r\n      });\r\n      return merged;\r\n    });\r\n  }, []);\r\n  const handleBudgetInput = (e) => { onBudgetSelected(e.target.files); };\r\n  const handleRemoveBudget = (index) => { setBudgetFiles(prev => prev.filter((_,i)=>i!==index)); };\r\n  const handleBudgetDragOver = (e) => { e.preventDefault(); setIsBudgetDrag(true); };\r\n  const handleBudgetDragLeave = (e) => { e.preventDefault(); setIsBudgetDrag(false); };\r\n  const handleBudgetDrop = (e) => { e.preventDefault(); setIsBudgetDrag(false); onBudgetSelected(e.dataTransfer.files); };\r\n\r\n  // Manpower assign\r\n  const filteredAvailableManpower = availableManpower.filter(mp => {\r\n    const matchesSearch = (\r\n      mp.name.toLowerCase().includes(searchManpower.toLowerCase()) ||\r\n      mp.position.toLowerCase().includes(searchManpower.toLowerCase())\r\n    );\r\n    if(!matchesSearch) return false;\r\n    if(assignedManpower.some(assignedMp => assignedMp._id === mp._id)) return false;\r\n    return true;\r\n  });\r\n  // Updated manpower assignment logic integrating auto category\r\n  const handleAssignManpower = (mp) => {\r\n    // prevent duplicates\r\n    setAssignedManpower(prev => {\r\n      if (prev.some(m => m._id === mp._id)) return prev;\r\n      return [...prev, mp];\r\n    });\r\n    setAvailableManpower(prev => prev.filter(m => m._id !== mp._id));\r\n  // category detection removed\r\n  };\r\n  const handleRemoveManpower = (mp) => {\r\n    setAvailableManpower(prev => {\r\n      // ensure not duplicated back\r\n      if (prev.some(m => m._id === mp._id)) return prev;\r\n      return [...prev, mp];\r\n    });\r\n    setAssignedManpower(prev => prev.filter(m => m._id !== mp._id));\r\n    // Removed category mapping population\r\n  };\r\n  const handleClearManpowerAll = () => {\r\n    if (!assignedManpower.length) return;\r\n    setAvailableManpower(prev => {\r\n      const merged = [...prev, ...assignedManpower];\r\n      const seen = new Set();\r\n      return merged.filter(m => {\r\n        if (seen.has(m._id)) return false;\r\n        seen.add(m._id);\r\n        return true;\r\n      });\r\n    });\r\n    setAssignedManpower([]);\r\n  // Removed manpowerCategories append (feature deprecated)\r\n  };\r\n\r\n  // CSV upload for manpower\r\n  const handleCSVUpload = (e) => {\r\n    setCsvError('');\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    Papa.parse(file, {\r\n      header: true,\r\n      skipEmptyLines: true,\r\n      complete: async (results) => {\r\n        const csvData = results.data;\r\n        const errors = results.errors;\r\n\r\n        if (errors.length > 0) {\r\n          setCsvError(`CSV Upload Error: ${errors[0].message}`);\r\n          return;\r\n        }\r\n\r\n        if (csvData.length === 0) {\r\n          setCsvError('No data found in CSV file.');\r\n          return;\r\n        }\r\n        // New behavior: QUICK ASSIGN existing manpower (no creation)\r\n        const notFound = [];\r\n        const duplicatesInCSV = [];\r\n        const alreadyAssigned = [];\r\n        const invalid = [];\r\n        const matched = [];\r\n        const seenKeys = new Set();\r\n\r\n        // Build lookup map of available (unassigned) manpower by name|position (case-insensitive)\r\n        const availableMap = new Map();\r\n        availableManpower.forEach(mp => {\r\n          const key = `${mp.name.trim().toLowerCase()}|${mp.position.trim().toLowerCase()}`;\r\n            if(!availableMap.has(key)) availableMap.set(key, mp);\r\n        });\r\n\r\n        csvData.forEach((row, idx) => {\r\n          const name = (row['Name'] || row['name'] || '').trim();\r\n          const position = (row['Position'] || row['position'] || '').trim();\r\n          if(!name || !position){\r\n            invalid.push(`Row ${idx+1}`);\r\n            return;\r\n          }\r\n          const key = `${name.toLowerCase()}|${position.toLowerCase()}`;\r\n          if(seenKeys.has(key)){\r\n            duplicatesInCSV.push(`Row ${idx+1}`);\r\n            return;\r\n          }\r\n          seenKeys.add(key);\r\n          // Already assigned in current selection?\r\n          const already = assignedManpower.find(m => m.name.trim().toLowerCase() === name.toLowerCase() && m.position.trim().toLowerCase() === position.toLowerCase());\r\n          if(already){\r\n            alreadyAssigned.push(`${name} - ${position}`);\r\n            return;\r\n          }\r\n          const found = availableMap.get(key);\r\n          if(found){\r\n            matched.push(found);\r\n            // Remove from map so it can't match again (avoid duplicate assignment if CSV contains same)\r\n            availableMap.delete(key);\r\n          } else {\r\n            notFound.push(`${name} - ${position}`);\r\n          }\r\n        });\r\n\r\n        if(matched.length){\r\n          setAssignedManpower(prev => [...prev, ...matched]);\r\n          const matchedIds = new Set(matched.map(m=>m._id));\r\n          setAvailableManpower(prev => prev.filter(m => !matchedIds.has(m._id)));\r\n          toast.success(`Quick-assigned ${matched.length} manpower${notFound.length? ` (${notFound.length} not found)`:''}.`);\r\n        } else {\r\n          setCsvError('No matches found in CSV for existing unassigned manpower.');\r\n        }\r\n\r\n        // Detailed error summary (non-blocking if matches succeeded)\r\n        const details = [];\r\n        if(invalid.length) details.push(`Invalid rows: ${invalid.join(', ')}`);\r\n        if(duplicatesInCSV.length) details.push(`Duplicate rows: ${duplicatesInCSV.join(', ')}`);\r\n        if(alreadyAssigned.length) details.push(`Already selected: ${alreadyAssigned.slice(0,10).join('; ')}${alreadyAssigned.length>10?'…':''}`);\r\n        if(notFound.length && matched.length) details.push(`Not found: ${notFound.slice(0,10).join('; ')}${notFound.length>10?'…':''}`);\r\n        if(details.length) setCsvError(details.join(' | ')); else if(matched.length) setCsvError('');\r\n\r\n        // Within handleCSVUpload function after successfully constructing each mpObj and before updating state, ensure category mapping:\r\n        // category detection removed\r\n      },\r\n      error: (err) => {\r\n        console.error('CSV Parsing Error:', err);\r\n        setCsvError('Error parsing CSV file. Please ensure it is a valid CSV and try again.');\r\n      }\r\n    });\r\n  };\r\n\r\n  // Submit handler\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (submitting) return; // guard double-click\r\n  // Required field validations\r\n  if (!formData.projectName.trim()) { toast.error('Project name is required.'); return; }\r\n  if (!formData.contractor.trim()) { toast.error('Contractor is required.'); return; }\r\n  if (!formData.contractorType) { toast.error('Contractor Type is required.'); return; }\r\n  if (!formData.budget) { toast.error('Budget is required.'); return; }\r\n  if (!formData.location) { toast.error('Location is required.'); return; }\r\n  if (!formData.startDate || !formData.endDate) { toast.error('Please select both start and end dates.'); return; }\r\n  if (!formData.projectmanager) { toast.error('Project Manager is required.'); return; }\r\n  if (!formData.pic.length) { toast.error('At least one PIC must be assigned.'); return; }\r\n  if (!formData.manpower.length) { toast.error('At least one manpower entry must be assigned.'); return; }\r\n  if (!budgetFiles.length) { toast.error('A Budget PDF is required.'); return; }\r\n    if (new Date(formData.endDate) < new Date(formData.startDate)) {\r\n      toast.error(\"End date cannot be before start date.\");\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    const stored = localStorage.getItem('user');\r\n    const user = stored ? JSON.parse(stored) : null;\r\n    const userId = user?._id;\r\n\r\n    const form = new FormData();\r\n    Object.entries({ ...formData, areamanager: userId }).forEach(([key, value]) => {\r\n      if (Array.isArray(value)) {\r\n        value.forEach(v => form.append(key, v));\r\n      } else {\r\n        form.append(key, value);\r\n      }\r\n    });\r\n    photos.forEach(file => form.append('photos', file));\r\n  documents.forEach(file => form.append('documents', file));\r\n  budgetFiles.forEach(file => form.append('budgetPdf', file));\r\n  // manpowerCategories removed from submission\r\n\r\n    try {\r\n      const { data } = await api.post('/projects', form, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      // Redirect to newly created project detail with flash state; rely on server response _id\r\n      if (data && data._id) {\r\n        navigate(`/am/projects/${data._id}`, { state: { justCreated: true, projectName: data.projectName } });\r\n      } else {\r\n        navigate('/am');\r\n      }\r\n    } catch (error) {\r\n      const result = error.response?.data;\r\n      toast.error(result?.message || result?.error || 'Failed to add project');\r\n      console.error('❌ Submission error:', error);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Unified header: logout handler for AppHeader\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/');\r\n  };\r\n\r\n  // Close CSV help with ESC\r\n  useEffect(()=>{\r\n    if(!showCsvHelp) return;\r\n    const onKey = (e)=> { if(e.key==='Escape') setShowCsvHelp(false); };\r\n    window.addEventListener('keydown', onKey);\r\n    return ()=> window.removeEventListener('keydown', onKey);\r\n  },[showCsvHelp]);\r\n\r\n  // Removed detectManpowerCategory (no longer needed)\r\n\r\n  // State to manage collapsed groups in manpower list\r\nconst [collapsedGroups, setCollapsedGroups] = useState(()=>{\r\n  try { const raw = localStorage.getItem('mp_collapsed'); return raw? JSON.parse(raw): {}; } catch { return {}; }\r\n});\r\n// Enhanced grouping with counts\r\nconst groupedManpower = useMemo(()=>{\r\n  const groups = {};\r\n  filteredAvailableManpower.forEach(mp => {\r\n    const key = (mp.position || 'Unspecified').trim();\r\n    if(!groups[key]) groups[key] = { position:key, list:[], total:0 };\r\n    groups[key].list.push(mp);\r\n  });\r\n  // also compute total from full available list (pre-filter) if needed\r\n  const totals = {};\r\n  availableManpower.forEach(mp => {\r\n    const key = (mp.position || 'Unspecified').trim();\r\n    totals[key] = (totals[key]||0) + 1;\r\n  });\r\n  return Object.values(groups)\r\n    .map(g => ({ ...g, total: totals[g.position] || g.list.length }))\r\n    .sort((a,b)=> a.position.localeCompare(b.position));\r\n}, [filteredAvailableManpower, availableManpower]);\r\nconst toggleGroup = (pos) => setCollapsedGroups(prev => {\r\n  const next = { ...prev, [pos]: !prev[pos] };\r\n  try { localStorage.setItem('mp_collapsed', JSON.stringify(next)); } catch {}\r\n  return next;\r\n});\r\n// Expand / Collapse all\r\nconst expandAllGroups = () => {\r\n  const next = {};\r\n  groupedManpower.forEach(g => { next[g.position] = false; });\r\n  setCollapsedGroups(next); try { localStorage.setItem('mp_collapsed', JSON.stringify(next)); } catch {}\r\n};\r\nconst collapseAllGroups = () => {\r\n  const next = {};\r\n  groupedManpower.forEach(g => { next[g.position] = true; });\r\n  setCollapsedGroups(next); try { localStorage.setItem('mp_collapsed', JSON.stringify(next)); } catch {}\r\n};\r\n\r\n// Incremental loading logic per group\r\nconst GROUP_CHUNK = 25;\r\nconst [groupVisibleCounts, setGroupVisibleCounts] = useState(()=>{\r\n  try { const raw = localStorage.getItem('mp_visible_counts'); return raw? JSON.parse(raw): {}; } catch { return {}; }\r\n});\r\nconst visibleCountFor = (pos, total) => Math.min(groupVisibleCounts[pos] || GROUP_CHUNK, total);\r\nconst loadMoreGroup = (pos, total) => setGroupVisibleCounts(prev => {\r\n  const nextVal = Math.min((prev[pos] || GROUP_CHUNK) + GROUP_CHUNK, total);\r\n  const next = { ...prev, [pos]: nextVal };\r\n  try { localStorage.setItem('mp_visible_counts', JSON.stringify(next)); } catch {}\r\n  return next;\r\n});\r\nconst loadAllGroup = (pos, total) => setGroupVisibleCounts(prev => {\r\n  const next = { ...prev, [pos]: total };\r\n  try { localStorage.setItem('mp_visible_counts', JSON.stringify(next)); } catch {}\r\n  return next;\r\n});\r\n\r\n  // Group assigned manpower by position for grouped display\r\n  const groupedAssignedManpower = useMemo(()=>{\r\n    if(!assignedManpower.length) return [];\r\n    const groups = {};\r\n    assignedManpower.forEach(mp => {\r\n      const key = (mp.position || 'Unspecified').trim();\r\n      if(!groups[key]) groups[key] = [];\r\n      groups[key].push(mp);\r\n    });\r\n    return Object.keys(groups)\r\n      .sort((a,b)=>a.localeCompare(b))\r\n      .map(k => ({ position:k, list:groups[k].sort((a,b)=>a.name.localeCompare(b.name)) }));\r\n  }, [assignedManpower]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Unified AppHeader for Area Manager */}\r\n      <AppHeader roleSegment=\"am\" onLogout={handleLogout} />\r\n\r\n      {/* Main Form */}\r\n      <main className=\"area-addproj-main-content\">\r\n        <div className=\"area-addproj-form-container\">\r\n          <h2 className=\"area-addproj-page-title\">Add New Project</h2>\r\n          <form onSubmit={handleSubmit} className=\"area-addproj-project-form\">\r\n            {/* Project Details Card */}\r\n            <div className=\"section-card meta-card\">\r\n              <div className=\"section-card-header\"><h3>Project Details</h3><span className=\"section-hint\">Core information</span></div>\r\n              <div className=\"area-addproj-field-grid\">\r\n                <div className=\"area-addproj-form-group grid-span-2\">\r\n                  <label htmlFor=\"projectName\">Project Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"projectName\"\r\n                    name=\"projectName\"\r\n                    placeholder=\"Enter project name\"\r\n                    value={formData.projectName}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"area-addproj-form-group\">\r\n                  <label htmlFor=\"contractorType\">Contractor Type</label>\r\n                  <select\r\n                    id=\"contractorType\"\r\n                    name=\"contractorType\"\r\n                    value={formData.contractorType}\r\n                    onChange={handleChange}\r\n                    required\r\n                  >\r\n                    <option value=\"Contractor\">Contractor</option>\r\n                    <option value=\"Sub Contractor\">Sub Contractor</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"area-addproj-form-group\">\r\n                  <label htmlFor=\"contractor\">Contractor Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"contractor\"\r\n                    name=\"contractor\"\r\n                    value={formData.contractor || 'FADZ'}\r\n                    readOnly\r\n                    disabled\r\n                    style={{background:'#f1f5f9',cursor:'not-allowed', fontWeight:600}}\r\n                  />\r\n                </div>\r\n                <div className=\"area-addproj-form-group\">\r\n                  <label htmlFor=\"projectmanager\">Project Manager</label>\r\n                  <select\r\n                    id=\"projectmanager\"\r\n                    name=\"projectmanager\"\r\n                    value={formData.projectmanager}\r\n                    onChange={handleChange}\r\n                    required\r\n                  >\r\n                    <option value=\"\">-- Select Project Manager --</option>\r\n                    {eligiblePMs.map((user) => (\r\n                      <option key={user._id} value={user._id}>{user.name}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"area-addproj-form-group\">\r\n                  <label htmlFor=\"budget\">Budget</label>\r\n                  <div className=\"currency-field\">\r\n                    <span style={{fontSize:14,color:'#64748b',marginRight:4}}>₱</span>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"budget\"\r\n                      name=\"budget\"\r\n                      inputMode=\"decimal\"\r\n                      placeholder=\"0.00\"\r\n                      value={budgetDisplay}\r\n                      onChange={handleBudgetChange}\r\n                      style={{flex:1,border:'none',outline:'none',background:'transparent'}}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  {/* Removed raw value helper per request */}\r\n                </div>\r\n                <div className=\"area-addproj-form-group\">\r\n                  <label htmlFor=\"location\">Location</label>\r\n                  <select\r\n                    id=\"location\"\r\n                    name=\"location\"\r\n                    value={formData.location}\r\n                    onChange={handleChange}\r\n                    required\r\n                  >\r\n                    <option value=\"\">-- Select Location --</option>\r\n                    {assignedLocations.map(loc => (\r\n                      <option key={loc._id} value={loc._id}>{loc.name} ({loc.region})</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"area-addproj-form-group\">\r\n                  <label htmlFor=\"startDate\">Start Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"startDate\"\r\n                    name=\"startDate\"\r\n                    value={formData.startDate}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"area-addproj-form-group\">\r\n                  <label htmlFor=\"endDate\">End Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"endDate\"\r\n                    name=\"endDate\"\r\n                    value={formData.endDate}\r\n                    onChange={handleChange}\r\n                    required\r\n                    min={formData.startDate}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Assignment Panels (PIC / Staff / HR) */}\r\n            <div className=\"section-card assignments-wrapper\" role=\"group\" aria-label=\"Assign PIC, Staff and HR\">\r\n              <div className=\"section-card-header\"><h3>Team Roles</h3><span className=\"section-hint\">Assign PIC / Staff / HR</span></div>\r\n              <div className=\"assign-sections-grid\">\r\n              {/* PIC */}\r\n              <section className=\"assign-card\" aria-labelledby=\"pic-heading\">\r\n                <header className=\"assign-card-header\">\r\n                  <h4 id=\"pic-heading\">Person In Charge <span className=\"count-chip\">{assignedPICs.length}</span></h4>\r\n                  <div className=\"muted\" style={{display:'flex',alignItems:'center',gap:8}}>\r\n                    <span>Select & add</span>\r\n                    {assignedPICs.length>0 && (\r\n                      <button type=\"button\" onClick={handleClearPICs} className=\"clear-btn\" style={{background:'transparent',border:'1px solid #ccc',padding:'2px 6px',borderRadius:4,cursor:'pointer',fontSize:12}}>Clear All</button>\r\n                    )}\r\n                  </div>\r\n                </header>\r\n                <div className=\"assign-body\">\r\n                  <div className=\"search-row\">\r\n                    <input placeholder=\"Search PIC\" value={searchPIC} onChange={e=>setSearchPIC(e.target.value)} />\r\n                  </div>\r\n                  <div className=\"role-dual-grid\" aria-label=\"PIC selection lists\">\r\n                    <ul className=\"available-list\" aria-label=\"Available PICs\">\r\n                      {filteredAvailablePICs.slice(0,60).map(u => (\r\n                        <li key={u._id}>\r\n                          <button type=\"button\" onClick={()=>handleAssignPIC(u)} title=\"Add PIC\">\r\n                            <span className=\"avatar-sm\">{u.name.charAt(0)}</span>\r\n                            <span className=\"label-text\">{u.name}</span>\r\n                            <span className=\"plus\">+</span>\r\n                          </button>\r\n                        </li>\r\n                      ))}\r\n                      {filteredAvailablePICs.length===0 && <li className=\"empty\">No matches</li>}\r\n                    </ul>\r\n                    <div className=\"assigned-list-wrapper\">\r\n                      <div className=\"assigned-subheader\">Selected</div>\r\n                      <ul className=\"assigned-list styled\" aria-label=\"Assigned PICs\">\r\n                        {assignedPICs.length===0 && <li className=\"empty\" style={{textAlign:'center'}}>None</li>}\r\n                        {assignedPICs.map(u => (\r\n                          <li key={u._id}>\r\n                            <div className=\"assigned-row-card\">\r\n                              <div className=\"assigned-row-main\">\r\n                                <span className=\"avatar-sm alt\">{u.name.charAt(0)}</span>\r\n                                <span className=\"label-text\">{u.name}</span>\r\n                              </div>\r\n                              <button type=\"button\" className=\"remove-pill\" onClick={()=>handleRemovePIC(u)} aria-label={`Remove ${u.name}`}>✕</button>\r\n                            </div>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              {/* Staff */}\r\n              <section className=\"assign-card\" aria-labelledby=\"staff-heading\">\r\n                <header className=\"assign-card-header\">\r\n                  <h4 id=\"staff-heading\">Staff <span className=\"count-chip\">{assignedStaff.length}</span></h4>\r\n                  <div className=\"muted\" style={{display:'flex',alignItems:'center',gap:8}}>\r\n                    <span>Support roles</span>\r\n                    {assignedStaff.length>0 && (\r\n                      <button type=\"button\" onClick={handleClearStaffAll} className=\"clear-btn\" style={{background:'transparent',border:'1px solid #ccc',padding:'2px 6px',borderRadius:4,cursor:'pointer',fontSize:12}}>Clear All</button>\r\n                    )}\r\n                  </div>\r\n                </header>\r\n                <div className=\"assign-body\">\r\n                  <div className=\"search-row\">\r\n                    <input placeholder=\"Search Staff\" value={searchStaff} onChange={e=>setSearchStaff(e.target.value)} />\r\n                  </div>\r\n                  <div className=\"role-dual-grid\" aria-label=\"Staff selection lists\">\r\n                    <ul className=\"available-list\" aria-label=\"Available Staff\">\r\n                      {filteredAvailableStaff.slice(0,60).map(u => (\r\n                        <li key={u._id}>\r\n                          <button type=\"button\" onClick={()=>handleAssignStaff(u)}>\r\n                            <span className=\"avatar-sm\">{u.name.charAt(0)}</span>\r\n                            <span className=\"label-text\">{u.name}</span>\r\n                            <span className=\"plus\">+</span>\r\n                          </button>\r\n                        </li>\r\n                      ))}\r\n                      {filteredAvailableStaff.length===0 && <li className=\"empty\">No matches</li>}\r\n                    </ul>\r\n                    <div className=\"assigned-list-wrapper\">\r\n                      <div className=\"assigned-subheader\">Selected</div>\r\n                      <ul className=\"assigned-list styled\" aria-label=\"Assigned Staff\">\r\n                        {assignedStaff.length===0 && <li className=\"empty\" style={{textAlign:'center'}}>None</li>}\r\n                        {assignedStaff.map(u => (\r\n                          <li key={u._id}>\r\n                            <div className=\"assigned-row-card\">\r\n                              <div className=\"assigned-row-main\">\r\n                                <span className=\"avatar-sm alt\">{u.name.charAt(0)}</span>\r\n                                <span className=\"label-text\">{u.name}</span>\r\n                              </div>\r\n                              <button type=\"button\" className=\"remove-pill\" onClick={()=>handleRemoveStaff(u)} aria-label={`Remove ${u.name}`}>✕</button>\r\n                            </div>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              {/* HR */}\r\n              <section className=\"assign-card\" aria-labelledby=\"hr-heading\">\r\n                <header className=\"assign-card-header\">\r\n                  <h4 id=\"hr-heading\">HR - Site <span className=\"count-chip\">{assignedHR.length}</span></h4>\r\n                  <div className=\"muted\" style={{display:'flex',alignItems:'center',gap:8}}>\r\n                    <span>Site HR</span>\r\n                    {assignedHR.length>0 && (\r\n                      <button type=\"button\" onClick={handleClearHRAll} className=\"clear-btn\" style={{background:'transparent',border:'1px solid #ccc',padding:'2px 6px',borderRadius:4,cursor:'pointer',fontSize:12}}>Clear All</button>\r\n                    )}\r\n                  </div>\r\n                </header>\r\n                <div className=\"assign-body\">\r\n                  <div className=\"search-row\">\r\n                    <input placeholder=\"Search HR - Site\" value={searchHR} onChange={e=>setSearchHR(e.target.value)} />\r\n                  </div>\r\n                  <div className=\"role-dual-grid\" aria-label=\"HR selection lists\">\r\n                    <ul className=\"available-list\" aria-label=\"Available HR\">\r\n                      {filteredAvailableHR.slice(0,60).map(u => (\r\n                        <li key={u._id}>\r\n                          <button type=\"button\" onClick={()=>handleAssignHR(u)}>\r\n                            <span className=\"avatar-sm\">{u.name.charAt(0)}</span>\r\n                            <span className=\"label-text\">{u.name}</span>\r\n                            <span className=\"plus\">+</span>\r\n                          </button>\r\n                        </li>\r\n                      ))}\r\n                      {filteredAvailableHR.length===0 && <li className=\"empty\">No matches</li>}\r\n                    </ul>\r\n                    <div className=\"assigned-list-wrapper\">\r\n                      <div className=\"assigned-subheader\">Selected</div>\r\n                      <ul className=\"assigned-list styled\" aria-label=\"Assigned HR\">\r\n                        {assignedHR.length===0 && <li className=\"empty\" style={{textAlign:'center'}}>None</li>}\r\n                        {assignedHR.map(u => (\r\n                          <li key={u._id}>\r\n                            <div className=\"assigned-row-card\">\r\n                              <div className=\"assigned-row-main\">\r\n                                <span className=\"avatar-sm alt\">{u.name.charAt(0)}</span>\r\n                                <span className=\"label-text\">{u.name}</span>\r\n                              </div>\r\n                              <button type=\"button\" className=\"remove-pill\" onClick={()=>handleRemoveHR(u)} aria-label={`Remove ${u.name}`}>✕</button>\r\n                            </div>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              </div>{/* end inner grid */}\r\n              {/* Summary Panel */}\r\n              <aside className=\"summary-panel\" aria-label=\"Selection Summary\">\r\n                <h4>Summary</h4>\r\n                <ul className=\"summary-list\">\r\n                  <li><strong>PICs:</strong> {assignedPICs.length}</li>\r\n                  <li><strong>Staff:</strong> {assignedStaff.length}</li>\r\n                  <li><strong>HR:</strong> {assignedHR.length}</li>\r\n                  <li><strong>Manpower:</strong> {assignedManpower.length}</li>\r\n                </ul>\r\n                <div className=\"summary-mini\">\r\n                  {[...assignedPICs, ...assignedStaff, ...assignedHR].slice(0,9).map(u => (\r\n                    <span key={u._id} className=\"mini-avatar\" title={u.name}>{u.name.charAt(0)}</span>\r\n                  ))}\r\n                  {assignedManpower.slice(0,6).map(m => (\r\n                    <span key={m._id} className=\"mini-avatar alt\" title={m.name}>{m.name.charAt(0)}</span>\r\n                  ))}\r\n                </div>\r\n                <p className=\"summary-note\">Review assigned people before submitting.</p>\r\n              </aside>\r\n            </div>\r\n\r\n            {/* Manpower Section */}\r\n            <section className=\"manpower-section section-card\" aria-labelledby=\"manpower-heading\">\r\n              <header className=\"assign-card-header compact\">\r\n                <h4 id=\"manpower-heading\">Manpower <span className=\"count-chip\">{assignedManpower.length}</span></h4>\r\n                <div className=\"manpower-tools\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search manpower by name or position\"\r\n                    value={searchManpower}\r\n                    onChange={e=>setSearchManpower(e.target.value)}\r\n                  />\r\n                  {assignedManpower.length>0 && (\r\n                    <button type=\"button\" onClick={handleClearManpowerAll} className=\"clear-btn\" style={{marginLeft:6,background:'transparent',border:'1px solid #ccc',padding:'4px 8px',borderRadius:4,cursor:'pointer',fontSize:12}}>Clear All</button>\r\n                  )}\r\n                  <div className=\"csv-uploader\">\r\n                    <input id=\"csvUpload\" type=\"file\" accept=\".csv\" style={{display:'none'}} onChange={handleCSVUpload} />\r\n                    <button type=\"button\" onClick={()=>document.getElementById('csvUpload').click()} className=\"area-addproj-csv-upload-btn small\">CSV</button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={()=> setShowCsvHelp(true)}\r\n                      className=\"area-addproj-csv-upload-btn small\"\r\n                      style={{ marginLeft: '5px', backgroundColor: '#17a2b8', borderColor: '#17a2b8', position:'relative' }}\r\n                      title=\"CSV Format Guide\"\r\n                    >?\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </header>\r\n              {csvError && <div className=\"area-addproj-manpower-error\" style={{marginTop:4}}>{csvError}</div>}\r\n              <div className=\"manpower-grid\">\r\n                <ul className=\"available-list tall\" aria-label=\"Available Manpower\">\r\n                  {groupedManpower.length === 0 && (\r\n                    <div style={{fontSize:12,color:'#666',padding:'4px 0'}}>No manpower found.</div>\r\n                  )}\r\n                  <div className=\"grouped-manpower-scroll\">\r\n                    {groupedManpower.map(g => (\r\n                      <div key={g.position} className=\"mp-group-card\">\r\n                        <header className=\"mp-group-card-header\">\r\n                          <button type=\"button\" onClick={()=>toggleGroup(g.position)} aria-expanded={!collapsedGroups[g.position]} className=\"mp-group-toggle\">\r\n                            <span className=\"mp-group-title-text\">{g.position}</span>\r\n                            <span className=\"mp-group-count-pill\">{g.list.length} / {g.total}</span>\r\n                            <span className={`mp-group-caret ${collapsedGroups[g.position]? 'collapsed':''}`}>▾</span>\r\n                          </button>\r\n                        </header>\r\n                        {!collapsedGroups[g.position] && (\r\n                          <ul className=\"mp-group-people\" aria-label={`${g.position} manpower`}>\r\n                            {g.list.slice(0, visibleCountFor(g.position, g.list.length)).map(mp => (\r\n                              <li key={mp._id}>\r\n                                <button type=\"button\" className=\"mp-person-row\" onClick={()=>handleAssignManpower(mp)} title=\"Assign\">\r\n                                  <span className=\"avatar-sm\">{mp.name.charAt(0)}</span>\r\n                                  <span className=\"label-text\">{mp.name}<em> — {mp.position}</em></span>\r\n                                  <span className=\"plus\">+</span>\r\n                                </button>\r\n                              </li>\r\n                            ))}\r\n                            {visibleCountFor(g.position, g.list.length) < g.list.length && (\r\n                              <div style={{display:'flex',gap:8,flexWrap:'wrap',marginTop:4}}>\r\n                                <button type=\"button\" className=\"show-more-btn\" onClick={()=>loadMoreGroup(g.position, g.list.length)}>Load More (+{Math.min(GROUP_CHUNK, g.list.length - visibleCountFor(g.position, g.list.length))})</button>\r\n                                <button type=\"button\" className=\"show-more-btn\" onClick={()=>loadAllGroup(g.position, g.list.length)}>Show All ({g.list.length})</button>\r\n                              </div>\r\n                            )}\r\n                          </ul>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </ul>\r\n                <div className=\"assigned-groups\" aria-label=\"Assigned Manpower Groups\">\r\n                  {groupedAssignedManpower.length === 0 && (\r\n                    <div className=\"placeholder\" style={{padding:'4px 6px'}}>None assigned yet</div>\r\n                  )}\r\n                  {groupedAssignedManpower.map(g => (\r\n                    <div key={g.position} className=\"assigned-group-card\">\r\n                      <div className=\"assigned-group-title\">{g.position} <span className=\"mp-group-count-pill\">{g.list.length}</span></div>\r\n                      <ul className=\"assigned-group-people\" aria-label={`Assigned ${g.position}`}>\r\n                        {g.list.map(mp => (\r\n                          <li key={mp._id}>\r\n                            <button type=\"button\" onClick={()=>handleRemoveManpower(mp)} title=\"Remove\">\r\n                              <span className=\"avatar-sm\">{mp.name.charAt(0)}</span>\r\n                              <span className=\"label-text\">{mp.name}<em> — {mp.position}</em></span>\r\n                              <span className=\"remove-x\" aria-label={`Remove ${mp.name}`}>×</span>\r\n                            </button>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            {/* Media Upload Section */}\r\n            <div className=\"section-card media-card\">\r\n              <div className=\"section-card-header\"><h3>Assets</h3><span className=\"section-hint\">Photos & Documents</span></div>\r\n              <div className=\"upload-grid\">\r\n                <div className=\"uploader-block\">\r\n                  <h5>Project Photos</h5>\r\n                  <div\r\n                    className={`dropzone ${isPhotoDrag? 'drag' : ''}`}\r\n                    onDragOver={handlePhotoDragOver}\r\n                    onDragLeave={handlePhotoDragLeave}\r\n                    onDrop={handlePhotoDrop}\r\n                    onClick={()=>document.getElementById('photoInput').click()}\r\n                  >\r\n                    <input id=\"photoInput\" type=\"file\" accept=\"image/*\" multiple style={{display:'none'}} onChange={handlePhotoInput} />\r\n                    <p><strong>Click or Drag & Drop</strong> images here</p>\r\n                    <span className=\"hint\">PNG, JPG up to 5MB each</span>\r\n                  </div>\r\n                  {photos.length>0 && (\r\n                    <div className=\"thumbs-grid\">\r\n                      {photos.map((file,i)=>(\r\n                        <div key={i} className=\"thumb\">\r\n                          <img src={URL.createObjectURL(file)} alt={file.name} />\r\n                          <button type=\"button\" className=\"remove\" onClick={()=>handleRemovePhoto(i)} aria-label=\"Remove photo\">×</button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"uploader-block\">\r\n                  <h5>Project Documents</h5>\r\n                  <div\r\n                    className={`dropzone ${isDocDrag? 'drag' : ''}`}\r\n                    onDragOver={handleDocDragOver}\r\n                    onDragLeave={handleDocDragLeave}\r\n                    onDrop={handleDocDrop}\r\n                    onClick={()=>document.getElementById('docInput').click()}\r\n                  >\r\n                    <input id=\"docInput\" type=\"file\" accept=\".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt,.csv,.zip\" multiple style={{display:'none'}} onChange={handleDocInput} />\r\n                    <p><strong>Click or Drag & Drop</strong> files here</p>\r\n                    <span className=\"hint\">Docs, Sheets, Slides, PDF, CSV, ZIP</span>\r\n                  </div>\r\n                  {documents.length>0 && (\r\n                    <ul className=\"doc-list\">\r\n                      {documents.map((file,i)=>(\r\n                        <li key={i} className=\"doc-item\">\r\n                          <span className=\"ext-pill\">{(file.name.split('.').pop()||'').substring(0,4).toUpperCase()}</span>\r\n                          <span className=\"doc-name\" title={file.name}>{file.name}</span>\r\n                          <span className=\"size\">{formatBytes(file.size)}</span>\r\n                          <button type=\"button\" className=\"remove\" onClick={()=>handleRemoveDoc(i)} aria-label=\"Remove document\">×</button>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n                <div className=\"uploader-block\">\r\n                  <h5>Budget PDF(s)</h5>\r\n                  <div\r\n                    className={`dropzone ${isBudgetDrag? 'drag' : ''}`}\r\n                    onDragOver={handleBudgetDragOver}\r\n                    onDragLeave={handleBudgetDragLeave}\r\n                    onDrop={handleBudgetDrop}\r\n                    onClick={()=>document.getElementById('budgetPdfInput').click()}\r\n                  >\r\n                    <input\r\n                      id=\"budgetPdfInput\"\r\n                      type=\"file\"\r\n                      accept=\"application/pdf\"\r\n                      multiple\r\n                      style={{display:'none'}}\r\n                      onChange={handleBudgetInput}\r\n                    />\r\n                    <p><strong>Click or Drag & Drop</strong> budget PDFs here</p>\r\n                    <span className=\"hint\">PDF only • First file parsed for auto budget deduction</span>\r\n                  </div>\r\n                  {budgetFiles.length>0 && (\r\n                    <ul className=\"doc-list\">\r\n                      {budgetFiles.map((file,i)=>(\r\n                        <li key={file.name + i} className=\"doc-item\">\r\n                          <span className=\"ext-pill\">PDF</span>\r\n                          <span className=\"doc-name\" title={file.name}>{file.name}</span>\r\n                          <span className=\"size\">{formatBytes(file.size)}</span>\r\n                          <button type=\"button\" className=\"remove\" onClick={()=>handleRemoveBudget(i)} aria-label=\"Remove budget PDF\">×</button>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                  <small style={{display:'block',marginTop:4}}>{budgetFiles.length || 0} budget PDF{budgetFiles.length===1?'':'s'} selected</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"area-addproj-form-row area-addproj-submit-row\">\r\n              <button type=\"submit\" className=\"area-addproj-submit-button\" disabled={submitting}>\r\n                {submitting ? 'Submitting...' : 'Add Project'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </main>\r\n      {showCsvHelp && (\r\n        <div className=\"aa-modal-overlay\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"csv-help-title\">\r\n          <div className=\"aa-modal\" role=\"document\">\r\n            <div className=\"aa-modal-header\">\r\n              <h3 id=\"csv-help-title\">CSV Quick Assign Format</h3>\r\n            </div>\r\n            <div className=\"aa-modal-body\">\r\n              <p>This will <strong>MATCH</strong> existing unassigned manpower already in the system and add them to this project. It will <strong>NOT</strong> create new manpower.</p>\r\n              <p style={{marginTop:12,marginBottom:4,fontWeight:600,fontSize:13}}>Required columns (case-insensitive):</p>\r\n              <ul style={{marginTop:0,marginLeft:18,fontSize:13}}>\r\n                <li>Name</li>\r\n                <li>Position</li>\r\n              </ul>\r\n              <p style={{marginTop:12,marginBottom:4,fontWeight:600,fontSize:13}}>Rules:</p>\r\n              <ul style={{marginTop:0,marginLeft:18,fontSize:13,lineHeight:1.4}}>\r\n                <li>Each (Name, Position) pair must exactly match an existing <em>unassigned</em> manpower record.</li>\r\n                <li>Duplicates inside the CSV are ignored (first wins).</li>\r\n                <li>Rows with missing name or position are skipped.</li>\r\n                <li>Extra columns are ignored.</li>\r\n              </ul>\r\n              <p style={{marginTop:14,marginBottom:4,fontWeight:600,fontSize:13}}>Example:</p>\r\n<pre style={{background:'#0f172a',color:'#f1f5f9',padding:'10px 12px',borderRadius:8,fontSize:12,overflowX:'auto'}}>Name,Position\r\nJohn Doe,Engineer\r\nJane Smith,Manager\r\nMike Johnson,Technician</pre>\r\n            </div>\r\n            <div className=\"aa-modal-footer\">\r\n              <button type=\"button\" onClick={()=> setShowCsvHelp(false)} className=\"aa-btn-primary\" autoFocus>Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AreaAddproj;\r\n","\r\nimport React, { useState, useEffect, useMemo, useDeferredValue } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../../api/axiosInstance';\r\nimport AppHeader from '../layout/AppHeader';\r\nimport '../style/it_style/It_Projects.css';\r\nimport '../style/am_style/Area_Projects.css';\r\nimport { FaProjectDiagram, FaSearch, FaChevronUp, FaChevronDown, FaTh, FaList, FaMapMarkerAlt, FaUserTie, FaBuilding, FaCalendarAlt, FaUsers as FaUsersIcon, FaMoneyBillWave, FaClock, FaCheckCircle } from 'react-icons/fa';\r\n\r\nconst AreaProj = () => {\r\n  const navigate = useNavigate();\r\n  const [projects,setProjects]=useState([]);\r\n  const [loading,setLoading]=useState(true);\r\n  const [error,setError]=useState('');\r\n  const [filter,setFilter]=useState('all');\r\n  const [viewMode,setViewMode]=useState('grid');\r\n  const [searchTerm,setSearchTerm]=useState('');\r\n  const deferredSearch = useDeferredValue(searchTerm);\r\n  const [sortBy,setSortBy]=useState('name');\r\n  const [sortOrder,setSortOrder]=useState('asc');\r\n  const [page,setPage]=useState(1);\r\n  const [pageSize,setPageSize]=useState(12);\r\n\r\n  const stored = localStorage.getItem('user');\r\n  const user = stored ? JSON.parse(stored) : null;\r\n  const areaManagerId = user?._id;\r\n\r\n  useEffect(()=>{ let active=true; (async()=>{ try{ const {data}=await api.get('/projects'); if(!active) return; setProjects(Array.isArray(data)?data:[]);}catch{ if(active) setError('Failed to fetch projects'); } finally{ if(active) setLoading(false);} })(); return ()=>{active=false}; },[]);\r\n\r\n  const currencyFmt = useMemo(()=> new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',maximumFractionDigits:2}),[]);\r\n  const dateFmt = d=> d? new Date(d).toLocaleDateString(undefined,{month:'short',day:'numeric',year:'numeric'}):'';\r\n\r\n  const statusMeta = (statusRaw='')=>{ const s=statusRaw.toLowerCase(); if(s==='completed') return {color:'#10B981',Icon:FaCheckCircle,label:'Completed'}; if(['ongoing','on going'].includes(s)) return {color:'#3B82F6',Icon:FaClock,label:'Ongoing'}; if(['pending','not started'].includes(s)) return {color:'#F59E0B',Icon:FaClock,label:'Pending'}; return {color:'#6B7280',Icon:FaClock,label:statusRaw||'Unknown'}; };\r\n\r\n  // base projects for this area manager (handles both populated areamanager object and raw ObjectId string)\r\n  const baseProjects = useMemo(()=> {\r\n    if(!areaManagerId) return [];\r\n    return projects.filter(p=>{\r\n      if(!p.areamanager) return false;\r\n      // Populated reference object\r\n      if(typeof p.areamanager === 'object'){\r\n        const id = p.areamanager._id || p.areamanager.id;\r\n        return id && String(id) === String(areaManagerId);\r\n      }\r\n      // Raw id string\r\n      if(typeof p.areamanager === 'string'){\r\n        return String(p.areamanager) === String(areaManagerId);\r\n      }\r\n      return false;\r\n    });\r\n  }, [projects, areaManagerId]);\r\n\r\n  const filteredSorted = useMemo(()=>{ const srch=deferredSearch.trim().toLowerCase(); const subset = baseProjects\r\n      .filter(p=>{ const st=(p.status||'').toLowerCase(); if(filter==='completed') return st==='completed'; if(filter==='ongoing') return ['ongoing','on going'].includes(st); if(filter==='pending') return ['pending','not started'].includes(st); return true; })\r\n      .filter(p=>{ if(!srch) return true; return [p.projectName,p.location?.name,p.projectmanager?.name,p.contractor].some(v=>(v||'').toLowerCase().includes(srch)); })\r\n      .sort((a,b)=>{ const pick=o=>{ switch(sortBy){ case 'location':return o.location?.name||''; case 'manager':return o.projectmanager?.name||''; case 'status':return o.status||''; case 'startDate': return o.startDate? new Date(o.startDate).getTime():0; default: return o.projectName||'';} }; const av=pick(a); const bv=pick(b); if(av===bv) return 0; return (av>bv?1:-1)*(sortOrder==='asc'?1:-1); }); return subset; },[baseProjects,filter,deferredSearch,sortBy,sortOrder]);\r\n\r\n  useEffect(()=>{ setPage(1); },[filter,deferredSearch,sortBy,sortOrder]);\r\n\r\n  const totalItems = filteredSorted.length; const totalPages=Math.max(1,Math.ceil(totalItems/pageSize)); const currentPage = Math.min(page,totalPages);\r\n  const paginatedProjects = useMemo(()=> filteredSorted.slice((currentPage-1)*pageSize, currentPage*pageSize),[filteredSorted,currentPage,pageSize]);\r\n\r\n  // counts derived from full baseProjects list so they don't change when switching filters\r\n  const counts = useMemo(()=>({\r\n    total: baseProjects.length,\r\n    ongoing: baseProjects.filter(p=>['ongoing','on going'].includes((p.status||'').toLowerCase())).length,\r\n    completed: baseProjects.filter(p=>(p.status||'').toLowerCase()==='completed').length,\r\n    pending: baseProjects.filter(p=>['pending','not started'].includes((p.status||'').toLowerCase())).length\r\n  }),[baseProjects]);\r\n\r\n  const Skeleton = ({n=8}) => (<div className={`projects-display ${viewMode}`}>{Array.from({length:n}).map((_,i)=>(<div key={i} className=\"project-card skeleton\"><div className=\"project-image-wrapper shimmer\"/><div className=\"project-content\"><div className=\"skeleton-line w60\"/><div className=\"skeleton-line w40\"/><div className=\"skeleton-line w80\"/><div className=\"skeleton-line w50\"/></div></div>))}</div>);\r\n\r\n  return (\r\n    <div className=\"dashboard-container no-inner-scroll am-projects-page\">\r\n      <AppHeader roleSegment=\"am\" />\r\n      <main className=\"dashboard-main auto-height\">\r\n        <div className=\"projects-container projects-light\">\r\n          <div className=\"page-header enhanced\">\r\n            <div className=\"page-title-section\">\r\n              <h1 className=\"page-title\">My Projects</h1>\r\n              <p className=\"page-subtitle\">Manage and monitor your portfolio</p>\r\n            </div>\r\n            <div className=\"page-actions\">\r\n              <button className=\"add-project-btn\" onClick={()=>navigate('/am/addproj')} aria-label=\"Add Project\"><FaProjectDiagram/><span>Add Project</span></button>\r\n              <div className=\"search-container\">\r\n                <FaSearch className=\"search-icon\"/>\r\n                <input value={searchTerm} onChange={e=>setSearchTerm(e.target.value)} placeholder=\"Search by name, location, manager...\" className=\"search-input\" />\r\n              </div>\r\n              <div className=\"view-mode-container\">\r\n                <button aria-label=\"Grid view\" className={`view-mode-btn ${viewMode==='grid'?'active':''}`} onClick={()=>setViewMode('grid')}><FaTh/></button>\r\n                <button aria-label=\"List view\" className={`view-mode-btn ${viewMode==='list'?'active':''}`} onClick={()=>setViewMode('list')}><FaList/></button>\r\n              </div>\r\n              <div className=\"sort-container\">\r\n                <select value={sortBy} onChange={e=>setSortBy(e.target.value)} className=\"sort-select\">\r\n                  <option value=\"name\">Name</option>\r\n                  <option value=\"location\">Location</option>\r\n                  <option value=\"manager\">Manager</option>\r\n                  <option value=\"status\">Status</option>\r\n                  <option value=\"startDate\">Start Date</option>\r\n                </select>\r\n                <button aria-label=\"Toggle sort order\" className=\"sort-order-btn\" onClick={()=>setSortOrder(o=>o==='asc'?'desc':'asc')}>{sortOrder==='asc'? <FaChevronUp/> : <FaChevronDown/>}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"filter-bar below-header\">\r\n            <button className={`filter-chip ${filter==='all'?'active':''}`} onClick={()=>setFilter('all')}>All <span className=\"badge\">{counts.total}</span></button>\r\n            <button className={`filter-chip ${filter==='ongoing'?'active':''}`} onClick={()=>setFilter('ongoing')}>Ongoing <span className=\"badge\">{counts.ongoing}</span></button>\r\n            <button className={`filter-chip ${filter==='completed'?'active':''}`} onClick={()=>setFilter('completed')}>Completed <span className=\"badge\">{counts.completed}</span></button>\r\n            <button className={`filter-chip ${filter==='pending'?'active':''}`} onClick={()=>setFilter('pending')}>Pending <span className=\"badge\">{counts.pending}</span></button>\r\n          </div>\r\n          {error && <div className=\"error-state compact\"><FaClock/><span>{error}</span></div>}\r\n          {loading && !error && <Skeleton n={8} />}\r\n          {!loading && !error && (\r\n            <>\r\n            <div className={`projects-display ${viewMode}`}>\r\n              {paginatedProjects.length===0 && (\r\n                <div className=\"empty-state full\">\r\n                  <FaProjectDiagram size={42}/>\r\n                  <h3>No projects found</h3>\r\n                  <p>{searchTerm||filter!=='all' ? 'Adjust search text, filters or sorting.' : 'No projects assigned yet.'}</p>\r\n                </div>\r\n              )}\r\n              {paginatedProjects.map(p=>{ const meta=statusMeta(p.status); return (\r\n                <div key={p._id} className={`project-card ${viewMode}`} onClick={()=>navigate(`/am/projects/${p._id}`)} role=\"button\" tabIndex={0} onKeyDown={e=>{ if(e.key==='Enter') navigate(`/am/projects/${p._id}`); }}>\r\n                  <div className=\"project-image-wrapper\">\r\n                    <img loading=\"lazy\" src={p.photos?.[0] || 'https://placehold.co/640x360?text=No+Photo'} alt={p.projectName} className=\"project-image\" />\r\n                    <div className=\"status-badge\" style={{backgroundColor:meta.color}}><meta.Icon size={12}/><span>{meta.label}</span></div>\r\n                  </div>\r\n                  <div className=\"project-content\">\r\n                    <h3 className=\"project-name clamp\">{p.projectName||'Untitled'}</h3>\r\n                    <div className=\"project-location\"><FaMapMarkerAlt/><span>{p.location?.name || 'No Location'}</span></div>\r\n                    <ul className=\"meta-list\">\r\n                      <li><FaUserTie/><span>{p.projectmanager?.name||'Unassigned'}</span></li>\r\n                      <li><FaBuilding/><span>{p.contractor||'No Contractor'}</span></li>\r\n                      <li><FaCalendarAlt/><span>{p.startDate && p.endDate ? `${dateFmt(p.startDate)} - ${dateFmt(p.endDate)}` : (p.startDate? dateFmt(p.startDate): 'No timeline')}</span></li>\r\n                      <li><FaUsersIcon/><span>{Array.isArray(p.manpower)&&p.manpower.length>0 ? `${p.manpower.length} manpower` : 'No manpower'}</span></li>\r\n                      {p.budget && <li><FaMoneyBillWave/><span>{currencyFmt.format(p.budget)}</span></li>}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              ); })}\r\n            </div>\r\n            {paginatedProjects.length>0 && (\r\n              <div className=\"pagination-bar\">\r\n                <div className=\"pagination-left\">\r\n                  <span className=\"pagination-info\">Showing {(currentPage-1)*pageSize + 1}-{Math.min(currentPage*pageSize,totalItems)} of {totalItems}</span>\r\n                  <label className=\"page-size-select-label\"><span>Per page:</span>\r\n                    <select value={pageSize} onChange={e=>{ setPageSize(parseInt(e.target.value)||12); setPage(1); }} className=\"page-size-select\">{[6,12,18,24,36].map(sz=> <option key={sz} value={sz}>{sz}</option>)}</select>\r\n                  </label>\r\n                </div>\r\n                <div className=\"pagination-pages\">\r\n                  <button disabled={currentPage===1} onClick={()=>setPage(p=>Math.max(1,p-1))} className=\"page-btn\" aria-label=\"Previous page\">‹</button>\r\n                  {Array.from({length: totalPages}).slice(0, totalPages).map((_,i)=>{ const pageNumber=i+1; const show= pageNumber===1 || pageNumber===totalPages || Math.abs(pageNumber-currentPage)<=1; if(!show){ if(pageNumber===2 && currentPage>3) return <span key=\"start-ellipsis\" className=\"ellipsis\">…</span>; if(pageNumber===totalPages-1 && currentPage<totalPages-2) return <span key=\"end-ellipsis\" className=\"ellipsis\">…</span>; return null;} return (<button key={pageNumber} className={`page-btn ${pageNumber===currentPage?'active':''}`} onClick={()=>setPage(pageNumber)} aria-current={pageNumber===currentPage? 'page': undefined}>{pageNumber}</button>); })}\r\n                  <button disabled={currentPage===totalPages} onClick={()=>setPage(p=>Math.min(totalPages,p+1))} className=\"page-btn\" aria-label=\"Next page\">›</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AreaProj;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FaTachometerAlt, FaComments, FaBoxes, FaUsers, FaProjectDiagram, FaClipboardList } from 'react-icons/fa';\r\nimport '../style/pm_style/Pm_Dash.css';\r\n\r\nconst navItems = [\r\n  { to: '/am', icon: <FaTachometerAlt />, label: 'Dashboard' },\r\n  { to: '/am/chat', icon: <FaComments />, label: 'Chat' },\r\n  { to: '/am/matreq', icon: <FaBoxes />, label: 'Material' },\r\n  { to: '/am/manpower-requests', icon: <FaUsers />, label: 'Manpower' },\r\n  { to: '/am/viewproj', icon: <FaProjectDiagram />, label: 'Projects' },\r\n  { to: '/logs', icon: <FaClipboardList />, label: 'Logs' }\r\n];\r\n\r\nconst AmMaterialHeader = ({ title, subtitle }) => {\r\n  const [isHeaderCollapsed, setIsHeaderCollapsed] = useState(false);\r\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\r\n  const user = (()=>{ try { return JSON.parse(localStorage.getItem('user'))||null; } catch { return null; } })();\r\n  const userName = user?.name || 'AM';\r\n  const userRole = user?.role || 'Area Manager';\r\n  const location = useLocation();\r\n\r\n  useEffect(()=>{ const onScroll=()=>{ const st=window.pageYOffset||document.documentElement.scrollTop; setIsHeaderCollapsed(st>50); }; window.addEventListener('scroll',onScroll); return ()=>window.removeEventListener('scroll',onScroll); },[]);\r\n\r\n  return (\r\n    <header className={`dashboard-header ${isHeaderCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"header-top\">\r\n        <div className=\"logo-section\">\r\n          <img src={require('../../assets/images/FadzLogo1.png')} alt=\"FadzTrack Logo\" className=\"header-logo\" />\r\n          <h1 className=\"header-brand\">FadzTrack</h1>\r\n        </div>\r\n        <div className=\"user-profile\" onClick={()=>setProfileMenuOpen(o=>!o)}>\r\n          <div className=\"profile-avatar\">{userName.charAt(0).toUpperCase()}</div>\r\n          <div className={`profile-info ${isHeaderCollapsed ? 'hidden' : ''}`}>\r\n            <span className=\"profile-name\">{userName}</span>\r\n            <span className=\"profile-role\">{userRole}</span>\r\n          </div>\r\n          {profileMenuOpen && (\r\n            <div className=\"profile-dropdown\">\r\n              <button onClick={()=>{ localStorage.removeItem('token'); localStorage.removeItem('user'); window.location.href='/'; }} className=\"logout-btn\"><span>Logout</span></button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"header-bottom\">\r\n        <nav className=\"header-nav\">\r\n          {navItems.map(item => (\r\n            <Link key={item.to} to={item.to} className={`nav-item ${location.pathname.startsWith(item.to.replace('/:id','')) ? 'active':''}`}>\r\n              {item.icon}\r\n              <span className={isHeaderCollapsed ? 'hidden' : ''}>{item.label}</span>\r\n            </Link>\r\n          ))}\r\n        </nav>\r\n        <div className=\"header-page-titles\">\r\n          <h2 className=\"header-title\" style={{margin:0}}>{title}</h2>\r\n          <p className=\"header-subtitle\" style={{margin:0}}>{subtitle}</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AmMaterialHeader;\r\n","import React from 'react';\r\nimport MaterialRequestDetailView from '../material/MaterialRequestDetailView';\r\nimport AmMaterialHeader from './AmMaterialHeader';\r\n\r\nconst AmMatRequestDetail = () => (\r\n  <MaterialRequestDetailView\r\n    role=\"Area Manager\"\r\n    rootClass=\"am-request-detail\"\r\n    headerTitle=\"Material Request Detail\"\r\n    headerSubtitle=\"Approve or review final status\"\r\n    /* Removed customHeader to use unified AppHeader */\r\n  />\r\n);\r\n\r\nexport default AmMatRequestDetail;\r\n"],"names":["AreaDash","_user$_id","navigate","useNavigate","userRef","useRef","current","raw","localStorage","getItem","JSON","parse","user","userId","_id","userName","setUserName","useState","name","userRole","setUserRole","role","sidebarOpen","setSidebarOpen","projects","setProjects","allProjects","setAllProjects","enrichedAllProjects","setEnrichedAllProjects","loading","setLoading","materialRequests","setMaterialRequests","pendingRequests","setPendingRequests","requestsError","setRequestsError","assignedLocations","setAssignedLocations","expandedLocations","setExpandedLocations","metrics","setMetrics","totalProjects","activeProjects","completedProjects","totalEngineers","averageProgress","projectContribs","setProjectContribs","useEffect","isActive","controller","AbortController","fetchProjects","async","setMetricsLoading","data","projectsData","api","get","signal","userProjects","filter","project","locations","some","loc","_project$location","location","contribMap","projectsWithProgress","Promise","all","map","totalPics","Array","isArray","pic","length","avg","latestDate","reportingPics","pendingPics","picContributions","repData","concat","list","reports","_sorted$","sorted","sort","a","b","Date","uploadedAt","byUploader","Map","r","key","uploadedBy","uploadedByName","has","set","distinct","values","percents","ai","Number","pic_contribution_percent_raw","legacy","pic_contribution_percent","isFinite","NaN","v","sum","reduce","s","Math","max","chosen","picId","picName","contribution","round","hasReport","lastReportDate","_unused2","contrib","_contrib$pendingPics","ld","p","toISOString","averageContribution","_unused3","finalPercent","min","_objectSpread","progress","value","e","error","console","fetchRequests","_error$response","response","status","_unused","fetchAssignedLocations","abort","extractLocId","id","enriched","_project$areamanager","_project$areamanager2","amId","areamanager","String","isDeleted","_project$projectmanag","locId","find","l","region","projectName","engineer","projectmanager","handler","_e$detail","projectId","detail","projectObj","prev","_unused4","window","addEventListener","removeEventListener","normalizeStatus","arguments","undefined","toString","replace","trim","toLowerCase","uniqueProjects","proj","st","test","Set","size","acc","completed","prog","pending","_r$project","_r$project$location","_r$project2","toUpperCase","norm","includes","_proj$location","pid","toggleSidebar","projectsByLocation","_project$location2","locationId","_project$location3","_project$location4","push","projectMetrics","setProjectMetrics","metricsLoading","isCompleted","_project$location6","_project$location5","fallbackProgress","now","getTime","picNames","pm","area","waitingForAll","getTimelineStatus","stage","statusLower","_jsxs","className","children","_jsx","AppHeader","roleSegment","extraLeft","onClick","FaBars","FaHardHat","FaChevronLeft","Object","entries","_ref","locationData","FaMapMarkerAlt","FaChevronUp","FaChevronDown","Link","to","FaProjectDiagram","FaArrowRight","FaBoxes","FaChartBar","style","backgroundImage","metric","textDecoration","width","height","cx","cy","stroke","strokeWidth","fill","strokeDasharray","PI","strokeDashoffset","strokeLinecap","transform","FaUsers","FaCalendarAlt","toLocaleDateString","marginTop","display","gridTemplateColumns","gap","fontSize","background","padding","borderRadius","flexDirection","opacity","border","textTransform","color","_projectContribs$metr","c","slice","ResponsiveContainer","BarChart","margin","top","right","left","bottom","CartesianGrid","vertical","XAxis","dataKey","tick","axisLine","tickLine","YAxis","hide","domain","Tooltip","cursor","formatter","Bar","radius","textAlign","FaTruck","FaExclamationTriangle","normA","normB","aPendingAM","bPendingAM","createdAt","request","_request$materials","_request$project","_request$status","statusNorm","pendingAM","materials","m","materialName","quantity","join","FaCheckCircle","FaUserTie","FaBuilding","AmViewProject","useParams","reportOverrides","ProjectView","useUnifiedHeader","navPathOverrides","dashboard","chat","manpower","customHeader","generateCategoricalChart","chartName","GraphicalChild","defaultTooltipEventType","validateTooltipEventTypes","axisComponents","axisType","AxisComp","formatAxisMap","ProgressReport","selectedLocation","setSelectedLocation","profileMenuOpen","setProfileMenuOpen","handleDownload","reportId","log","src","require","alt","FaTachometerAlt","FaComments","FaClipboardList","alignItems","NotificationBell","charAt","handleLogout","onChange","target","period","file","submitted","report","handleBack","AreaManpowerReqDetails","_reqData$project","_reqData$createdBy","_reqData$project2","stored","reqData","setReqData","reviewMode","setReviewMode","approveLoading","setApproveLoading","selectedManpowers","setSelectedManpowers","availableManpowers","setAvailableManpowers","selectedArea","setSelectedArea","selectedProject","setSelectedProject","fetchRequest","_data$project","arr","requestedTypes","manpowers","mp","type","filtered","position","fetchAvailable","handleClickOutside","event","closest","document","removeItem","createdBy","acquisitionDate","duration","i","_Fragment","readOnly","marginBottom","defaultValue","mpId","selected","handleAddManpower","flex","sel","alert","minHeight","flexWrap","handleRemoveManpower","marginLeft","fontWeight","lineHeight","title","disabled","put","approvedBy","manpowerProvided","_error$response$data","message","description","justifyContent","confirm","_error$response2","_error$response2$data","handleReviewRequest","returnDate","AmMatRequestList","MaterialRequestListView","fetchUrl","detailLinkBase","rootClass","headerTitle","headerSubtitle","AreaManpowerList","requests","setRequests","setError","setFilter","searchTerm","currentPage","setCurrentPage","chats","initial","then","res","catch","err","locData","projData","requestsData","req","_req$project$location","fetchData","filteredRequests","_request$createdBy","matchesFilter","searchTarget","matchesSearch","totalPages","ceil","startIndex","paginatedRequests","tab","_request$createdBy2","_request$project2","from","_","num","_request$manpowers","_request$project3","backgroundColor","AreaAddproj","documents","setDocuments","budgetFiles","setBudgetFiles","eligiblePMs","setEligiblePMs","picUsers","setPicUsers","availablePICs","setAvailablePICs","assignedPICs","setAssignedPICs","searchPIC","setSearchPIC","staffUsers","setStaffUsers","availableStaff","setAvailableStaff","assignedStaff","setAssignedStaff","searchStaff","setSearchStaff","hrSiteUsers","setHrSiteUsers","availableHR","setAvailableHR","assignedHR","setAssignedHR","searchHR","setSearchHR","manpowerList","setManpowerList","searchManpower","setSearchManpower","availableManpower","setAvailableManpower","assignedManpower","setAssignedManpower","csvError","setCsvError","photos","setPhotos","isPhotoDrag","setIsPhotoDrag","isDocDrag","setIsDocDrag","isBudgetDrag","setIsBudgetDrag","showCsvHelp","setShowCsvHelp","formData","setFormData","staff","hrsite","contractor","contractorType","budget","startDate","endDate","budgetDisplay","setBudgetDisplay","pmRes","picRes","staffRes","hrRes","manpowerRes","fetchUsers","filteredAvailablePICs","u","filteredAvailableStaff","filteredAvailableHR","uniqueById","forEach","o","handleChange","prevState","parts","split","nextFormatted","formatBytes","bytes","floor","pow","toFixed","onPhotosSelected","useCallback","files","onDocsSelected","onBudgetSelected","f","existingKeys","merged","filteredAvailableManpower","assignedMp","submitting","setSubmitting","onKey","collapsedGroups","setCollapsedGroups","groupedManpower","useMemo","groups","total","totals","g","localeCompare","groupVisibleCounts","setGroupVisibleCounts","_unused5","visibleCountFor","pos","groupedAssignedManpower","keys","k","onLogout","onSubmit","preventDefault","toast","form","FormData","append","post","headers","state","justCreated","result","htmlFor","placeholder","required","marginRight","inputMode","val","intPartRaw","decPartRaw","intPartLimited","withCommas","decPart","formatted","rawForState","outline","handleClearPICs","handleAssignPIC","handleRemovePIC","handleClearStaffAll","handleAssignStaff","handleRemoveStaff","handleClearHRAll","handleAssignHR","handleRemoveHR","handleClearManpowerAll","seen","add","accept","Papa","header","skipEmptyLines","complete","csvData","results","errors","notFound","duplicatesInCSV","alreadyAssigned","invalid","matched","seenKeys","availableMap","row","idx","found","delete","matchedIds","success","details","getElementById","click","borderColor","toggleGroup","next","setItem","stringify","handleAssignManpower","loadMoreGroup","nextVal","_unused6","loadAllGroup","_unused7","onDragOver","onDragLeave","onDrop","dataTransfer","multiple","URL","createObjectURL","handleRemovePhoto","index","pop","substring","handleRemoveDoc","handleRemoveBudget","overflowX","autoFocus","AreaProj","viewMode","setViewMode","setSearchTerm","deferredSearch","useDeferredValue","sortBy","setSortBy","sortOrder","setSortOrder","page","setPage","pageSize","setPageSize","areaManagerId","active","currencyFmt","Intl","NumberFormat","currency","maximumFractionDigits","dateFmt","d","month","day","year","baseProjects","filteredSorted","srch","_p$location","_p$projectmanager","pick","_o$location","_o$projectmanager","av","bv","totalItems","paginatedProjects","counts","ongoing","Skeleton","n","FaSearch","FaTh","FaList","FaClock","_p$photos","_p$location2","_p$projectmanager2","meta","statusRaw","Icon","label","statusMeta","tabIndex","onKeyDown","FaUsersIcon","FaMoneyBillWave","format","parseInt","sz","pageNumber","abs","AmMatRequestDetail","MaterialRequestDetailView"],"sourceRoot":""}